"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_core_geometry_support_normalizeUtils_js-node_modules_arcgis_core_-9af883"],{

/***/ "./node_modules/@arcgis/core/geometry/support/normalizeUtils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/core/geometry/support/normalizeUtils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getDenormalizedExtent": () => (/* binding */ P),
/* harmony export */   "normalizeCentralMeridian": () => (/* binding */ b),
/* harmony export */   "normalizeMapX": () => (/* binding */ v),
/* harmony export */   "straightLineDensify": () => (/* binding */ w)
/* harmony export */ });
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config.js */ "./node_modules/@arcgis/core/config.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _Polygon_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Polygon.js */ "./node_modules/@arcgis/core/geometry/Polygon.js");
/* harmony import */ var _Polyline_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Polyline.js */ "./node_modules/@arcgis/core/geometry/Polyline.js");
/* harmony import */ var _normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./normalizeUtilsCommon.js */ "./node_modules/@arcgis/core/geometry/support/normalizeUtilsCommon.js");
/* harmony import */ var _spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./webMercatorUtils.js */ "./node_modules/@arcgis/core/geometry/support/webMercatorUtils.js");
/* harmony import */ var _rest_geometryService_cut_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../rest/geometryService/cut.js */ "./node_modules/@arcgis/core/rest/geometryService/cut.js");
/* harmony import */ var _rest_geometryService_simplify_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../rest/geometryService/simplify.js */ "./node_modules/@arcgis/core/rest/geometryService/simplify.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const m=_core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.geometry.support.normalizeUtils");function g(e){return"polygon"===e.type}function y(e){return"polygon"===e[0].type}function x(e){return"polyline"===e[0].type}function d(e){const t=[];let n=0,o=0;for(let s=0;s<e.length;s++){const r=e[s];let i=null;for(let e=0;e<r.length;e++)i=r[e],t.push(i),0===e?(n=i[0],o=n):(n=Math.min(n,i[0]),o=Math.max(o,i[0]));i&&t.push([(n+o)/2,0])}return t}function w(e,n){if(!(e instanceof _Polyline_js__WEBPACK_IMPORTED_MODULE_4__["default"]||e instanceof _Polygon_js__WEBPACK_IMPORTED_MODULE_3__["default"])){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw m.error(e),new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](e)}const i=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.getGeometryParts)(e),l=[];for(const t of i){const e=[];l.push(e),e.push([t[0][0],t[0][1]]);for(let o=0;o<t.length-1;o++){const s=t[o][0],r=t[o][1],i=t[o+1][0],l=t[o+1][1],f=Math.sqrt((i-s)*(i-s)+(l-r)*(l-r)),c=(l-r)/f,p=(i-s)/f,u=f/n;if(u>1){for(let l=1;l<=u-1;l++){const t=l*n,o=p*t+s,i=c*t+r;e.push([o,i])}const t=(f+Math.floor(u-1)*n)/2,o=p*t+s,i=c*t+r;e.push([o,i])}e.push([i,l])}}return g(e)?new _Polygon_js__WEBPACK_IMPORTED_MODULE_3__["default"]({rings:l,spatialReference:e.spatialReference}):new _Polyline_js__WEBPACK_IMPORTED_MODULE_4__["default"]({paths:l,spatialReference:e.spatialReference})}function j(e,t,n){if(t){const t=w(e,1e6);e=(0,_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_7__.webMercatorToGeographic)(t,!0)}return n&&(e=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.updatePolyGeometry)(e,n)),e}function M(e,t,n){if(Array.isArray(e)){const o=e[0];if(o>t){const n=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.offsetMagnitude)(o,t);e[0]=o+n*(-2*t)}else if(o<n){const t=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.offsetMagnitude)(o,n);e[0]=o+t*(-2*n)}}else{const o=e.x;if(o>t){const n=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.offsetMagnitude)(o,t);e=e.clone().offset(n*(-2*t),0)}else if(o<n){const t=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.offsetMagnitude)(o,n);e=e.clone().offset(t*(-2*n),0)}}return e}function R(e,t){let n=-1;for(let o=0;o<t.cutIndexes.length;o++){const s=t.cutIndexes[o],i=t.geometries[o],f=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.getGeometryParts)(i);for(let e=0;e<f.length;e++){const t=f[e];t.some((n=>{if(n[0]<180)return!0;{let n=0;for(let e=0;e<t.length;e++){const o=t[e][0];n=o>n?o:n}n=Number(n.toFixed(9));const o=-360*(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.offsetMagnitude)(n,180);for(let s=0;s<t.length;s++){const t=i.getPoint(e,s);i.setPoint(e,s,t.clone().offset(o,0))}return!0}}))}if(s===n){if(y(e))for(const t of (0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.getGeometryParts)(i))e[s]=e[s].addRing(t);else if(x(e))for(const t of (0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.getGeometryParts)(i))e[s]=e[s].addPath(t)}else n=s,e[s]=i}return e}async function b(t,n,r){if(!Array.isArray(t))return b([t],n);n&&"string"!=typeof n&&m.warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const u="string"==typeof n?n:n?.url??_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].geometryServiceUrl;let g,y,x,d,w,P,v,L,U=0;const z=[],A=[];for(const e of t)if(null!=e)if(g||(g=e.spatialReference,y=(0,_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.getInfo)(g),x=g.isWebMercator,P=x?102100:4326,d=_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.cutParams[P].maxX,w=_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.cutParams[P].minX,v=_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.cutParams[P].plus180Line,L=_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.cutParams[P].minus180Line),y)if("mesh"===e.type)A.push(e);else if("point"===e.type)A.push(M(e.clone(),d,w));else if("multipoint"===e.type){const t=e.clone();t.points=t.points.map((e=>M(e,d,w))),A.push(t)}else if("extent"===e.type){const t=e.clone()._normalize(!1,!1,y);A.push(t.rings?new _Polygon_js__WEBPACK_IMPORTED_MODULE_3__["default"](t):t)}else if(e.extent){const t=e.extent,n=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.offsetMagnitude)(t.xmin,w)*(2*d);let o=0===n?e.clone():(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.updatePolyGeometry)(e.clone(),n);t.offset(n,0),t.intersects(v)&&t.xmax!==d?(U=t.xmax>U?t.xmax:U,o=j(o,x),z.push(o),A.push("cut")):t.intersects(L)&&t.xmin!==w?(U=t.xmax*(2*d)>U?t.xmax*(2*d):U,o=j(o,x,360),z.push(o),A.push("cut")):A.push(o)}else A.push(e.clone());else A.push(e);else A.push(e);let S=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.offsetMagnitude)(U,d),k=-90;const C=S,I=new _Polyline_js__WEBPACK_IMPORTED_MODULE_4__["default"];for(;S>0;){const e=360*S-180;I.addPath([[e,k],[e,-1*k]]),k*=-1,S--}if(z.length>0&&C>0){const e=R(z,await (0,_rest_geometryService_cut_js__WEBPACK_IMPORTED_MODULE_8__.cut)(u,z,I,r)),n=[],o=[];for(let r=0;r<A.length;r++){const s=A[r];if("cut"!==s)o.push(s);else{const s=e.shift(),i=t[r];null!=i&&"polygon"===i.type&&i.rings&&i.rings.length>1&&s.rings.length>=i.rings.length?(n.push(s),o.push("simplify")):o.push(x?(0,_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_7__.geographicToWebMercator)(s):s)}}if(!n.length)return o;const s=await (0,_rest_geometryService_simplify_js__WEBPACK_IMPORTED_MODULE_9__.simplify)(u,n,r),i=[];for(let t=0;t<o.length;t++){const e=o[t];"simplify"!==e?i.push(e):i.push(x?(0,_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_7__.geographicToWebMercator)(s.shift()):s.shift())}return i}const X=[];for(let e=0;e<A.length;e++){const t=A[e];if("cut"!==t)X.push(t);else{const e=z.shift();X.push(!0===x?(0,_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_7__.geographicToWebMercator)(e):e)}}return X}function P(e){if(!e)return null;const t=e.extent;if(!t)return null;const n=e.spatialReference&&(0,_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.getInfo)(e.spatialReference);if(!n)return t;const[o,s]=n.valid,r=2*s,{width:i}=t;let l,{xmin:f,xmax:p}=t;if([f,p]=[p,f],"extent"===e.type||0===i||i<=s||i>r||f<o||p>s)return t;switch(e.type){case"polygon":if(!(e.rings.length>1))return t;l=d(e.rings);break;case"polyline":if(!(e.paths.length>1))return t;l=d(e.paths);break;case"multipoint":l=e.points}const u=t.clone();for(let c=0;c<l.length;c++){let e=l[c][0];e<0?(e+=s,p=Math.max(e,p)):(e-=s,f=Math.min(e,f))}return u.xmin=f,u.xmax=p,u.width<i?(u.xmin-=s,u.xmax-=s,u):t}function v(e,t){const n=(0,_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.getInfo)(t);if(n){const[t,o]=n.valid,s=o-t;if(e<t)for(;e<t;)e+=s;if(e>o)for(;e>o;)e-=s}return e}


/***/ }),

/***/ "./node_modules/@arcgis/core/geometry/support/normalizeUtilsCommon.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/geometry/support/normalizeUtilsCommon.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cutParams": () => (/* binding */ r),
/* harmony export */   "getGeometryParts": () => (/* binding */ o),
/* harmony export */   "offsetMagnitude": () => (/* binding */ i),
/* harmony export */   "updatePolyGeometry": () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _Polyline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Polyline.js */ "./node_modules/@arcgis/core/geometry/Polyline.js");
/* harmony import */ var _SpatialReference_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/* harmony import */ var _jsonUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new _Polyline_js__WEBPACK_IMPORTED_MODULE_0__["default"]({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:_SpatialReference_js__WEBPACK_IMPORTED_MODULE_1__["default"].WebMercator}),minus180Line:new _Polyline_js__WEBPACK_IMPORTED_MODULE_0__["default"]({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:_SpatialReference_js__WEBPACK_IMPORTED_MODULE_1__["default"].WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new _Polyline_js__WEBPACK_IMPORTED_MODULE_0__["default"]({paths:[[[180,-180],[180,180]]],spatialReference:_SpatialReference_js__WEBPACK_IMPORTED_MODULE_1__["default"].WGS84}),minus180Line:new _Polyline_js__WEBPACK_IMPORTED_MODULE_0__["default"]({paths:[[[-180,-180],[-180,180]]],spatialReference:_SpatialReference_js__WEBPACK_IMPORTED_MODULE_1__["default"].WGS84})}};function i(e,n){return Math.ceil((e-n)/(2*n))}function s(e,n){const t=o(e);for(const r of t)for(const e of r)e[0]+=n;return e}function o(e){return (0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_2__.isPolygon)(e)?e.rings:e.paths}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/ImageryTileLayer.js":
/*!**************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/ImageryTileLayer.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ J)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _PopupTemplate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../PopupTemplate.js */ "./node_modules/@arcgis/core/PopupTemplate.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_MultiOriginJSONSupport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/MultiOriginJSONSupport.js */ "./node_modules/@arcgis/core/core/MultiOriginJSONSupport.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/reactiveUtils.js */ "./node_modules/@arcgis/core/core/reactiveUtils.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/accessorSupport/decorators/enumeration.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _Layer_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Layer.js */ "./node_modules/@arcgis/core/layers/Layer.js");
/* harmony import */ var _mixins_ArcGISService_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./mixins/ArcGISService.js */ "./node_modules/@arcgis/core/layers/mixins/ArcGISService.js");
/* harmony import */ var _mixins_BlendLayer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mixins/BlendLayer.js */ "./node_modules/@arcgis/core/layers/mixins/BlendLayer.js");
/* harmony import */ var _mixins_CustomParametersMixin_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./mixins/CustomParametersMixin.js */ "./node_modules/@arcgis/core/layers/mixins/CustomParametersMixin.js");
/* harmony import */ var _mixins_ImageryTileMixin_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./mixins/ImageryTileMixin.js */ "./node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js");
/* harmony import */ var _mixins_OperationalLayer_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./mixins/OperationalLayer.js */ "./node_modules/@arcgis/core/layers/mixins/OperationalLayer.js");
/* harmony import */ var _mixins_PortalLayer_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./mixins/PortalLayer.js */ "./node_modules/@arcgis/core/layers/mixins/PortalLayer.js");
/* harmony import */ var _mixins_RefreshableLayer_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./mixins/RefreshableLayer.js */ "./node_modules/@arcgis/core/layers/mixins/RefreshableLayer.js");
/* harmony import */ var _mixins_ScaleRangeLayer_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./mixins/ScaleRangeLayer.js */ "./node_modules/@arcgis/core/layers/mixins/ScaleRangeLayer.js");
/* harmony import */ var _mixins_TemporalLayer_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./mixins/TemporalLayer.js */ "./node_modules/@arcgis/core/layers/mixins/TemporalLayer.js");
/* harmony import */ var _support_commonProperties_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./support/commonProperties.js */ "./node_modules/@arcgis/core/layers/support/commonProperties.js");
/* harmony import */ var _support_Field_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./support/Field.js */ "./node_modules/@arcgis/core/layers/support/Field.js");
/* harmony import */ var _support_rasterEnums_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./support/rasterEnums.js */ "./node_modules/@arcgis/core/layers/support/rasterEnums.js");
/* harmony import */ var _support_RasterFunction_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./support/RasterFunction.js */ "./node_modules/@arcgis/core/layers/support/RasterFunction.js");
/* harmony import */ var _support_rasterDatasets_FunctionRaster_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./support/rasterDatasets/FunctionRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/FunctionRaster.js");
/* harmony import */ var _support_rasterDatasets_RasterFactory_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./support/rasterDatasets/RasterFactory.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/RasterFactory.js");
/* harmony import */ var _support_rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./support/rasterFunctions/rasterFunctionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterFunctionHelper.js");
/* harmony import */ var _support_popupUtils_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../support/popupUtils.js */ "./node_modules/@arcgis/core/support/popupUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let _=class extends((0,_mixins_BlendLayer_js__WEBPACK_IMPORTED_MODULE_15__.BlendLayer)((0,_mixins_ScaleRangeLayer_js__WEBPACK_IMPORTED_MODULE_21__.ScaleRangeLayer)((0,_mixins_OperationalLayer_js__WEBPACK_IMPORTED_MODULE_18__.OperationalLayer)((0,_mixins_PortalLayer_js__WEBPACK_IMPORTED_MODULE_19__.PortalLayer)((0,_mixins_CustomParametersMixin_js__WEBPACK_IMPORTED_MODULE_16__.CustomParametersMixin)((0,_mixins_ImageryTileMixin_js__WEBPACK_IMPORTED_MODULE_17__.ImageryTileMixin)((0,_mixins_TemporalLayer_js__WEBPACK_IMPORTED_MODULE_22__.TemporalLayer)((0,_mixins_ArcGISService_js__WEBPACK_IMPORTED_MODULE_14__.ArcGISService)((0,_mixins_RefreshableLayer_js__WEBPACK_IMPORTED_MODULE_20__.RefreshableLayer)((0,_core_MultiOriginJSONSupport_js__WEBPACK_IMPORTED_MODULE_4__.MultiOriginJSONMixin)(_Layer_js__WEBPACK_IMPORTED_MODULE_13__["default"]))))))))))){constructor(...e){super(...e),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAbortError).then((()=>this._openRaster(r)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const e=[new _support_Field_js__WEBPACK_IMPORTED_MODULE_24__["default"]({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new _support_Field_js__WEBPACK_IMPORTED_MODULE_24__["default"]({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:r}=this,t=r?.attributeTable,s=null!=t?t.fields:null,i="Raster.";if(s){const r=s.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name=i+e.name,r}));e.push(...r)}const o=r?.dataType,a=r?.multidimensionalInfo;if(("vector-magdir"===o||"vector-uv"===o)&&null!=a){const r=a.variables[0].unit?.trim(),t="Magnitude"+(r?` (${r})`:"");e.push(new _support_Field_js__WEBPACK_IMPORTED_MODULE_24__["default"]({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),e.push(new _support_Field_js__WEBPACK_IMPORTED_MODULE_24__["default"]({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return e}createPopupTemplate(e){const{rasterFields:r}=this,t=new Set(r.map((({name:e})=>e)).filter((e=>"raster.servicepixelvalue.raw"!==e.toLowerCase())));return (0,_support_popupUtils_js__WEBPACK_IMPORTED_MODULE_30__.createPopupTemplate)({fields:r,title:this.title},{...e,visibleFieldNames:t})}async generateRasterInfo(e,r){if(!(e=(0,_core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_8__.ensureClass)(_support_RasterFunction_js__WEBPACK_IMPORTED_MODULE_26__["default"],e)))return this.rasterInfo;try{const t={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>t[e.url]=e));const s=(0,_support_rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_29__.create)(e.functionDefinition?.toJSON()??e.toJSON(),t),i=new _support_rasterDatasets_FunctionRaster_js__WEBPACK_IMPORTED_MODULE_27__["default"]({rasterFunction:s});return await i.open(r),i.rasterInfo}catch(s){if(s instanceof _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"])throw s;throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("imagery-tile-layer","the given raster function is not supported")}}write(e,r){const s=this._primaryRasters[0]??this.raster;if(this.loaded?"RasterTileServer"===s.datasetFormat&&("Raster"===s.tileType||"Map"===s.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,r);if(r&&r.messages){const e=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let r=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),"Function"===this.raster.datasetFormat?(r=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:r}=this,i=[this.url];r&&(0,_support_rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_29__.getPrimaryRasterUrls)(r.toJSON(),i);const a=await Promise.all(i.map((r=>_support_rasterDatasets_RasterFactory_js__WEBPACK_IMPORTED_MODULE_28__["default"].open({url:r,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e})))),n=a.findIndex((e=>null==e));if(n>-1)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("imagery-tile-layer:open",`cannot open raster: ${i[n]}`);if(this._primaryRasters=a,r){const e={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((r=>e[r.url]=r));const i=(0,_support_rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_29__.create)(r.functionDefinition?.toJSON()??r.toJSON(),e),n=new _support_rasterDatasets_FunctionRaster_js__WEBPACK_IMPORTED_MODULE_27__["default"]({rasterFunction:i});try{await n.open(),this.raster=n}catch(o){const e=_core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger(this);o instanceof _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]&&e.error("imagery-tile-layer:open",o.message),e.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=a[0]}}else this.raster=a[0]}const i=this.raster.rasterInfo;if(!i)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",r?i:this._primaryRasters[0].rasterInfo),this._set("spatialReference",i.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}else this.read({tileInfo:this.rasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__.watch)((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)()],_.prototype,"_primaryRasters",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({type:[_core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_8__.Integer],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],_.prototype,"bandIds",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,_core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_11__.enumeration)(_support_rasterEnums_js__WEBPACK_IMPORTED_MODULE_25__.interpolationKebab)],_.prototype,"interpolation",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)(_support_commonProperties_js__WEBPACK_IMPORTED_MODULE_23__.legendEnabled)],_.prototype,"legendEnabled",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],_.prototype,"isReference",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({type:["show","hide"]})],_.prototype,"listMode",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({json:{read:!0,write:!0}})],_.prototype,"blendMode",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)()],_.prototype,"sourceJSON",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],_.prototype,"version",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({readOnly:!0,json:{read:!1}})],_.prototype,"type",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({type:["ArcGISTiledImageServiceLayer"]})],_.prototype,"operationalLayerType",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,r,t){r[t]=!e}}}})],_.prototype,"popupEnabled",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({type:_PopupTemplate_js__WEBPACK_IMPORTED_MODULE_1__["default"],json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],_.prototype,"popupTemplate",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({readOnly:!0})],_.prototype,"defaultPopupTemplate",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({readOnly:!0,type:[_support_Field_js__WEBPACK_IMPORTED_MODULE_24__["default"]]})],_.prototype,"fields",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({readOnly:!0,type:[_support_Field_js__WEBPACK_IMPORTED_MODULE_24__["default"]]})],_.prototype,"rasterFields",null),_=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_12__.subclass)("esri.layers.ImageryTileLayer")],_);const J=_;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImageryTileMixin": () => (/* binding */ V)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _rasterRenderers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../rasterRenderers.js */ "./node_modules/@arcgis/core/rasterRenderers.js");
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_reader_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/accessorSupport/decorators/reader.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/reader.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../support/arcgisLayerUrl.js */ "./node_modules/@arcgis/core/layers/support/arcgisLayerUrl.js");
/* harmony import */ var _support_commonProperties_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../support/commonProperties.js */ "./node_modules/@arcgis/core/layers/support/commonProperties.js");
/* harmony import */ var _support_DimensionalDefinition_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../support/DimensionalDefinition.js */ "./node_modules/@arcgis/core/layers/support/DimensionalDefinition.js");
/* harmony import */ var _support_MultidimensionalSubset_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../support/MultidimensionalSubset.js */ "./node_modules/@arcgis/core/layers/support/MultidimensionalSubset.js");
/* harmony import */ var _support_RasterFunction_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../support/RasterFunction.js */ "./node_modules/@arcgis/core/layers/support/RasterFunction.js");
/* harmony import */ var _support_RasterJobHandler_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../support/RasterJobHandler.js */ "./node_modules/@arcgis/core/layers/support/RasterJobHandler.js");
/* harmony import */ var _support_TileInfo_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../support/TileInfo.js */ "./node_modules/@arcgis/core/layers/support/TileInfo.js");
/* harmony import */ var _support_rasterDatasets_FunctionRaster_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../support/rasterDatasets/FunctionRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/FunctionRaster.js");
/* harmony import */ var _support_rasterDatasets_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../support/rasterDatasets/multidimensionalUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/multidimensionalUtils.js");
/* harmony import */ var _support_rasterFunctions_clipUtils_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../support/rasterFunctions/clipUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/clipUtils.js");
/* harmony import */ var _support_rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../support/rasterFunctions/rasterFunctionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterFunctionHelper.js");
/* harmony import */ var _support_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../support/rasterFunctions/rasterProjectionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js");
/* harmony import */ var _support_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../support/rasterFunctions/stretchUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");
/* harmony import */ var _support_rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../support/rasterFunctions/vectorFieldUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/vectorFieldUtils.js");
/* harmony import */ var _renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../renderers/support/rasterRendererHelper.js */ "./node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js");
/* harmony import */ var _renderers_support_RasterSymbolizer_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../renderers/support/RasterSymbolizer.js */ "./node_modules/@arcgis/core/renderers/support/RasterSymbolizer.js");
/* harmony import */ var _rest_support_ImageHistogramParameters_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../rest/support/ImageHistogramParameters.js */ "./node_modules/@arcgis/core/rest/support/ImageHistogramParameters.js");
/* harmony import */ var _views_2d_engine_flow_dataUtils_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../../views/2d/engine/flow/dataUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const B=_core_Logger_js__WEBPACK_IMPORTED_MODULE_5__["default"].getLogger("esri.layers.mixins.ImageryTileMixin"),V=o=>{let V=class extends o{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===t[0]?.raster?.datasetFormat}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){"none"===t?.functionName?.toLowerCase()&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}set url(t){this._set("url",(0,_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_13__.sanitizeUrl)(t,B))}set renderer(t){null==t&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,e,r){const n=e?.layerDefinition?.drawingInfo?.renderer;return (0,_rasterRenderers_js__WEBPACK_IMPORTED_MODULE_2__.read)(n,r)||void 0}async convertVectorFieldData(t,e){if(null==t||!this.rasterInfo)return null;const r=this._rasterJobHandler.instance,i=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:t,dataType:i},e):(0,_support_rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_26__.convertVectorFieldData)(t,i)}async computeStatisticsHistograms(t,e){t=(0,_core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_7__.ensureClass)(_rest_support_ImageHistogramParameters_js__WEBPACK_IMPORTED_MODULE_29__["default"],t).clone();const{rasterInfo:r}=this,{geometry:i}=t;if(null==i)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_4__["default"]("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let n=i;const{spatialReference:o}=r;i.spatialReference.equals(o)||(await (0,_support_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_24__.load)(),n="extent"===i.type?(0,_support_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_24__.projectExtent)(i,o):(0,_support_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_24__.projectPolygon)(i,o));const a=t.pixelSize??new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_32__["default"]({x:r.pixelSize.x,y:r.pixelSize.y,spatialReference:o}),{extent:u,width:c,height:d}=(0,_support_rasterFunctions_clipUtils_js__WEBPACK_IMPORTED_MODULE_22__.snapToRaster)(r,n,a),m=await this.fetchPixels(u,c,d,{...e,interpolation:"nearest"});if(null==m.pixelBlock)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_4__["default"]("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const h=await (0,_support_rasterFunctions_clipUtils_js__WEBPACK_IMPORTED_MODULE_22__.clip)(m.pixelBlock,u,n),p=this._rasterJobHandler.instance;return p?p.computeStatisticsHistograms({pixelBlock:h},e):(0,_support_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_25__.computeStatisticsHistograms)(h)}async createFlowMesh(t,e){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(t,e):(0,_views_2d_engine_flow_dataUtils_js__WEBPACK_IMPORTED_MODULE_30__.createFlowMesh)(t.meshType,t.simulationSettings,t.flowData,null!=e.signal?e.signal:(new AbortController).signal)}normalizeRasterFetchOptions(t){const{multidimensionalInfo:e}=this.rasterInfo??{};if(null==e)return t;let r=t.multidimensionalDefinition||this.multidimensionalDefinition;null!=r&&r.length||(r=(0,_support_rasterDatasets_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_21__.getDefaultMultidimensionalDefinition)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const i=t.timeExtent||this.timeExtent;if(null!=r&&null!=i&&(null!=i.start||null!=i.end)){r=r.map((t=>t.clone()));const n=e.variables.find((({name:t})=>t===r[0].variableName))?.dimensions?.find((({name:t})=>"StdTime"===t)),s=r.find((({dimensionName:t})=>"StdTime"===t));if(!n||!s)return{...t,multidimensionalDefinition:null};const{start:o,end:a}=i,l=null==o?null:o.getTime(),u=null==a?null:a.getTime(),c=l??u,d=u??l;if(null!=n.values){const t=n.values.filter((t=>{if(Array.isArray(t)){if(c===d)return t[0]<=c&&t[1]>=c;const e=t[0]<=c&&t[1]>c||t[0]<d&&t[1]>=d,r=t[0]>=c&&t[1]<=d||t[0]<c&&t[1]>d;return e||r}return c===d?t===c:t>=c&&t<=d}));if(t.length){const e=t.sort(((t,e)=>{const r=Array.isArray(t)?t[0]:t,i=Array.isArray(t)?t[1]:t,n=Array.isArray(e)?e[0]:e,s=Array.isArray(e)?e[1]:e;if(c===d)return r-n;return Math.abs(i-d)-Math.abs(s-d)}))[0];s.values=[e]}else r=null}else if(n.hasRegularIntervals&&n.extent){const[t,e]=n.extent;c>e||d<t?r=null:s.values=c===d?[c]:[Math.max(t,c),Math.min(e,d)]}}return null!=r&&(0,_support_rasterDatasets_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_21__.hasExcludedVariableOrDimension)(r,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:r}}async updateRasterFunction(){if(!this.loaded||"imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){const t=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&t&&this._set("rasterFunction",_support_RasterFunction_js__WEBPACK_IMPORTED_MODULE_17__["default"].fromJSON(t)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let t,e=this.raster,r=!1;"Function"===e.datasetFormat?(t=e.primaryRasters.rasters,e=t[0],r=!0):t=[e];const{rasterFunction:i}=this;if(i){const r={raster:e};t.length>1&&t.forEach((t=>r[t.url]=t));const n=(0,_support_rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_23__.create)(i.functionDefinition?.toJSON()??i.toJSON(),r),s=new _support_rasterDatasets_FunctionRaster_js__WEBPACK_IMPORTED_MODULE_20__["default"]({rasterFunction:n});s.rasterJobHandler=this._rasterJobHandler.instance,await s.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=s}else this.raster=e,this._cachedRasterFunctionJson=null,await e.when();if(this._cachedRendererJson=null,!r&&!i)return;const{bandIds:n}=this,{bandCount:s}=this.raster.rasterInfo,o=n?.length?n.some((t=>t>=s)):s>=3;n&&(o||this.renderer&&"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:e}=this;if(!t||!e||!this.renderer)return;const{rasterInfo:r}=this.raster,i=(0,_support_rasterDatasets_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_21__.getDefaultVariablInfo)(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),n=i?.name,s=(0,_renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__.normalizeRendererJSON)({...this.renderer.toJSON(),variableName:n});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(s))return;const o=this._rasterJobHandler.instance;o&&(e.rasterInfo=(0,_renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__.getVariableRasterInfo)(r,n),e.rendererJSON=s,e.bind(),await o.updateSymbolizer(e),this._cachedRendererJson=s)}async applyRenderer(t,e){const r=t&&t.pixelBlock;if(!(null!=r&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const n=this._rasterJobHandler.instance,s=this.bandIds??[];return i=n?await n.symbolize({...t,simpleStretchParams:e,bandIds:s}):this.symbolizer.symbolize({...t,simpleStretchParams:e,bandIds:s}),i}getTileUrl(t,e,r){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${t}/${e}/${r}`:""}getCompatibleTileInfo(t,e,r=!1){if(!this.loaded||null==e)return null;if(r&&t.equals(this.spatialReference))return this.tileInfo;const i=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_12__.getInfo)(t);return _support_TileInfo_js__WEBPACK_IMPORTED_MODULE_19__["default"].create({size:256,spatialReference:t,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:e.xmin,y:e.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,e,r,i={}){if(L(this),i.requestAsImageElement){const s=this.getTileUrl(t,e,r);return (0,_request_js__WEBPACK_IMPORTED_MODULE_3__["default"])(s,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:i.signal}).then((t=>t.data))}const{rasterInfo:s}=this;if(null!=s.multidimensionalInfo&&null==(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition){const n=i.tileInfo||s.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,e,r,n),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),"raster-shaded-relief"===this.renderer?.type&&(i={...i,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,e,r,i)}async fetchPixels(t,e,r,i={}){return null!=this.rasterInfo.multidimensionalInfo&&null==(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),e=Math.round(e),r=Math.round(r),this.raster.fetchPixels(t,e,r,i))}async identify(t,e={}){const{raster:r,rasterInfo:i}=this;if(null!=i.multidimensionalInfo){if(!(i.hasMultidimensionalTranspose&&!!((0,_support_rasterDatasets_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_21__.isMultiSliceOrRangeDefinition)(e.multidimensionalDefinition)||e.transposedVariableName||e.timeExtent))&&null==(e=this.normalizeRasterFetchOptions(e)).multidimensionalDefinition)return{location:t,value:null}}const n=this.multidimensionalSubset?.areaOfInterest;if(n&&!n.contains(t))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_4__["default"]("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return r.identify(t,e)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.rasterInfo?.multidimensionalInfo;if(null==t||"standard-time"!==this.rasterInfo?.dataType)return!1;const e=this.multidimensionalDefinition,r=e?.[0]?.variableName;return t.variables.some((t=>t.name===r&&(!e?.[0].dimensionName||t.dimensions.some((t=>"StdTime"===t.name)))))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){const e=t??this.rasterInfo?.multidimensionalInfo;return (0,_support_rasterDatasets_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_21__.getSubsetVariablesFromMdInfo)(this.multidimensionalSubset,e)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,_support_rasterDatasets_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_21__.getDefaultMultidimensionalDefinition)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const t=new _support_RasterJobHandler_js__WEBPACK_IMPORTED_MODULE_18__["default"];return this._rasterJobHandler.connectionPromise=t.initialize().then((async()=>{L(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch((()=>{})),this.renderer&&this.updateRenderer()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){L(this);const{raster:t}=this,e=(0,_renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__.getDefaultInterpolation)(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",e)}}_configDefaultRenderer(t="no"){L(this);const{rasterInfo:e}=this.raster;!this.bandIds&&e.bandCount>1&&(this.bandIds=(0,_renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__.getDefaultBandCombination)(e));const r=(0,_support_rasterDatasets_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_21__.getDefaultVariablInfo)(e,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),i=r?.name;if(!this.renderer||"override"===t){const t=(0,_renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__.createDefaultRenderer)(e,{bandIds:this.bandIds,variableName:i}),r=e.statistics,n=r&&r.length>0?r[0]:null,s=n?.max??0,o=n?.min??0;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===t.type&&(s>1e24||o<-1e24)&&(t.dynamicRangeAdjustment=!0,t.statistics=null,"none"===t.stretchType&&(t.stretchType="min-max")),this.renderer=t}const n=(0,_renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__.normalizeRendererJSON)({...this.renderer.toJSON(),variableName:i}),s=(0,_renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__.getVariableRasterInfo)(e,i);this.symbolizer?(this.symbolizer.rendererJSON=n,this.symbolizer.rasterInfo=s):this.symbolizer=new _renderers_support_RasterSymbolizer_js__WEBPACK_IMPORTED_MODULE_28__["default"]({rendererJSON:n,rasterInfo:s});const o=this.symbolizer.bind();if(o.success){if("auto"===t){const{colormap:t}=this.raster.rasterInfo,e=this.renderer;if(null!=t&&"raster-colormap"===e.type){const t=(0,_renderers_support_rasterRendererHelper_js__WEBPACK_IMPORTED_MODULE_27__.createDefaultRenderer)(this.raster.rasterInfo);JSON.stringify(t)!==JSON.stringify(e)&&this._configDefaultRenderer("override")}else if("raster-stretch"===e.type){const t=this.bandIds?.length,r=e.statistics?.length;!e.dynamicRangeAdjustment&&r&&t&&r!==t&&this._configDefaultRenderer("override")}}}else B.warn("imagery-tile-mixin",o.error||"The given renderer is not supported by the layer."),"auto"===t&&this._configDefaultRenderer("override")}};function L(t){if(!t.raster||!t.rasterInfo)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_4__["default"]("imagery-tile","no raster")}return (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"_cachedRendererJson",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"_cachedRasterFunctionJson",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"_compatibleFullExtent",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"_isConstructedFromFunctionRaster",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"_rasterJobHandler",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"bandIds",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],V.prototype,"copyright",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)({json:{read:!1}})],V.prototype,"fullExtent",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"interpolation",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"ioConfig",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)({type:[_support_DimensionalDefinition_js__WEBPACK_IMPORTED_MODULE_15__["default"]],json:{write:!0}})],V.prototype,"multidimensionalDefinition",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)({type:_support_MultidimensionalSubset_js__WEBPACK_IMPORTED_MODULE_16__["default"],json:{write:!0}})],V.prototype,"multidimensionalSubset",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"raster",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)({type:_support_RasterFunction_js__WEBPACK_IMPORTED_MODULE_17__["default"],json:{name:"renderingRule",write:!0}})],V.prototype,"rasterFunction",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"rasterInfo",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"sourceJSON",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)({readOnly:!0,type:_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_31__["default"],json:{read:!1}})],V.prototype,"spatialReference",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)({type:_support_TileInfo_js__WEBPACK_IMPORTED_MODULE_19__["default"]})],V.prototype,"tileInfo",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)(_support_commonProperties_js__WEBPACK_IMPORTED_MODULE_14__.url)],V.prototype,"url",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)({types:_rasterRenderers_js__WEBPACK_IMPORTED_MODULE_2__.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const t="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:_rasterRenderers_js__WEBPACK_IMPORTED_MODULE_2__.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&"vector-field"!==t.type&&"flow"!==t.type})}}}}})],V.prototype,"renderer",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_reader_js__WEBPACK_IMPORTED_MODULE_10__.reader)("renderer")],V.prototype,"readRenderer",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_6__.property)()],V.prototype,"symbolizer",void 0),V=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_11__.subclass)("esri.layers.ImageryTileMixin")],V),V};


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ $)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/JSONSupport.js */ "./node_modules/@arcgis/core/core/JSONSupport.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/maybe.js */ "./node_modules/@arcgis/core/core/maybe.js");
/* harmony import */ var _core_Promise_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/Promise.js */ "./node_modules/@arcgis/core/core/Promise.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../arcgisLayerUrl.js */ "./node_modules/@arcgis/core/layers/support/arcgisLayerUrl.js");
/* harmony import */ var _commonProperties_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../commonProperties.js */ "./node_modules/@arcgis/core/layers/support/commonProperties.js");
/* harmony import */ var _DimensionalDefinition_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../DimensionalDefinition.js */ "./node_modules/@arcgis/core/layers/support/DimensionalDefinition.js");
/* harmony import */ var _LOD_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../LOD.js */ "./node_modules/@arcgis/core/layers/support/LOD.js");
/* harmony import */ var _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../RasterStorageInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js");
/* harmony import */ var _TileInfo_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../TileInfo.js */ "./node_modules/@arcgis/core/layers/support/TileInfo.js");
/* harmony import */ var _multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./multidimensionalUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/multidimensionalUtils.js");
/* harmony import */ var _RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./RawBlockCache.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/RawBlockCache.js");
/* harmony import */ var _rasterFormats_pixelRangeUtils_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../rasterFormats/pixelRangeUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFormats/pixelRangeUtils.js");
/* harmony import */ var _rasterFormats_RasterCodec_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../rasterFormats/RasterCodec.js */ "./node_modules/@arcgis/core/layers/support/rasterFormats/RasterCodec.js");
/* harmony import */ var _rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../rasterFunctions/pixelUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js");
/* harmony import */ var _rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../rasterFunctions/rasterProjectionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js");
/* harmony import */ var _rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../rasterFunctions/vectorFieldUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/vectorFieldUtils.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const N=8,V=256;let U=class extends((0,_core_Promise_js__WEBPACK_IMPORTED_MODULE_7__.EsriPromiseMixin)(_core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_4__.JSONSupport)){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.load)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:_TileInfo_js__WEBPACK_IMPORTED_MODULE_19__["default"].create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getWorldWidth)(e.spatialReference);return null!=t&&e.extent.width>=t/2}get _hasNoneOrGCSShiftTransform(){const{transform:e}=this.rasterInfo;return null==e||"gcs-shift"===e.type}set rasterJobHandler(e){this._set("rasterJobHandler",e),"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach((t=>t.rasterJobHandler=e))}set url(e){this._set("url",(0,_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_14__.sanitizeUrl)(e,_core_Logger_js__WEBPACK_IMPORTED_MODULE_5__["default"].getLogger(this)))}async open(e){throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,o={}){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(n,r.size[0],r.size[1],o)}async identify(e,t={}){e=(0,_core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_10__.ensureClass)(_geometry_Point_js__WEBPACK_IMPORTED_MODULE_28__["default"],e).clone().normalize();const{multidimensionalDefinition:i,timeExtent:o}=t,{rasterInfo:r}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:s}=r;let{transposedVariableName:l}=t;const a=null!=s&&n&&(null!=o||(0,_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_20__.isMultiSliceOrRangeDefinition)(i));if(a&&!l){l=null!=i&&i.length>0?i[0].variableName??void 0:s.variables[0].name,t={...t,transposedVariableName:l}}t=this._getRequestOptionsWithSliceId(t);const{spatialReference:m,extent:f}=r,{datumTransformation:u}=t;let h=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.projectPoint)(e,m,u);if(!f.intersects(h))return{location:h,value:null};if(null!=r.transform){const e=r.transform.inverseTransform(h);if(!r.nativeExtent.intersects(e))return{location:e,value:null};h=e}let p=0;const d=null!=l&&null!=s&&r.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(d)return e.identify(h,t);const{pixelSize:i}=r,o=3,n=i.x*o/2,s=i.y*o/2,l=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_27__["default"]({xmin:h.x-n,xmax:h.x+n,ymin:h.y-s,ymax:h.y+s,spatialReference:m}),a={interpolation:"nearest"},{pixelBlock:c}=await e.fetchPixels(l,o,o,a),{pixelBlock:f}=await this.fetchPixels(l,o,o,a);if(null==c)return{location:h,value:null};const u=Math.floor(o*o*.5),p=!c.mask||c.mask[u]?c.pixels.map((e=>e[u])):null;let x;return null!=f&&(x=!f.mask||f.mask[u]?f.pixels.map((e=>e[u])):void 0),{location:h,value:p,processedValue:x,pyramidLevel:0}}if(!d)if(t.srcResolution){p=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.snapPyramid)(t.srcResolution,r,this.ioConfig.sampling).pyramidLevel}else if(p=await this.computeBestPyramidLevelForLocation(e,t),null==p)return{location:h,value:null};const x=this.identifyPixelLocation(h,p,null,d);if(null===x)return{location:h,value:null};const{row:g,col:I,rowOffset:R,colOffset:T,blockWidth:b}=x,v=l??t.sliceId,P=(0,_RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__.getRasterId)(this.url,v),B=`${p}/${g}/${I}`;let M=(0,_RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__.getBlock)(P,null,B);null==M&&(M=this.fetchRawTile(p,g,I,t),(0,_RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__.putBlock)(P,null,B,M));const _=await M;if(null==_||!_.pixels?.length)return{location:h,value:null};const W=R*b+T;return this._processIdentifyResult(_,{srcLocation:h,position:W,pyramidLevel:p,useTransposedTile:!!d,requestSomeSlices:a,identifyOptions:t})}async fetchPixels(e,t,i,o={}){e=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.snapExtent)(e),o=this._getRequestOptionsWithSliceId(o);const{_hasNoneOrGCSShiftTransform:r}=this;if(o.requestRawData&&r)return this._fetchPixels(e,t,i,o);const n=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getWorldWidth)(e.spatialReference),s=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getWorldWrapCount)(e);if(null==n||0===s||1===s&&this._isGlobalWrappableSource&&r)return this._fetchPixels(e,t,i,o);if(s>=3)return{extent:e,pixelBlock:null};const l=[],{xmin:a,xmax:c}=e,m=Math.round(n/(c-a)*t),f=m-Math.round((n/2-a)/(c-a)*t);let u=0;const h=[];for(let y=0;y<=s;y++){const r=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_27__["default"]({xmin:0===y?a:-n/2,xmax:y===s?c-n*y:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===y?m-f:y===s?t-u:m;u+=p,h.push(p);const d=o.disableWrapAround&&y>0?null:this._fetchPixels(r,p,i,o);l.push(d)}const p=(await Promise.all(l)).map((e=>e?.pixelBlock));let d=null;const x={width:t,height:i};if(this.rasterJobHandler){d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:h},o)).pixelBlock}else d=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_24__.mosaic)(p,x,{blockWidths:h});return{extent:e,srcExtent:(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.projectExtent)(e,this.rasterInfo.spatialReference,o.datumTransformation),pixelBlock:d}}async fetchRawPixels(e,t,i,o={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,o),{nativeExtent:n,nativePixelSize:s,storageInfo:l}=this.rasterInfo,a=2**e,c=s.x*a,m=s.y*a,f=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_27__["default"]({xmin:n.xmin+c*t.x,xmax:n.xmin+c*(t.x+i.width-1),ymin:n.ymax-m*(t.y+i.height-1),ymax:n.ymax-m*t.y,spatialReference:n.spatialReference});if(!r)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:u,mosaicSize:h}=r;if(1===u.length&&null!=u[0]&&u[0].width===i.width&&u[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:r.pixelBlocks[0]};const p=e>0?l.pyramidBlockWidth:l.blockWidth,d=e>0?l.pyramidBlockHeight:l.blockHeight,x={x:t.x%p,y:t.y%d};let y;if(this.rasterJobHandler){y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:h,destDimension:i,clipOffset:x,clipSize:i,coefs:null,sampleSpacing:null,interpolation:o.interpolation,alignmentInfo:null,blockWidths:null},o)).pixelBlock}else y=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_24__.mosaic)(u,h,{clipOffset:x,clipSize:i});return{extent:f,srcExtent:f,pixelBlock:y}}fetchRawTile(e,t,o,r){throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return (0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.projectExtent)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,_rasterFormats_RasterCodec_js__WEBPACK_IMPORTED_MODULE_23__.decode)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,i,o=0){const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:l}=i;o=o??i.retryCount??this.ioConfig.retryCount;const a=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await (0,_request_js__WEBPACK_IMPORTED_MODULE_2__["default"])(e,{...i,query:{...s,...r},headers:{...l,...a}})}catch(c){if(o>0)return o--,this.request(e,i,o);throw c}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return null==t||null==e||0===e.length?null:(0,_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_20__.getSliceIndex)(e,t)}getTileExtentFromTileInfo(e,t,i,o){const r=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_6__.unwrapOrThrow)(o.lodAt(e));return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,o.origin,o.spatialReference,o.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),l=1/.0254*96*s;for(let e=0;e<=n;e++)r.push(new _LOD_js__WEBPACK_IMPORTED_MODULE_17__["default"]({level:n-e,resolution:s,scale:l})),s*=2,l*=2;const a=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_28__["default"]({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new _TileInfo_js__WEBPACK_IMPORTED_MODULE_19__["default"]({origin:a,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,o){const{width:r,height:n,nativeExtent:s,pixelSize:l,spatialReference:a}=e,c=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_28__["default"]({x:s.xmin,y:s.ymax,spatialReference:a});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const m=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[l],o);e.storageInfo=new _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_18__["default"]({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,o,r,n=0,s=2){if(1===r.length&&n>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<n;i++)e*=s,t*=s,r.push({x:e,y:t})}const l=[],{x:a,y:c}=o;for(let m=0;m<r.length;m++){const{x:o,y:n}=r[m];l.push({minCol:Math.floor((e.xmin-a+.1*o)/t/o),maxCol:Math.floor((e.xmax-a-.1*o)/t/o),minRow:Math.floor((c-e.ymax+.1*n)/i/n),maxRow:Math.floor((c-e.ymin-.1*n)/i/n)})}return l}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===e)return t;if(null!=i&&i.length)return i[e-1];const r=o**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,o){const{spatialReference:r,nativeExtent:n,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:l,origin:a,transposeInfo:c}=s,m=o&&null!=c?c.tileSize[0]:s.blockWidth,f=o&&null!=c?c.tileSize[1]:s.blockHeight,u=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.projectPoint)(e,r,i);if(!n.intersects(u))return null;if(t<0||t>l)return null;const h=this.getPyramidPixelSize(t),{x:p,y:d}=h,x=(a.y-u.y)/d/f,y=(u.x-a.x)/p/m,g=Math.min(f-1,Math.floor((x-Math.floor(x))*f)),I=Math.min(m-1,Math.floor((y-Math.floor(y))*m));return{pyramidLevel:t,row:Math.floor(x),col:Math.floor(y),rowOffset:g,colOffset:I,blockWidth:m,srcLocation:u}}getTileExtent(e,t,i,o,r,n){const[s,l]=n,a=o.x+i*s*e.x,c=a+s*e.x,m=o.y-t*l*e.y,f=m-l*e.y;return new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_27__["default"]({xmin:a,xmax:c,ymin:f,ymax:m,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const o=this.rasterInfo.storageInfo.blockBoundary[e];return!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i}async _fetchPixels(e,t,i,o={}){let r=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getWorldWrapCount)(e);if(r>=2)return{extent:e,pixelBlock:null};const n=this._getSourceDataInfo(e,t,i,o),{pyramidLevel:s,srcResolution:l,srcExtent:a,srcWidth:c,srcHeight:m,ul:f}=n;if(0===c||0===m)return{extent:e,srcExtent:a,pixelBlock:null};const{rasterInfo:u}=this,h=u.transform,p="gcs-shift"===h?.type,d=null!=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getWorldWidth)(e.spatialReference);!p&&d||(r=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getWorldWrapCount)(n.srcExtent,p));const x=await this._fetchRawTiles(s,f,{width:c,height:m,wrapCount:r},o);if(!x)return{extent:e,srcExtent:a,pixelBlock:null};const y=u.storageInfo,g=s>0?y.pyramidBlockWidth:y.blockWidth,I=s>0?y.pyramidBlockHeight:y.blockHeight;let{x:R,y:w}=u.pixelSize;if(s>0){const{pyramidResolutions:e,pyramidScalingFactor:t}=y;if(null!=e&&e[s-1])({x:R,y:w}=e[s-1]);else{const e=t**s;R*=e,w*=e}}const S=u.spatialReference,k=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_28__["default"]({x:R,y:w,spatialReference:S}),T=g===c&&I===m&&f.x%g==0&&f.y%I==0,b=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_28__["default"]({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),v=!e.spatialReference.equals(S),P=S.isGeographic?1e-9:1e-4,{datumTransformation:j}=o;if(!v&&T&&1===x.pixelBlocks.length&&g===t&&I===i&&this._isSameResolution(l,b,P))return{extent:e,srcExtent:a,srcTilePixelSize:k,pixelBlock:x.pixelBlocks[0]};const H=d&&null!=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getWorldWidth)(a.spatialReference)&&this._hasNoneOrGCSShiftTransform,z=o.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");z&&!this.rasterJobHandler&&await (0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.load)();const E=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:b.toJSON(),datumTransformation:j,rasterTransform:h,hasWrapAround:r>0||H,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:z},o):(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getProjectionOffsetGrid)({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:b,datumTransformation:j,rasterTransform:h,hasWrapAround:r>0||H,isAdaptive:!1,includeGCSGrid:z});let F;const O=!o.requestRawData,G={rows:E.spacing[0],cols:E.spacing[1]},q=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(s,x.extent.xmin):void 0,{pixelBlocks:N,mosaicSize:V,isPartiallyFilled:U}=x;let $=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:N,srcMosaicSize:V,destDimension:O?{width:t,height:i}:null,coefs:O?E.coefficients:null,sampleSpacing:O?G:null,projectDirections:z,gcsGrid:z?E.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:o.interpolation,alignmentInfo:q,blockWidths:null},o);({pixelBlock:F,localNorthDirections:$}=e)}else{const e=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_24__.mosaic)(N,V,{alignmentInfo:q});F=O?(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_24__.approximateTransform)(e,{width:t,height:i},E.coefficients,G,o.interpolation):e,z&&E.gcsGrid&&($=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_24__.getLocalArithmeticNorthRotations)({width:t,height:i},E.gcsGrid),F=(0,_rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_26__.convertToLocalDirections)(F,this.rasterInfo.dataType,$))}return o.requestRawData||z?{extent:e,srcExtent:a,srcTilePixelSize:k,pixelBlock:F,transformGrid:E,localNorthDirections:$,isPartiallyFilled:U}:{extent:e,srcExtent:a,srcTilePixelSize:k,pixelBlock:F}}async _fetchRawTiles(e,t,i,o){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:l}=this.getBlockWidthHeight(e);let{x:a,y:c}=t,{width:m,height:f,wrapCount:u}=i;const h=this._getRasterTileAlignmentInfo(e,0);o.buffer&&(a-=o.buffer.cols,c-=o.buffer.rows,m+=2*o.buffer.cols,f+=2*o.buffer.rows);let p=0,d=0,x=0;if(u&&null!=h){({worldColumnCountFromOrigin:d,originColumnOffset:x,rightPadding:p}=h);d*h.blockWidth-p>=a+m&&(p=0)}const y=Math.floor(a/s),g=Math.floor(c/l),I=Math.floor((a+m+p-1)/s),R=Math.floor((c+f+p-1)/l),w=n[e];if(!w)return null;const{minRow:S,minCol:k,maxCol:T,maxRow:b}=w;if(0===u&&(R<S||I<k||g>b||y>T))return null;const v=new Array;let P=!1;const B=null==this.ioConfig.allowPartialFill?o.allowPartialFill:this.ioConfig.allowPartialFill;for(let z=g;z<=R;z++)for(let t=y;t<=I;t++){let i=t;if(!o.disableWrapAround&&u&&null!=h&&d<=t&&(i=t-d-x),z>=S&&i>=k&&b>=z&&T>=i){const t=this._fetchRawTile(e,z,i,o);B?v.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{P=!0,e(null)}))}))):v.push(t)}else v.push(Promise.resolve(null))}if(0===v.length)return null;const M=await Promise.all(v),_={height:(R-g+1)*l,width:(I-y+1)*s},{spatialReference:W}=this.rasterInfo,C=this.getPyramidPixelSize(e),{x:j,y:H}=C;return{extent:new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_27__["default"]({xmin:r.x+y*s*j,xmax:r.x+(I+1)*s*j,ymin:r.y-(R+1)*l*H,ymax:r.y-g*l*H,spatialReference:W}),pixelBlocks:M,mosaicSize:_,isPartiallyFilled:P}}_isSameResolution(e,t,i){return Math.abs(e.x-t.x)<i&&Math.abs(e.y-t.y)<i}_fetchRawTile(e,t,i,o){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:n,minCol:s,maxCol:a,maxRow:c}=r;if(t<n||i<s||t>c||i>a)return Promise.resolve(null);const m=(0,_RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__.getRasterId)(this.url,o.sliceId),f=`${e}/${t}/${i}`;let u=(0,_RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__.getBlock)(m,o.registryId,f);if(null==u){const r=new AbortController;u=this.fetchRawTile(e,t,i,{...o,signal:r.signal}),(0,_RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__.putBlock)(m,o.registryId,f,u,r),u.catch((()=>(0,_RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__.deleteBlock)(m,o.registryId,f)))}return o.signal&&(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_8__.onAbort)(o,(()=>{(0,_RawBlockCache_js__WEBPACK_IMPORTED_MODULE_21__.decreaseRefCount)(m,o.registryId,f)})),u}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if(!(2===t&&"vector-magdir"===i||"vector-uv"===i)||2!==e?.length||!e[0]?.length)return null;const o=e[0].length;if("vector-magdir"===i){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[r,n]=e,s=[],l=[];for(let a=0;a<o;a++){const[e,t]=(0,_rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_26__.uvComponentToVector)([r[a],n[a]]);s.push(e),l.push(t)}return[s,l]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.getRasterDatasetAlignmentInfo)(this.rasterInfo)),null==this._rasterTileAlighmentInfo.pyramidsInfo?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,o={}){const r={datumTransformation:o.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};o.srcResolution&&(r.srcResolution=o.srcResolution,this._updateSourceDataInfo(e,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:l,pyramidLevel:a}=r,c=s/t,m=l/i,f=a<n&&c*m>=16,u=a===n&&this._requireTooManySrcTiles(s,l,t,i);if(f||u||(0===s||0===l)){const s=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_28__["default"]({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let l=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.projectResolution)(s,this.rasterInfo.spatialReference,e,r.datumTransformation);const u=!l||o.srcResolution&&l.x+l.y<o.srcResolution.x+o.srcResolution.y;if(f&&o.srcResolution&&u){const e=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(n-a+3>=e){const t=2**e;l={x:o.srcResolution.x*t,y:o.srcResolution.y*t}}}l&&(r.srcResolution=l,this._updateSourceDataInfo(e,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,t,i)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(e,t,i,o){const{tileInfo:r}=this.rasterInfo.storageInfo;return Math.ceil(e/r.size[0])*Math.ceil(t/r.size[1])>=V||e/i>N||t/o>N}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const{rasterInfo:i}=this,o=i.spatialReference,{srcResolution:r,datumTransformation:n}=t,{pyramidLevel:s,pyramidResolution:l,excessiveReading:a}=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.snapPyramid)(r,i,this.ioConfig.sampling);if(a)return;let c=t.srcExtent||(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_25__.projectExtent)(e,o,n);if(null==c)return;const m=i.transform;m&&(c=m.inverseTransform(c)),t.srcExtent=c;const{x:f,y:u}=i.storageInfo.origin,h=Math.floor((c.xmin-f)/l.x+.1),p=Math.floor((u-c.ymax)/l.y+.1),d=Math.floor((c.xmax-f)/l.x-.1),x=Math.floor((u-c.ymin)/l.y-.1),y=c.width<.1*l.x?0:d-h+1,g=c.height<.1*l.y?0:x-p+1;t.pyramidLevel=s,t.pyramidResolution=l,t.srcWidth=y,t.srcHeight=g,t.ul={x:h,y:p}}_getRequestOptionsWithSliceId(e){return null!=this.rasterInfo.multidimensionalInfo&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:o,pyramidLevel:r,useTransposedTile:n}=t,s=e.pixels[0].length/e.width/e.height;if(!(!e.mask||e.mask[o]))return{location:i,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(null==l||!n){const t=e.pixels.map((e=>e[o])),n={location:i,value:t,pyramidLevel:r},s=this._computeMagDirValues(t.map((e=>[e])));return s?.length&&(n.magdirValue=s.map((e=>e[0]))),n}let a=e.pixels.map((e=>e.slice(o*s,o*s+s))),c=this._computeMagDirValues(a);const{requestSomeSlices:m,identifyOptions:f}=t;let u=(0,_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_20__.createSlices)(l,f.transposedVariableName);if(m){const e=(0,_multidimensionalUtils_js__WEBPACK_IMPORTED_MODULE_20__.getSliceIds)(u,f.multidimensionalDefinition,f.timeExtent);a=a.map((t=>e.map((e=>t[e])))),c=c?.map((t=>e.map((e=>t[e])))),u=e.map((e=>u[e]))}const p=e.noDataValues||this.rasterInfo.noDataValue,d={pixels:a,pixelType:e.pixelType};let x;null!=p&&((0,_rasterFormats_pixelRangeUtils_js__WEBPACK_IMPORTED_MODULE_22__.convertNoDataToMask)(d,p),x=d.mask);return{location:i,value:null,dataSeries:u.map(((e,t)=>{const i={value:0===x?.[t]?null:a.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new _DimensionalDefinition_js__WEBPACK_IMPORTED_MODULE_16__["default"]({...e,isSlice:!0})))};return c?.length&&(i.magdirValue=[c[0][t],c[1][t]]),i})),pyramidLevel:r}}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)()],U.prototype,"_rasterTileAlighmentInfo",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)({readOnly:!0})],U.prototype,"_isGlobalWrappableSource",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)({readOnly:!0})],U.prototype,"_hasNoneOrGCSShiftTransform",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)()],U.prototype,"rasterJobHandler",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)(_commonProperties_js__WEBPACK_IMPORTED_MODULE_15__.url)],U.prototype,"url",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)({type:String,json:{write:!0}})],U.prototype,"datasetName",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)({type:String,json:{write:!0}})],U.prototype,"datasetFormat",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)()],U.prototype,"hasUniqueSourceStorageInfo",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)()],U.prototype,"rasterInfo",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)()],U.prototype,"ioConfig",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_9__.property)()],U.prototype,"sourceJSON",void 0),U=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_13__.subclass)("esri.layers.support.rasterDatasets.BaseRaster")],U);const $=U;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/CloudRaster.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/CloudRaster.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ S)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _LOD_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../LOD.js */ "./node_modules/@arcgis/core/layers/support/LOD.js");
/* harmony import */ var _RasterInfo_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../RasterInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterInfo.js");
/* harmony import */ var _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../RasterStorageInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js");
/* harmony import */ var _TileInfo_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../TileInfo.js */ "./node_modules/@arcgis/core/layers/support/TileInfo.js");
/* harmony import */ var _BaseRaster_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./BaseRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js");
/* harmony import */ var _DBFParser_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./DBFParser.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/DBFParser.js");
/* harmony import */ var _rasterTransforms_utils_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../rasterTransforms/utils.js */ "./node_modules/@arcgis/core/layers/support/rasterTransforms/utils.js");
/* harmony import */ var _rest_support_FeatureSet_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../rest/support/FeatureSet.js */ "./node_modules/@arcgis/core/rest/support/FeatureSet.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const g=new Map;g.set("int16","esriFieldTypeSmallInteger"),g.set("int32","esriFieldTypeInteger"),g.set("int64","esriFieldTypeInteger"),g.set("float32","esriFieldTypeSingle"),g.set("float64","esriFieldTypeDouble"),g.set("text","esriFieldTypeString");const y=8;let x=class extends _BaseRaster_js__WEBPACK_IMPORTED_MODULE_12__["default"]{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:r}=await this.request(this.url+"/conf.json",{signal:e?.signal});if(!this._validateHeader(r))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:o}=this._parseHeader(r);if("thematic"===o.dataType){const e=await this._fetchAuxiliaryInformation();o.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",o),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,i={}){const{transposeInfo:o}=this.rasterInfo.storageInfo,{transposedVariableName:s}=i,a=!(!o||!s),n=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const l=this._buildCacheFilePath(n,t,r,i.multidimensionalDefinition,s),f=this._getIndexRecordFromBundle(t,r,a),m=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!m)return null;const c=new Uint8Array(m.data),p=this._getTileEndAndContentType(c,f);if(0===p.recordSize)return null;const d=await this.request(l,{range:{from:p.position,to:p.position+p.recordSize},responseType:"array-buffer",signal:i.signal});if(!d)return null;const[u,h]=this._getTileSize(a);return this.decodePixelBlock(d.data,{width:u,height:h,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(e){const t=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&"RasterInfo"===e.type&&!t.some((t=>!e[t]))}_parseHeader(e){const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:i,colormap:l,blockWidth:f,blockHeight:m,firstPyramidLevel:c,maximumPyramidLevel:p}=e,g=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),x=e.extent.spatialReference,S=e.geodataXform?.spatialReference,I=new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_16__["default"](x?.wkid||x?.wkt?x:S);let w=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_17__["default"]({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:I});const _=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_18__["default"]({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:I}),v=Math.round((w.xmax-w.xmin)/_.x),b=Math.round((w.ymax-w.ymin)/_.y),z=this._parseTransform(e.geodataXform),T=z?w:null;z&&(w=z.forwardTransform(w),_.x=(w.xmax-w.xmin)/v,_.y=(w.ymax-w.ymin)/b);const k=e.properties??{},j=e.format.toLowerCase().replace("cache/",""),C=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_18__["default"](e.origin.x,e.origin.y,I);let R,F,P,H;if(l&&l.colors)for(R=[],F=0;F<l.colors.length;F++)P=l.colors[F],H=l.values?l.values[F]:F,R.push([H,255&P,P<<16>>>24,P<<8>>>24,P>>>24]);const D=e.LODInfos,L=[];for(F=0;F<D.levels.length;F++)L.push(new _LOD_js__WEBPACK_IMPORTED_MODULE_8__["default"]({level:D.levels[F],resolution:D.resolutions[F],scale:96/.0254*D.resolutions[F]}));const M=new _TileInfo_js__WEBPACK_IMPORTED_MODULE_11__["default"]({dpi:96,lods:L,format:j,origin:C,size:[f,m],spatialReference:I}),O={recordSize:y,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*y+64},B=[{maxCol:Math.ceil(v/f)-1,maxRow:Math.ceil(b/m)-1,minCol:0,minRow:0}];let $=2;if(p>0)for(F=0;F<p;F++)B.push({maxCol:Math.ceil(v/$/f)-1,maxRow:Math.ceil(b/$/m)-1,minCol:0,minRow:0}),$*=2;const N=e.mdInfo;let q=null;if(N&&k._yxs){const e=k._yxs;q={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:O,rasterInfo:new _RasterInfo_js__WEBPACK_IMPORTED_MODULE_9__["default"]({width:v,height:b,pixelType:t,bandCount:r,extent:w,nativeExtent:T,transform:z,spatialReference:I,pixelSize:_,keyProperties:k,statistics:g,histograms:i,multidimensionalInfo:N,colormap:R,storageInfo:new _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_10__["default"]({blockWidth:f,blockHeight:m,pyramidBlockWidth:f,pyramidBlockHeight:m,origin:C,tileInfo:M,transposeInfo:q,firstPyramidLevel:c,maximumPyramidLevel:p,blockBoundary:B})})}}_parseTransform(e){if(!(0,_rasterTransforms_utils_js__WEBPACK_IMPORTED_MODULE_14__.isTransformSupported)(e))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("cloudraster:open","the data contains unsupported geodata transform types");const r=(0,_rasterTransforms_utils_js__WEBPACK_IMPORTED_MODULE_14__.readTransform)(e);if("identity"===r.type)return null;if("polynomial"!==r.type||!r.forwardCoefficients?.length||!r.inverseCoefficients?.length)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),i=await Promise.all([t,r]);let o;if(i[0]){let e=i[0].fields;const t=i[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":g.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(o={fields:e,features:r})}}if(!o&&i[1]){o=_DBFParser_js__WEBPACK_IMPORTED_MODULE_13__["default"].parse(i[1]).recordSet}return _rest_support_FeatureSet_js__WEBPACK_IMPORTED_MODULE_15__["default"].fromJSON(o)}_buildCacheFilePath(e,t,r,i,o){const s=this._getPackageSize(!!o),a=Math.floor(t/s)*s,n=Math.floor(r/s)*s,l="R"+this._toHexString4(a)+"C"+this._toHexString4(n);let f="L";f+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:m}=this.rasterInfo,c=i?.[0];if(null==m||!c)return`${this.url}/_alllayers/${f}/${l}.bundle`;let p="_yxs";if(!o){p=m.variables.find((e=>e.name===c.variableName)).dimensions[0].values.indexOf(c.values[0]).toString(16);const e=4-p.length;for(let t=0;t<e;t++)p="0"+p;p="S"+p}const d=this._getVariableFolderName(o||c.variableName);return`${this.url}/_alllayers/${d}/${p}/${f}/${l}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&null!=t?t.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:r}=t;return e&&null!=r?r.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t,r=!1){const i=this._getPackageSize(r),o=i*(e%i)+t%i;if(o<0)throw new Error("Invalid level / row / col");return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let i,o=0;for(i=0;i<5;i++)o|=(255&r[i])<<8*i;const s=0xffffffffff&o;for(o=0,i=5;i<8;i++)o|=(255&r[i])<<8*(i-5);return{position:s,recordSize:0xffffffffff&o}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({readOnly:!0})],x.prototype,"storageInfo",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({type:String,json:{write:!0}})],x.prototype,"datasetFormat",void 0),x=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__.subclass)("esri.layers.support.rasterDatasets.CloudRaster")],x);const S=x;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/DBFParser.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/DBFParser.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _byteStreamUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byteStreamUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/byteStreamUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function t(e){const t=e.fields,r=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=i.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:i,features:a}}class r{static get supportedVersions(){return[5]}static parse(r){const n=new DataView(r),i=3&n.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=n.getUint32(4,!0),a=n.getUint16(8,!0),o=n.getUint16(10,!0),l={version:i,recordCount:s,headerByteCount:a,recordByteCount:o};let p=32;const g=[],u=[];let d;if(3===i){for(;13!==n.getUint8(p);)d=String.fromCharCode(n.getUint8(p+11)).trim(),g.push({name:(0,_byteStreamUtils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUTF8)(new Uint8Array(r,p,11)),type:d,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(d)],length:n.getUint8(p+16)}),p+=32;if(p+=1,g.length>0)for(;u.length<s&&r.byteLength-p>o;){const t=[];32===n.getUint8(p)?(p+=1,g.forEach((n=>{if("C"===n.type)t.push((0,_byteStreamUtils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUTF8)(new Uint8Array(r,p,n.length)).trim());else if("N"===n.type)t.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim(),10));else if("F"===n.type)t.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim()));else if("D"===n.type){const e=String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim();t.push(new Date(parseInt(e.substring(0,4),10),parseInt(e.substring(4,6),10)-1,parseInt(e.substring(6,8),10)))}p+=n.length})),u.push(t)):p+=o}}return{header:l,fields:g,records:u,recordSet:t({fields:g,records:u})}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/EphemeralBlockCache.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/EphemeralBlockCache.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t{constructor(t=15e3,e=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,e)}decreaseRefCount(t,e){const s=t+"/"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.refCount--,t.refCount<=0&&(r.delete(s),t.controller&&t.controller.abort()),t.refCount}return 0}getBlock(t,e){const s=t+"/"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.ts=Date.now(),t.refCount++,r.delete(s),r.set(s,t),t.block}return null}putBlock(t,e,s,r){const i=this._cachedBlocks,c=t+"/"+e;if(i.has(c)){const t=i.get(c);t.ts=Date.now(),t.refCount++}else i.set(c,{block:s,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(t,e){const s=this._cachedBlocks,r=t+"/"+e;s.has(r)&&s.delete(r)}updateMaxSize(t){this._size=t,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval((()=>{const e=Array.from(t),s=Date.now();for(let r=0;r<e.length&&e[r][1].ts<=s-this._duration;r++)t.delete(e[r][0]);0===t.size&&this._clearTimer()}),this._interval)}_trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const e=Array.from(t);for(let s=0;s<e.length-this._size;s++)t.delete(e[s][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/FunctionRaster.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/FunctionRaster.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _BaseRaster_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./BaseRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js");
/* harmony import */ var _rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../rasterFunctions/pixelUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js");
/* harmony import */ var _rest_support_FeatureSet_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../rest/support/FeatureSet.js */ "./node_modules/@arcgis/core/rest/support/FeatureSet.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let n=class extends _BaseRaster_js__WEBPACK_IMPORTED_MODULE_7__["default"]{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(t){await this.init();const{rasterFunction:r}=this;this.primaryRasters?.rasters?.length?r.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach((t=>t.rasterJobHandler=this.rasterJobHandler)));const{rasters:s,rasterIds:a}=this.primaryRasters,i=s.map((e=>e.rasterInfo?void 0:e.open(t)));await Promise.all(i);const n=s.map((({rasterInfo:t})=>t)),c=r.bind({rasterInfos:n,rasterIds:a});if(!c.success||0===n.length)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("raster-function:open",`cannot bind the function: ${c.error??""}`);const l="Table"===r.functionName?r:r.functionArguments?.raster;"Table"===l?.functionName&&(r.rasterInfo.attributeTable=_rest_support_FeatureSet_js__WEBPACK_IMPORTED_MODULE_9__["default"].fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const p=n[0];this.hasUniqueSourceStorageInfo=1===n.length||n.slice(1).every((t=>this._hasSameStorageInfo(t,p))),this.set("sourceJSON",s[0].sourceJSON),this.set("rasterInfo",r.rasterInfo)}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(t,e,r,s={}){const{rasters:a,rasterIds:o}=this.primaryRasters;let n=!1;const{interpolation:c}=s,l=this.rasterFunction.flatWebGLFunctionChain?.hasSurfaceFunction;!s.requestRawData&&"bilinear"!==c&&l&&(n=1===a.length&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:n});const p=a.map((a=>a.fetchPixels(t,e,r,s))),u=await Promise.all(p),m=u.map((t=>t.pixelBlock)),h=n||s.requestRawData?u.map((t=>t.srcTilePixelSize)):null;if(s.skipRasterFunction||m.every((t=>null==t)))return u[0];const f=u.find((t=>null!=t.pixelBlock))?.extent??t,d=this.rasterJobHandler?await this.rasterJobHandler.process({extent:f,primaryPixelBlocks:m,primaryPixelSizes:h,primaryRasterIds:o}):this.rasterFunction.process({extent:f,primaryPixelBlocks:m,primaryPixelSizes:h,primaryRasterIds:o}),{transformGrid:y}=u[0];if(!n||null==d||null==y)return{...u[0],pixelBlock:d};const x={rows:y.spacing[0],cols:y.spacing[1]};let b;if(this.rasterJobHandler){b=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[d],srcMosaicSize:{width:d.width,height:d.height},destDimension:{width:e,height:r},coefs:y.coefficients,sampleSpacing:x,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:c,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock}else b=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_8__.approximateTransform)(d,{width:e,height:r},y.coefficients,x,c);return{extent:t,srcExtent:u[0].srcExtent,pixelBlock:b}}_hasSameStorageInfo(t,e){const{storageInfo:r,pixelSize:s,spatialReference:a,extent:i}=t,{storageInfo:o,pixelSize:n,spatialReference:c,extent:l}=e;return s.x===n.x&&s.y===n.y&&a.equals(c)&&i.equals(l)&&r.blockHeight===o.blockHeight&&r.blockWidth===o.blockWidth&&r.maximumPyramidLevel===o.maximumPyramidLevel}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.property)({type:String,json:{write:!0}})],n.prototype,"datasetFormat",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.property)()],n.prototype,"tileType",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.property)()],n.prototype,"rasterFunction",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.property)()],n.prototype,"primaryRasters",void 0),n=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_6__.subclass)("esri.layers.support.rasterDatasets.FunctionRaster")],n);const c=n;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/ImageAuxRaster.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/ImageAuxRaster.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _BaseRaster_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./BaseRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js");
/* harmony import */ var _InMemoryRaster_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./InMemoryRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/InMemoryRaster.js");
/* harmony import */ var _pamParser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pamParser.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/pamParser.js");
/* harmony import */ var _rasterFormats_RasterCodec_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../rasterFormats/RasterCodec.js */ "./node_modules/@arcgis/core/layers/support/rasterFormats/RasterCodec.js");
/* harmony import */ var _rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../rasterFunctions/stretchUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");
/* harmony import */ var _rasterTransforms_PolynomialTransform_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../rasterTransforms/PolynomialTransform.js */ "./node_modules/@arcgis/core/layers/support/rasterTransforms/PolynomialTransform.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let h=class extends _BaseRaster_js__WEBPACK_IMPORTED_MODULE_9__["default"]{async open(t){await this.init();const e=await this._fetchData(t);let{spatialReference:s,statistics:r,histograms:a,transform:o}=await this._fetchAuxiliaryData(t);const i=!s;i&&(s=new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_15__["default"]({wkid:3857})),a?.length&&null==r&&(r=(0,_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_13__.estimateStatisticsFromHistograms)(a));const{width:l,height:m}=e;let c=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_16__["default"]({xmin:-.5,ymin:.5-m,xmax:l-.5,ymax:.5,spatialReference:s});const h=o?o.forwardTransform(c):c;let d=!0;if(o){const t=o.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(o=null,c=h)}const w=new _InMemoryRaster_js__WEBPACK_IMPORTED_MODULE_10__["default"]({data:{extent:h,nativeExtent:c,transform:o,pixelBlock:e,statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:i}});await w.open(),w.data=null,this._set("rasterInfo",w.rasterInfo),this._inMemoryRaster=w}fetchRawTile(t,e,s,r={}){return this._inMemoryRaster.fetchRawTile(t,e,s,r)}async _fetchData(t){const{data:s}=await this.request(this.url,{responseType:"array-buffer",signal:t?.signal}),r=(0,_rasterFormats_RasterCodec_js__WEBPACK_IMPORTED_MODULE_12__.getFormat)(s).toUpperCase();if("JPG"!==r&&"PNG"!==r&&"GIF"!==r&&"BMP"!==r)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const a=r.toLowerCase(),o="gif"===a||"bmp"===a||!(0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("ios"),i=await this.decodePixelBlock(s,{format:a,useCanvas:o,hasNoZlibMask:!0});if(null==i)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("image-aux-raster:open","the data cannot be decoded");return i}async _fetchAuxiliaryData(t){const e=t?.signal,a=this.ioConfig.skipExtensions??[],o=a.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),i=this.datasetFormat,n="JPG"===i?"jgw":"PNG"===i?"pgw":"BMP"===i?"bpw":null,m=n&&a.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),p=await (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.eachAlways)([o,m]);if(e?.aborted)throw (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.createAbortError)();const f=(0,_pamParser_js__WEBPACK_IMPORTED_MODULE_11__.parsePAMInfo)(p[0].value?.data);if(!f.transform){const t=p[1].value?p[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;f.transform=6===t?.length?new _rasterTransforms_PolynomialTransform_js__WEBPACK_IMPORTED_MODULE_14__["default"]({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null}return f}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__.property)({type:String,json:{write:!0}})],h.prototype,"datasetFormat",void 0),h=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_8__.subclass)("esri.layers.support.rasterDatasets.ImageAuxRaster")],h);const d=h;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ v)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/maybe.js */ "./node_modules/@arcgis/core/core/maybe.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _RasterInfo_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../RasterInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterInfo.js");
/* harmony import */ var _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../RasterStorageInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js");
/* harmony import */ var _TileInfo_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TileInfo.js */ "./node_modules/@arcgis/core/layers/support/TileInfo.js");
/* harmony import */ var _TilemapCache_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../TilemapCache.js */ "./node_modules/@arcgis/core/layers/support/TilemapCache.js");
/* harmony import */ var _BaseRaster_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./BaseRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js");
/* harmony import */ var _rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../rasterFunctions/pixelUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js");
/* harmony import */ var _rasterTransforms_GCSShiftTransform_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../rasterTransforms/GCSShiftTransform.js */ "./node_modules/@arcgis/core/layers/support/rasterTransforms/GCSShiftTransform.js");
/* harmony import */ var _rest_imageService_fetchRasterInfo_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../rest/imageService/fetchRasterInfo.js */ "./node_modules/@arcgis/core/rest/imageService/fetchRasterInfo.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let x=class extends _BaseRaster_js__WEBPACK_IMPORTED_MODULE_14__["default"]{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){await this.init();const r=e&&e.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:r});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const l=a.data;if(this.sourceJSON=l,!l)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!l.tileInfo)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const m=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=l.cacheType,null==this.tileType&&(m.includes(l.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===l.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=l.name?.slice(l.name.indexOf("/")+1)??"";const u=await this._fetchRasterInfo({signal:r});if(null==u)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("image-server-raster:open","cannot initialize image service");const h="Map"===this.tileType?g(l.tileInfo,l):_TileInfo_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(l.tileInfo);(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_3__.assertIsSome)(h);const[f,p]=this._computeMinMaxLOD(u,h),{extent:d,pixelSize:y}=u,x=.5/u.width*y.x,v=Math.max(y.x,y.y),{lods:S}=h;("Map"!==this.tileType&&0!==l.maxScale||Math.abs(y.x-y.y)>x||!S.some((e=>Math.abs(e.resolution-v)<x)))&&(y.x=y.y=f.resolution,u.width=Math.ceil((d.xmax-d.xmin)/y.x-.1),u.height=Math.ceil((d.ymax-d.ymin)/y.y-.1));const I=f.level-p.level,[w,j]=h.size,M=[],b=[];S.forEach(((e,t)=>{e.level>=p.level&&e.level<=f.level&&M.push({x:e.resolution,y:e.resolution}),t<S.length-1&&b.push(Math.round(10*e.resolution/S[t+1].resolution)/10)})),M.sort(((e,t)=>e.x-t.x));const T=this.computeBlockBoundary(d,w,j,h.origin,M,I),_=M.length>1?M.slice(1):null;let O;l.transposeInfo&&(O={tileSize:[l.transposeInfo.rows,l.transposeInfo.cols],packetSize:u.keyProperties?._yxs.PacketSize??0});const R=b.length<=1||b.length>=3&&b.slice(0,b.length-1).every((e=>e===b[0]))?b[0]??2:Math.round(10/(p.resolution/f.resolution)**(-1/I))/10;if(u.storageInfo=new _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_11__["default"]({blockWidth:h.size[0],blockHeight:h.size[1],pyramidBlockWidth:h.size[0],pyramidBlockHeight:h.size[1],pyramidResolutions:_,pyramidScalingFactor:R,compression:h.format,origin:h.origin,firstPyramidLevel:1,maximumPyramidLevel:I,tileInfo:h,transposeInfo:O,blockBoundary:T}),this._fixGCSShift(u),this._set("rasterInfo",u),l.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:u.storageInfo.tileInfo,parsedUrl:(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__.urlToObject)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new _TilemapCache_js__WEBPACK_IMPORTED_MODULE_13__.TilemapCache({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:r,extent:a}=this.rasterInfo,{transposeInfo:l}=r,o=null!=l&&!!s.transposedVariableName;if(this._slices&&!o&&null==s.sliceId)return null;const n=o?0:r.maximumPyramidLevel-e+this._levelOffset,c=`${this.url}/tile/${n}/${t}/${i}`,m=this._slices?o?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:h}=await this.request(c,{query:m,responseType:"array-buffer",signal:s.signal});if(!h)return null;const f=o?l.tileSize:r.tileInfo.size,p=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(null==p)return null;const d=r.blockBoundary[e];if("jpg"!==r.compression||i>d.minCol&&i<d.maxCol&&t>d.minRow&&t<d.maxRow)return p;const{origin:y,blockWidth:x,blockHeight:g}=r,{x:v,y:S}=this.getPyramidPixelSize(e),I=Math.round((a.xmin-y.x)/v)%x,w=Math.round((a.xmax-y.x)/v)%x||x,j=Math.round((y.y-a.ymax)/S)%g,M=Math.round((y.y-a.ymin)/S)%g||g,b=i===d.minCol?I:0,T=t===d.minRow?j:0,_=i===d.maxCol?w:x,O=t===d.maxRow?M:g;return (0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_15__.setValidBoundary)(p,{x:b,y:T},{width:_-b,height:O-T}),p}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));if(!i)return!0;return(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let a=r-s+this._levelOffset;const l=i.srcLocation;for(;a>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(a,i.row,i.col,t))break}catch{}if(a--,s++,i=this.identifyPixelLocation(l,s,t.datumTransformation),null===i)return null}return-1===a||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_18__["default"].fromJSON(t.spatialReference||e.spatialReference),a=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_19__["default"]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new _RasterInfo_js__WEBPACK_IMPORTED_MODULE_10__["default"]({width:i,height:s,bandCount:3,extent:_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_20__["default"].fromJSON(e),spatialReference:r,pixelSize:a,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=(0,_rest_imageService_fetchRasterInfo_js__WEBPACK_IMPORTED_MODULE_17__.fetchServiceRasterInfo)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,a=await Promise.all([s,r]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new _rasterTransforms_GCSShiftTransform_js__WEBPACK_IMPORTED_MODULE_16__["default"],e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:r}=t,a=t.lodAt(Math.max.apply(null,r.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,r.map((e=>e.level)))),{tileType:o}=this;if("Map"===o)return this._levelOffset=r[0].level,[a,l];if("Raster"===o){return[r.find((e=>e.resolution===i.x))??a,l]}const{minScale:n,maxScale:c}=this.sourceJSON;let m=a;c>0&&(m=r.find((e=>Math.abs(e.scale-c)<s)),m||(m=r.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??a));let u=l;return n>0&&(u=r.find((e=>Math.abs(e.scale-n)<s))??l,this._levelOffset=u.level-l.level),[m,u]}};function g(e,t){if(!e)return null;const{minScale:i,maxScale:s,minLOD:r,maxLOD:a}=t;if(null!=r&&null!=a)return _TileInfo_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=r&&e<=a))});if(0!==i&&0!==s){const t=e=>Math.round(1e4*e)/1e4,r=i?t(i):1/0,a=s?t(s):-1/0;return _TileInfo_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON({...e,lods:e.lods.filter((e=>{const i=t(e.scale);return i<=r&&i>=a}))})}return _TileInfo_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(e)}(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__.property)({type:String,json:{write:!0}})],x.prototype,"datasetFormat",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__.property)()],x.prototype,"tileType",void 0),x=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_9__.subclass)("esri.layers.support.rasterDatasets.ImageServerRaster")],x);const v=x;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/InMemoryRaster.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/InMemoryRaster.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _RasterInfo_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../RasterInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterInfo.js");
/* harmony import */ var _BaseRaster_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./BaseRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js");
/* harmony import */ var _rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../rasterFunctions/pixelUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js");
/* harmony import */ var _rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../rasterFunctions/stretchUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let c=class extends _BaseRaster_js__WEBPACK_IMPORTED_MODULE_10__["default"]{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(t){await this.init();const e=this.data,{pixelBlock:s,statistics:r,histograms:i,name:a,keyProperties:n,nativeExtent:m,transform:c}=this.data,{width:h,height:f,pixelType:u}=s,d=e.extent??new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_13__["default"]({xmin:-.5,ymin:.5,xmax:h-.5,ymax:f-.5,spatialReference:new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_14__["default"]({wkid:3857})}),y=e.isPseudoSpatialReference??!e.extent,x={x:d.width/h,y:d.height/f},g=new _RasterInfo_js__WEBPACK_IMPORTED_MODULE_9__["default"]({width:h,height:f,pixelType:u,extent:d,nativeExtent:m,transform:c,pixelSize:x,spatialReference:d.spatialReference,bandCount:s.pixels.length,keyProperties:n||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=a,this.url="/InMemory/"+a}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(t,r,i){const o=this.rasterInfo.storageInfo.maximumPyramidLevel,a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:r,maximumPyramidLevel:o},i):Promise.resolve((0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_11__.split)(t,r,o)),l=null!=this.rasterInfo.statistics,p=null!=this.rasterInfo.histograms,c=l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):Promise.resolve((0,_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_12__.estimateStatisticsHistograms)(t)),h=await (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.eachAlways)([a,c]);if(!h[0].value&&h[1].value)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=h[0].value,l||(this.rasterInfo.statistics=h[1].value?.statistics),p||(this.rasterInfo.histograms=h[1].value?.histograms)}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__.property)({type:String,json:{write:!0}})],c.prototype,"datasetFormat",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__.property)()],c.prototype,"data",void 0),c=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_8__.subclass)("esri.layers.support.rasterDatasets.InMemoryRaster")],c);const h=c;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ I)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _PixelBlock_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../PixelBlock.js */ "./node_modules/@arcgis/core/layers/support/PixelBlock.js");
/* harmony import */ var _RasterInfo_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../RasterInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterInfo.js");
/* harmony import */ var _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../RasterStorageInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js");
/* harmony import */ var _BaseRaster_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./BaseRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js");
/* harmony import */ var _pamParser_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pamParser.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/pamParser.js");
/* harmony import */ var _xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./xmlUtilities.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/xmlUtilities.js");
/* harmony import */ var _rasterFormats_utils_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../rasterFormats/utils.js */ "./node_modules/@arcgis/core/layers/support/rasterFormats/utils.js");
/* harmony import */ var _rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../rasterFunctions/stretchUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const y=new Map;y.set("Int8","s8"),y.set("UInt8","u8"),y.set("Int16","s16"),y.set("UInt16","u16"),y.set("Int32","s32"),y.set("UInt32","u32"),y.set("Float32","f32"),y.set("Float64","f32"),y.set("Double64","f32");const x=new Map;x.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),x.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),x.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),x.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let w=class extends _BaseRaster_js__WEBPACK_IMPORTED_MODULE_11__["default"]{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?t.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:s,files:o}=this._parseHeader(r.data);if(-1===this.ioConfig.skipExtensions?.indexOf("aux.xml")){const e=await this._fetchAuxiliaryData(t);null!=e&&(s.statistics=e.statistics??s.statistics,s.histograms=e.histograms,e.histograms&&null==s.statistics&&(s.statistics=(0,_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_15__.estimateStatisticsFromHistograms)(e.histograms)))}this._set("rasterInfo",s),this._files=o;const i=await this.request(o.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(i.data);const{blockWidth:a,blockHeight:n}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:c}=this.rasterInfo,p=[],m=this._getBandSegmentCount();let u=0,g=-1;for(;u<this._storageIndex.length;){g++;const t=Math.ceil(f/a/l**g)-1,e=Math.ceil(c/n/l**g)-1;u+=(t+1)*(e+1)*m*4,p.push({maxRow:e,maxCol:t,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,g>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=g),this.updateTileInfo()}async fetchRawTile(t,e,r,s={}){const{blockWidth:i,blockHeight:a,blockBoundary:n}=this.rasterInfo.storageInfo,l=n[t];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:f,pixelType:c}=this.rasterInfo,{ranges:p,actualTileWidth:m,actualTileHeight:h}=this._getTileLocation(t,e,r);if(!p||0===p.length)return null;if(0===p[0].from&&0===p[0].to){const t=new Uint8Array(i*a);return new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_8__["default"]({width:i,height:a,pixels:null,mask:t,validPixelCount:0})}const{bandIds:u}=this.ioConfig,g=this._getBandSegmentCount(),d=[];let y=0;for(y=0;y<g;y++)u&&!u.includes(y)||d.push(this.request(this._files.data,{range:{from:p[y].from,to:p[y].to},responseType:"array-buffer",signal:s.signal}));const w=await Promise.all(d),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),b=new Uint8Array(I);let A=0;for(y=0;y<g;y++)b.set(new Uint8Array(w[y].data),A),A+=w[y].data.byteLength;const F=x.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(b.buffer,{width:i,height:a,format:F,planes:u?.length||f,pixelType:c});if(null==_)return null;let{noDataValue:R}=this.rasterInfo;if(null!=R&&"lerc"!==F&&!_.mask&&(R=R[0],null!=R)){const t=_.width*_.height,e=new Uint8Array(t);if(Math.abs(R)>1e24)for(y=0;y<t;y++)Math.abs((_.pixels[0][y]-R)/R)>1e-6&&(e[y]=1);else for(y=0;y<t;y++)_.pixels[0][y]!==R&&(e[y]=1);_.mask=e}let S=0,j=0;if(m!==i||h!==a){let t=_.mask;if(t)for(y=0;y<a;y++)if(j=y*i,y<h)for(S=m;S<i;S++)t[j+S]=0;else for(S=0;S<i;S++)t[j+S]=0;else for(t=new Uint8Array(i*a),_.mask=t,y=0;y<h;y++)for(j=y*i,S=0;S<m;S++)t[j+S]=1}return _}_parseIndex(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,s,o,i,a;if(_rasterFormats_utils_js__WEBPACK_IMPORTED_MODULE_14__.isPlatformLittleEndian){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return x.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i}=this.rasterInfo.storageInfo,{width:a,height:n}=this.rasterInfo,l=this._getBandSegmentCount();let f,c,p,m=0,h=0;for(p=0;p<t;p++)h=i**p,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),m+=f*c;h=i**t,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),m+=e*f+r,m*=4*l;const u=this._storageIndex.subarray(m,m+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=u[4*x]*2**32+u[4*x+1],d=g+u[4*x+2]*2**32+u[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<f-1?s:Math.ceil(a/h)-s*(f-1),actualTileHeight:e<c-1?o:Math.ceil(n/h)-o*(c-1)}}_parseHeader(t){const r=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElement)(t,"MRF_META/Raster");if(!r)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("mrf:open","not a valid MRF format");const s=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElement)(r,"Size"),o=parseInt(s.getAttribute("x"),10),n=parseInt(s.getAttribute("y"),10),f=parseInt(s.getAttribute("c"),10),m=((0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElementValue)(r,"Compression")||"none").toLowerCase();if(!x.has(m))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("mrf:open","currently does not support compression "+m);const h=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElementValue)(r,"DataType")||"UInt8",w=y.get(h);if(null==w)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("mrf:open","currently does not support pixel type "+h);const I=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElement)(r,"PageSize"),b=parseInt(I.getAttribute("x"),10),A=parseInt(I.getAttribute("y"),10),F=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElement)(r,"DataValues");let _,R;F&&(R=F.getAttribute("NoData"),null!=R&&(_=R.trim().split(" ").map((t=>parseFloat(t)))));if((0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElement)(t,"MRF_META/CachedSource"))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("mrf:open","currently does not support MRF referencing other data files");const S=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElement)(t,"MRF_META/GeoTags"),j=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElement)(S,"BoundingBox");let k,M=!1;if(null!=j){const t=parseFloat(j.getAttribute("minx")),e=parseFloat(j.getAttribute("miny")),r=parseFloat(j.getAttribute("maxx")),s=parseFloat(j.getAttribute("maxy")),o=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElementValue)(S,"Projection")||"";let i=_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_16__["default"].WGS84;if("LOCAL_CS[]"!==o)if(o.toLowerCase().startsWith("epsg:")){const t=Number(o.slice(5));isNaN(t)||0===t||(i=new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_16__["default"]({wkid:t}))}else i=(0,_pamParser_js__WEBPACK_IMPORTED_MODULE_12__.parseSpatialReference)(o)??_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_16__["default"].WGS84;else M=!0,i=new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_16__["default"]({wkid:3857});k=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_17__["default"](t,e,r,s),k.spatialReference=i}else M=!0,k=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_17__["default"]({xmin:-.5,ymin:.5-n,xmax:o-.5,ymax:.5,spatialReference:new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_16__["default"]({wkid:3857})});const T=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElement)(t,"MRF_META/Rsets"),C=parseInt(T&&T.getAttribute("scale")||"2",10),U=k.spatialReference,B=new _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_10__["default"]({origin:new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_18__["default"]({x:k.xmin,y:k.ymax,spatialReference:U}),blockWidth:b,blockHeight:A,pyramidBlockWidth:b,pyramidBlockHeight:A,compression:m,pyramidScalingFactor:C}),E=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_18__["default"]({x:k.width/o,y:k.height/n,spatialReference:U}),L=new _RasterInfo_js__WEBPACK_IMPORTED_MODULE_9__["default"]({width:o,height:n,extent:k,isPseudoSpatialReference:M,spatialReference:U,bandCount:f,pixelType:w,pixelSize:E,noDataValue:_,storageInfo:B}),P=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElementValue)(t,"datafile"),W=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_13__.getElementValue)(t,"IndexFile");return{rasterInfo:L,files:{mrf:this.url,index:W||this.url.replace(".mrf",".idx"),data:P||this.url.replace(".mrf",x.get(m).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return (0,_pamParser_js__WEBPACK_IMPORTED_MODULE_12__.parsePAMInfo)(e)}catch{return null}}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)()],w.prototype,"_files",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)()],w.prototype,"_storageIndex",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0),w=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__.subclass)("esri.layers.support.rasterIO.MRFRaster")],w);const I=w;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/RasterFactory.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/RasterFactory.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ n)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _CloudRaster_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CloudRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/CloudRaster.js");
/* harmony import */ var _ImageAuxRaster_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ImageAuxRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/ImageAuxRaster.js");
/* harmony import */ var _ImageServerRaster_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ImageServerRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js");
/* harmony import */ var _MRFRaster_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MRFRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js");
/* harmony import */ var _TIFFRaster_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TIFFRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const c=new Map;c.set("CRF",{desc:"Cloud Raster Format",constructor:_CloudRaster_js__WEBPACK_IMPORTED_MODULE_1__["default"]}),c.set("MRF",{desc:"Meta Raster Format",constructor:_MRFRaster_js__WEBPACK_IMPORTED_MODULE_4__["default"]}),c.set("TIFF",{desc:"GeoTIFF",constructor:_TIFFRaster_js__WEBPACK_IMPORTED_MODULE_5__["default"]}),c.set("RasterTileServer",{desc:"Raster Tile Server",constructor:_ImageServerRaster_js__WEBPACK_IMPORTED_MODULE_3__["default"]}),c.set("JPG",{desc:"JPG Raster Format",constructor:_ImageAuxRaster_js__WEBPACK_IMPORTED_MODULE_2__["default"]}),c.set("PNG",{desc:"PNG Raster Format",constructor:_ImageAuxRaster_js__WEBPACK_IMPORTED_MODULE_2__["default"]}),c.set("GIF",{desc:"GIF Raster Format",constructor:_ImageAuxRaster_js__WEBPACK_IMPORTED_MODULE_2__["default"]}),c.set("BMP",{desc:"BMP Raster Format",constructor:_ImageAuxRaster_js__WEBPACK_IMPORTED_MODULE_2__["default"]});class n{static get supportedFormats(){const t=new Set;return c.forEach(((e,r)=>t.add(r))),t}static async open(e){const{url:r,ioConfig:s,sourceJSON:o}=e;let a=e.datasetFormat;null==a&&r.lastIndexOf(".")&&(a=r.slice(r.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(a="RasterTileServer");const n={url:r,sourceJSON:o,datasetFormat:a,ioConfig:s??{bandIds:null,sampling:null}};let l,i;if(a&&this.supportedFormats.has(a)){if("CRF"===a&&!s?.enableCRF)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("rasterfactory:open",`cannot open raster: ${r}`);return l=c.get(a).constructor,i=new l(n),await i.open({signal:e.signal}),i}if(a)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("rasterfactory:open","not a supported format "+a);const u=Array.from(c.keys());let F=0;const m=()=>(a=u[F++],a&&("CRF"!==a||s?.enableCRF)?(l=c.get(a).constructor,i=new l(n),i.open({signal:e.signal}).then((()=>i)).catch((()=>m()))):null);return m()}static register(t,e,r){c.has(t.toUpperCase())||c.set(t.toUpperCase(),{desc:e,constructor:r})}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/RawBlockCache.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/RawBlockCache.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decreaseRefCount": () => (/* binding */ s),
/* harmony export */   "deleteBlock": () => (/* binding */ h),
/* harmony export */   "deleteRaster": () => (/* binding */ f),
/* harmony export */   "getBlock": () => (/* binding */ m),
/* harmony export */   "getRasterId": () => (/* binding */ i),
/* harmony export */   "putBlock": () => (/* binding */ x),
/* harmony export */   "register": () => (/* binding */ u),
/* harmony export */   "unregister": () => (/* binding */ a),
/* harmony export */   "update": () => (/* binding */ g)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _EphemeralBlockCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EphemeralBlockCache.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/EphemeralBlockCache.js");
/* harmony import */ var _rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rasterFunctions/rasterProjectionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r=new Map,c=new _EphemeralBlockCache_js__WEBPACK_IMPORTED_MODULE_1__["default"];function i(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){const n={extent:null,rasterInfo:t,cache:new Map},o=r.get(e);return o?(o.push(n),o.length-1):(r.set(e,[n]),0)}function a(e,t){const n=r.get(e);n&&(n[t]=null,n.some((e=>null!=e))||r.delete(e))}function f(e){r.delete(e)}function s(e,t,n){const o=r.get(e);if(!o)return null==t?c.decreaseRefCount(e,n):0;if(null==t||null==o[t])return c.decreaseRefCount(e,n);const l=o[t]?.cache,i=l?.get(n);if(l&&i){if(i.refCount--,0===i.refCount){l.delete(n);for(let e=0;e<o.length;e++)o[e]?.cache.delete(n);i.controller&&i.controller.abort()}return i.refCount}return 0}function m(e,t,n){const o=r.get(e);if(!o)return null==t?c.getBlock(e,n):null;if(null==t||null==o[t]){for(let e=0;e<o.length;e++){const t=o[e]?.cache.get(n);if(t)return t.refCount++,t.block}return c.getBlock(e,n)}const l=o[t]?.cache.get(n);if(l)return l.refCount++,l.block;for(let r=0;r<o.length;r++){if(r===t||!o[r])continue;const e=o[r]?.cache,l=e?.get(n);if(e&&l)return l.refCount++,e.set(n,l),l.block}return null}function x(e,t,n,o,l=null){const i=r.get(e);if(!i)return void(null==t&&c.putBlock(e,n,o,l));if(null==t||null==i[t])return void c.putBlock(e,n,o,l);const u={refCount:1,block:o,isResolved:!1,isRejected:!1,controller:l};o.then((()=>u.isResolved=!0)).catch((()=>u.isRejected=!0)),i[t]?.cache.set(n,u)}function h(e,t,n){const o=r.get(e);o?null!=t&&null!=o[t]?o[t]?.cache.delete(n):c.deleteBlock(e,n):null==t&&c.deleteBlock(e,n)}function d(e,t){const n=r.get(e);return n?n[t]??null:null}function g(e,r,c,i,u,a,f=null){const s=d(e,r);if(!s)return;const m=s.extent,{cache:x,rasterInfo:h}=s;if(m&&m.xmin===c.xmin&&m.xmax===c.xmax&&m.ymin===c.ymin&&m.ymax===c.ymax)return;i=i??0;const g=c.clone().normalize(),{spatialReference:y,transform:p}=h,k=new Set;for(let d=0;d<g.length;d++){const e=g[d];if(e.xmax-e.xmin<=i||e.ymax-e.ymin<=i)continue;let r=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_2__.projectExtent)(e,y,f);null!=p&&(r=p.inverseTransform(r));const c=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__["default"]({x:i,y:i,spatialReference:e.spatialReference});if(null==u&&!(u=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_2__.projectResolution)(c,y,e,f)))return;const{pyramidLevel:s,pyramidResolution:m,excessiveReading:x}=(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_2__.snapPyramid)(u,h,a||"closest");if(x)return;const{storageInfo:M}=h,{origin:R}=M,C={x:Math.max(0,Math.floor((r.xmin-R.x)/m.x)),y:Math.max(0,Math.floor((R.y-r.ymax)/m.y))},B=Math.ceil((r.xmax-r.xmin)/m.x-.1),j=Math.ceil((r.ymax-r.ymin)/m.y-.1),v=s>0?M.pyramidBlockWidth:M.blockWidth,b=s>0?M.pyramidBlockHeight:M.blockHeight,w=1,$=Math.max(0,Math.floor(C.x/v)-w),I=Math.max(0,Math.floor(C.y/b)-w),H=Math.floor((C.x+B-1)/v)+w,E=Math.floor((C.y+j-1)/b)+w;for(let t=I;t<=E;t++)for(let e=$;e<=H;e++)k.add(`${s}/${t}/${e}`)}x.forEach(((e,t)=>{if(!k.has(t)){const e=x.get(t);(null==e||e.isResolved||e.isRejected)&&x.delete(t)}})),s.extent={xmin:c.xmin,ymin:c.ymin,xmax:c.xmax,ymax:c.ymax}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ v)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/* harmony import */ var _RasterInfo_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../RasterInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterInfo.js");
/* harmony import */ var _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../RasterStorageInfo.js */ "./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js");
/* harmony import */ var _BaseRaster_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./BaseRaster.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js");
/* harmony import */ var _DBFParser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./DBFParser.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/DBFParser.js");
/* harmony import */ var _pamParser_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pamParser.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/pamParser.js");
/* harmony import */ var _rasterFormats_TiffDecoder_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../rasterFormats/TiffDecoder.js */ "./node_modules/@arcgis/core/layers/support/rasterFormats/TiffDecoder.js");
/* harmony import */ var _rasterFormats_TiffTags_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../rasterFormats/TiffTags.js */ "./node_modules/@arcgis/core/layers/support/rasterFormats/TiffTags.js");
/* harmony import */ var _rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../rasterFunctions/stretchUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");
/* harmony import */ var _rasterTransforms_PolynomialTransform_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../rasterTransforms/PolynomialTransform.js */ "./node_modules/@arcgis/core/layers/support/rasterTransforms/PolynomialTransform.js");
/* harmony import */ var _rest_support_FeatureSet_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../rest/support/FeatureSet.js */ "./node_modules/@arcgis/core/rest/support/FeatureSet.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const F=(e,t)=>e.get(t)?.values,E=(e,t)=>e.get(t)?.values?.[0];let S=class extends _BaseRaster_js__WEBPACK_IMPORTED_MODULE_10__["default"]{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();const t=e?e.signal:null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:s,firstIFDPos:a,isBigTiff:n}=(0,_rasterFormats_TiffDecoder_js__WEBPACK_IMPORTED_MODULE_13__.parseSignature)(i),o=[];await this._readIFDs(o,i,s,a,0,n?8:4,t);const{imageInfo:f,rasterInfo:l}=this._parseIFDs(o),u=(0,_rasterFormats_TiffDecoder_js__WEBPACK_IMPORTED_MODULE_13__.getPyramidIFDs)(o),m=(0,_rasterFormats_TiffDecoder_js__WEBPACK_IMPORTED_MODULE_13__.getMaskIFDs)(o);if(this._headerInfo={littleEndian:s,isBigTiff:n,ifds:o,pyramidIFDs:u,maskIFDs:m,...f},this._set("rasterInfo",l),!f.isSupported)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("tiffraster:open","this tiff is not supported: "+f.message);if(!f.tileWidth)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const d=o[0].get("PREDICTOR")?.values?.[0],y=o[0].get("SAMPLEFORMAT")?.values?.[0];if(3===y&&2===d)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");const{skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,l)}g.includes("vat.dbf")||1!==l.bandCount||"u8"!==l.pixelType||(l.attributeTable=await this._fetchAuxiliaryTable(e),null!=l.attributeTable&&(l.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,r))return null;const s=await this._fetchRawTiffTile(e,t,r,!1,i);if(null!=s&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(e,t,r,!0,i);null!=a&&a.pixels[0]instanceof Uint8Array&&(s.mask=a.pixels[0])}return s}_parseIFDs(e){const t=(0,_rasterFormats_TiffDecoder_js__WEBPACK_IMPORTED_MODULE_13__.getImageInfo)(e),{width:r,height:i,tileWidth:s,tileHeight:o,planes:f,pixelType:u,compression:c,firstPyramidLevel:p,maximumPyramidLevel:h,pyramidBlockWidth:d,pyramidBlockHeight:y,tileBoundary:g,affine:T,metadata:x}=t,w=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let S=(0,_pamParser_js__WEBPACK_IMPORTED_MODULE_12__.parseSpatialReference)(w),v=!!t.isPseudoGeographic;null==S&&(v=!0,S=new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_18__["default"]({wkid:3857}));const D=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_19__["default"]({...t.extent,spatialReference:S}),P=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_20__["default"](D?{x:D.xmin,y:D.ymax,spatialReference:S}:{x:0,y:0}),k=new _RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_9__["default"]({blockWidth:s,blockHeight:o,pyramidBlockWidth:d,pyramidBlockHeight:y,compression:c,origin:P,firstPyramidLevel:p,maximumPyramidLevel:h,blockBoundary:g}),O=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_20__["default"]({x:(D.xmax-D.xmin)/r,y:(D.ymax-D.ymin)/i,spatialReference:S}),j=x?{BandProperties:x.bandProperties,DataType:x.dataType}:{};let B=null;const L=E(e[0],"PHOTOMETRICINTERPRETATION"),A=F(e[0],"COLORMAP");if(L<=3&&A?.length>3&&A.length%3==0){B=[];const e=A.length/3;for(let t=0;t<e;t++)B.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8])}const z=new _RasterInfo_js__WEBPACK_IMPORTED_MODULE_8__["default"]({width:r,height:i,bandCount:f,pixelType:u,pixelSize:O,storageInfo:k,spatialReference:S,isPseudoSpatialReference:v,keyProperties:j,extent:D,colormap:B,statistics:x?x.statistics:null});return T?.length&&(z.nativeExtent=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_19__["default"]({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:S}),z.transform=new _rasterTransforms_PolynomialTransform_js__WEBPACK_IMPORTED_MODULE_16__["default"]({polynomialOrder:1,forwardCoefficients:[T[2]+T[0]/2,T[5]-T[3]/2,T[0],T[3],-T[1],-T[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_20__["default"]({x:(D.xmax-D.xmin)/r,y:(D.ymax-D.ymin)/i,spatialReference:S}),k.origin.x=-.5,k.origin.y=.5),{imageInfo:t,rasterInfo:z}}_processPAMInfo(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_15__.estimateStatisticsFromHistograms)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const r=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_20__["default"]({x:(r.xmax-r.xmin)/t.width,y:(r.ymax-r.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=r}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}async _readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=i+s,i=0}const o=await this._readIFD(t,r,i,s,_rasterFormats_TiffTags_js__WEBPACK_IMPORTED_MODULE_14__["default"].TIFF_TAGS,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-s,s,a,n)}async _readIFD(e,r,i,s,a=_rasterFormats_TiffTags_js__WEBPACK_IMPORTED_MODULE_14__["default"].TIFF_TAGS,n=4,o){if(!e)return null;const f=(0,_rasterFormats_TiffDecoder_js__WEBPACK_IMPORTED_MODULE_13__.parseIFD)(e,r,i,s,a,n);if(f.success){const i=[];if(f.ifd?.forEach((e=>{e.values||i.push(e)})),i.length>0){const a=i.map((e=>e.offlineOffsetSize)).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_2__.isSome),n=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:t}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:o});e=t,s=n,i.forEach((t=>(0,_rasterFormats_TiffDecoder_js__WEBPACK_IMPORTED_MODULE_13__.parseFieldValues)(e,r,t,s)))}}if(f.ifd?.has("GEOKEYDIRECTORY")){const t=f.ifd.get("GEOKEYDIRECTORY"),i=t?.values;if(i&&i.length>4){const a=i[0]+"."+i[1]+"."+i[2],n=await this._readIFD(e,r,t.valueOffset+6-s,s,_rasterFormats_TiffTags_js__WEBPACK_IMPORTED_MODULE_14__["default"].GEO_KEYS,2,o);t.data=n.ifd,t.data&&t.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return f}if(f.requiredBufferSize&&f.requiredBufferSize!==e.byteLength){const t=await this.request(this.url,{range:{from:s,to:s+f.requiredBufferSize+4},responseType:"array-buffer",signal:o});return(e=t.data).byteLength<f.requiredBufferSize?null:this._readIFD(e,r,0,s,_rasterFormats_TiffTags_js__WEBPACK_IMPORTED_MODULE_14__["default"].TIFF_TAGS,4,o)}}async _fetchRawTiffTile(e,t,r,i,s={}){const a=this._getTileLocation(e,t,r,i);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:f,ifd:l}=a,u=n.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:s.signal}))),c=await Promise.all(u),p=c.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),h=1===c.length?c[0].data:new ArrayBuffer(p),m=[0],d=[0];if(c.length>1){const e=new Uint8Array(h);for(let t=0,r=0;t<c.length;t++){const i=c[t].data;e.set(new Uint8Array(i),r),m[t]=r,r+=i.byteLength,d[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),T=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:m,sizes:d},width:y,height:g,planes:null,pixelType:null});if(null==T)return null;let x,I,w;if(o!==y||f!==g){let e=T.mask;if(e)for(x=0;x<g;x++)if(w=x*y,x<f)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),T.mask=e,x=0;x<f;x++)for(w=x*y,I=0;I<o;I++)e[w+I]=1}return T}_getTileLocation(e,t,r,i=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,n=0===e?0:e-(s-1),{_headerInfo:o}=this;if(!o)return null;const f=i?o.maskIFDs[n]:0===n?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!f)return null;const l=(0,_rasterFormats_TiffDecoder_js__WEBPACK_IMPORTED_MODULE_13__.isBSQConfig)(f,o),u=F(f,"TILEOFFSETS");if(void 0===u)return null;const c=F(f,"TILEBYTECOUNTS"),{minRow:p,minCol:h,maxRow:m,maxCol:d}=a[n];if(t>m||r>d||t<p||r<h)return null;const y=E(f,"IMAGEWIDTH"),T=E(f,"IMAGELENGTH"),x=E(f,"TILEWIDTH"),I=E(f,"TILELENGTH"),w=[];if(l){const{bandCount:e}=this.rasterInfo;for(let i=0;i<e;i++){const e=i*(m+1)*(d+1)+t*(d+1)+r;w[i]={from:u[e],to:u[e]+c[e]-1}}}else{const e=t*(d+1)+r;w.push({from:u[e],to:u[e]+c[e]-1})}for(let g=0;g<w.length;g++)if(null==w[g].from||!w[g].to)return null;return{ranges:w,ifd:f,actualTileWidth:r===d&&y%x||x,actualTileHeight:t===m&&T%I||I}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return (0,_pamParser_js__WEBPACK_IMPORTED_MODULE_12__.parsePAMInfo)(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),r=_DBFParser_js__WEBPACK_IMPORTED_MODULE_11__["default"].parse(t);return r?.recordSet?_rest_support_FeatureSet_js__WEBPACK_IMPORTED_MODULE_17__["default"].fromJSON(r.recordSet):null}catch{return null}}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__.property)()],S.prototype,"_files",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__.property)()],S.prototype,"_headerInfo",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__.property)()],S.prototype,"_bufferSize",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_4__.property)({type:String,json:{write:!0}})],S.prototype,"datasetFormat",void 0),S=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__.subclass)("esri.layers.support.rasterDatasets.TIFFRaster")],S);const v=S;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/pamParser.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/pamParser.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parsePAMInfo": () => (/* binding */ p),
/* harmony export */   "parseSpatialReference": () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./xmlUtilities.js */ "./node_modules/@arcgis/core/layers/support/rasterDatasets/xmlUtilities.js");
/* harmony import */ var _rasterTransforms_PolynomialTransform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rasterTransforms/PolynomialTransform.js */ "./node_modules/@arcgis/core/layers/support/rasterTransforms/PolynomialTransform.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function f(e,t){if(!e||!t)return null;const n=[];for(let r=0;r<e.length;r++)n.push(e[r]),n.push(t[r]);return n}function u(e){const t=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElement)(e,"GeodataXform"),r=m((0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValue)(t,"SpatialReference/WKID")||(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementValue)(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const o=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValue)(t,"PolynomialOrder")??1,u=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValues)(t,"CoeffX/Double"),c=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValues)(t,"CoeffY/Double"),d=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValues)(t,"InverseCoeffX/Double"),p=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValues)(t,"InverseCoeffY/Double"),S=f(u,c),C=f(d,p);return{spatialReference:r,transform:S&&C&&S.length&&C.length?new _rasterTransforms_PolynomialTransform_js__WEBPACK_IMPORTED_MODULE_3__["default"]({spatialReference:r,polynomialOrder:o,forwardCoefficients:S,inverseCoefficients:C}):null}}function c(e){const t=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValue)(e,"NoDataValue"),i=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElement)(e,"Histograms/HistItem"),l=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValue)(i,"HistMin"),o=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValue)(i,"HistMax"),f=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValue)(i,"BucketCount"),u=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementValue)(i,"HistCounts")?.split("|").map((e=>Number(e)));let c,m,d,p;(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElements)(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":c=t;break;case"STATISTICS_MAXIMUM":m=t;break;case"STATISTICS_MEAN":d=t;break;case"STATISTICS_STDDEV":p=t}}));const S=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementNumericValue)(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:u?.length&&null!=l&&null!=o?{min:l,max:o,size:f||u.length,counts:u}:null,sourceBandIndex:S,statistics:null!=c&&null!=m?{min:c,max:m,avg:d,stddev:p}:null}}function m(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_4__["default"]({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const n=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),s=r>-1?r:e.indexOf("GEOGCS");if(-1===s)return null;const a=e.slice(s,e.lastIndexOf("]",n)+1).trim(),i=e.slice(n,e.lastIndexOf("]")).trim();t=d(a);const l=new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_4__["default"](t?{wkid:t}:{wkt:a}),f=d(i);return f&&(l.vcsWkid=f),l}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=d(e),new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_4__["default"](0!==t?{wkid:t}:{wkt:e})):null}function d(e){const t=e.replaceAll("]","[").replaceAll('"',"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=t[t.length-1].split(","),r=n[0]?.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function p(s){if("pamdataset"!==s?.documentElement.tagName?.toLowerCase())return{};const a={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};s.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if((0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.isSameTagIgnoreNS)(e,"SRS")){if(!a.spatialReference){const t=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementValue)(e);a.spatialReference=m(t)}}else if((0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.isSameTagIgnoreNS)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=u(e);a.transform=n,a.spatialReference||(a.spatialReference=t)}else{(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElements)(e,"MDI").forEach((e=>a.metadata[e.getAttribute("key")]=(0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.getElementValue)(e)))}else if((0,_xmlUtilities_js__WEBPACK_IMPORTED_MODULE_2__.isSameTagIgnoreNS)(e,"PAMRasterBand")){const t=c(e);null!=t.sourceBandIndex&&null==a.rasterBands[t.sourceBandIndex]?a.rasterBands[t.sourceBandIndex]=t:a.rasterBands.push(t)}}));const i=a.rasterBands;if(i.length){const t=!!i[0].statistics;a.statistics=t?i.map((e=>e.statistics)).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_1__.isSome):null;const n=!!i[0].histogram;a.histograms=n?i.map((e=>e.histogram)).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_1__.isSome):null}return a}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterDatasets/xmlUtilities.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterDatasets/xmlUtilities.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getElement": () => (/* binding */ e),
/* harmony export */   "getElementNumericValue": () => (/* binding */ o),
/* harmony export */   "getElementNumericValues": () => (/* binding */ u),
/* harmony export */   "getElementValue": () => (/* binding */ t),
/* harmony export */   "getElementValues": () => (/* binding */ l),
/* harmony export */   "getElements": () => (/* binding */ n),
/* harmony export */   "getNodeNameIgnoreNS": () => (/* binding */ c),
/* harmony export */   "getSpaceDelimitedNumericValues": () => (/* binding */ r),
/* harmony export */   "isSameTagIgnoreNS": () => (/* binding */ i)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n(e,t){if(!e||!t)return[];let l=t;t.includes("/")?(l=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const u=n(e,l);for(let e=0;e<u.length;e++){n(u[e],t).forEach((n=>r.push(n)))}return r}const u=e.getElementsByTagNameNS("*",l);if(!u||0===u.length)return[];for(let n=0;n<u.length;n++)r.push(u[n]||u.item(n));return r}function e(t,l){if(!t||!l)return null;let r=l;l.includes("/")?(r=l.slice(0,l.indexOf("/")),l=l.slice(l.indexOf("/")+1)):l="";const u=n(t,r);return u.length>0?l?e(u[0],l):u[0]:null}function t(n,t=null){const l=t?e(n,t):n;let r;return l?(r=l.textContent||l.nodeValue,r?r.trim():null):null}function l(e,t){const l=n(e,t),r=[];let u;for(let n=0;n<l.length;n++)u=l[n].textContent||l[n].nodeValue,u&&(u=u.trim(),""!==u&&r.push(u));return r}function r(n,e=null){const l=t(n,e);return l?.split(" ").map((n=>Number(n)))??[]}function u(n,e){return l(n,e).map((n=>Number(n)))}function o(n,e){const l=t(n,e);return Number(l)}function i(n,e){const t=n?.nodeName?.toLowerCase(),l=e.toLowerCase();return t.slice(t.lastIndexOf(":")+1)===l}function c(n){return n.nodeName.slice(n.nodeName.lastIndexOf(":")+1)}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/support/rasterFunctions/clipUtils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/rasterFunctions/clipUtils.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clip": () => (/* binding */ a),
/* harmony export */   "snapToRaster": () => (/* binding */ x)
/* harmony export */ });
/* harmony import */ var _core_unitUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/unitUtils.js */ "./node_modules/@arcgis/core/core/unitUtils.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/* harmony import */ var _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../PixelBlock.js */ "./node_modules/@arcgis/core/layers/support/PixelBlock.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n(e,i){if(e.spatialReference.equals(i))return e;const n=(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_0__.getMetersPerUnitForSR)(e.spatialReference),a=(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_0__.getMetersPerUnitForSR)(i);if(n===a)return e;const h=n/a;return{x:e.x*h,y:e.y*h}}async function a(t,e,n){if("extent"===n.type)return o(t,e,n);const{width:a,height:x}=t,l=new Uint8Array(a*x),{contains:m,intersects:s}=await Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_arcgis_core_chunks_geometryEngineBase_js"), __webpack_require__.e("node_modules_arcgis_core_geometry_geometryEngine_js")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../geometry/geometryEngine.js */ "./node_modules/@arcgis/core/geometry/geometryEngine.js"));return s(e,n)?"polyline"===n.type?r(t,e,n):m(n,e)?t:h(t,e,n):new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"]({pixelType:t.pixelType,width:a,height:x,mask:l,maskIsAlpha:!1,pixels:[...t.pixels]})}function h(t,e,n){if(!t)return t;const{width:a,height:h}=t,o=e.width/a,r=e.height/h,{xmin:x,ymax:l}=e;let m;if("extent"===n.type){const t=(n.xmin-x)/o,e=(n.xmax-x)/o,i=(l-n.ymax)/r,a=(l-n.ymin)/r;m=[[[t,i],[t,a],[e,a],[e,i],[t,i]]]}else m=n.rings.map((t=>t.map((([t,e])=>[(t-x)/o,(l-e)/r]))));const s=document.createElement("canvas");s.width=a,s.height=h;const p=s.getContext("2d");p.fillStyle="#f00",m.forEach((t=>{p.beginPath(),p.moveTo(t[0][0],t[0][1]);for(let e=0;e<t.length;e++)p.lineTo(t[e][0],t[e][1]);p.closePath(),p.fill()}));const f=p.getImageData(0,0,a,h).data,y=t.mask,c=a*h,M=new Uint8Array(c);for(let i=0;i<c;i++)y&&!y[i]||(M[i]=f[4*i+3]>127?255:0);return new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"]({pixelType:t.pixelType,width:a,height:h,mask:M,maskIsAlpha:!1,pixels:[...t.pixels]})}function o(t,e,n){const{width:a,height:h}=t,o=new Uint8Array(a*h),r=e.width/a,x=e.height/h;if(n.width/r<.5||n.height/x<.5)return new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"]({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]});const{xmin:l,xmax:m,ymin:s,ymax:p}=e,{xmin:f,xmax:y,ymin:c,ymax:M}=n,u=Math.max(l,f),w=Math.min(m,y),d=Math.max(s,c),g=Math.min(p,M),T=.5*r,k=.5*x;if(w-u<T||g-d<k||w<l+T||u>m-T||d>p-k||g<s+k)return new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"]({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]});const A=Math.max(0,(u-l)/r),R=Math.min(a,Math.max(0,(w-l)/r)),U=Math.max(0,(p-g)/x),j=Math.min(h,Math.max(0,(p-d)/x)),E=Math.round(A),I=Math.round(R)-1,P=Math.round(U),v=Math.round(j)-1;if(E===I&&A%1>.5&&R%1<.5||P===v&&U%1>.5&&j%1<.5)return new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"]({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]});if(0===E&&0===P&&I===a&&v===h)return t;const b=t.mask;for(let i=P;i<=v;i++)for(let t=E;t<=I;t++){const e=i*a+t;o[e]=b?b[e]:255}return new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"]({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]})}function r(t,e,n){const{width:a,height:h}=t,o=new Uint8Array(a*h),r=e.width/a,x=e.height/h,{xmin:l,ymax:m}=e,{paths:s}=n,p=t.mask;for(let i=0;i<s.length;i++){const t=s[i];for(let e=0;e<t.length-1;e++){const[i,n]=t[e],[s,f]=t[e+1];let y=Math.floor((m-n)/x),c=Math.floor((m-f)/x);if(c<y){const t=y;y=c,c=t}y=Math.max(0,y),c=Math.min(h-1,c);const M=(s-i)/(f-n);for(let t=y;t<=c;t++){const e=t===y?Math.max(n,f):(h+1-t)*x,m=t===c?Math.min(n,f):e-x;let u=f===n?Math.floor((i-l)/r):Math.floor((M*(e-n)+i-l)/r),w=f===n?Math.floor((s-l)/r):Math.floor((M*(m-n)+i-l)/r);if(w<u){const t=u;u=w,w=t}const d=t*a;u=Math.max(0,u),w=Math.min(a-1,w);for(let t=d+u;t<=d+w;t++)o[t]=p?p[t]:255}}}return new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"]({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]})}function x(t,i,a,h=!0){const{spatialReference:o}=t,{x:r,y:x}=n(a,o);let l,m,s;const p="extent"===i.type?i:i.extent;let{xmin:f,xmax:y,ymax:c,ymin:M}=p;const{xmin:u,ymax:w}=t.extent;return h?(f=u+(f>u?r*Math.round((f-u)/r):0),c=w-(c<w?x*Math.round((w-c)/x):0),y=u+(y>u?r*Math.round((y-u)/r):0),M=w-(M<w?x*Math.round((w-M)/x):0),l=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_1__["default"]({xmin:f,ymax:c,xmax:y,ymin:M,spatialReference:o}),m=Math.round(l.width/r),s=Math.round(l.height/x)):(m=Math.floor((y-f)/r+.8),s=Math.floor((c-M)/x+.8),f=u+(f>u?r*Math.floor((f-u)/r+.1):0),c=w-(c<w?x*Math.floor((w-c)/x+.1):0),y=f+m*r,M=c-s*x,l=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_1__["default"]({xmin:f,ymax:c,xmax:y,ymin:M,spatialReference:o})),{extent:l,width:m,height:s}}


/***/ }),

/***/ "./node_modules/@arcgis/core/rest/geometryService/cut.js":
/*!***************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/geometryService/cut.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cut": () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geometry/support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ "./node_modules/@arcgis/core/rest/utils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
async function o(o,i,n,m){const a=(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseUrl)(o),p=i[0].spatialReference,u={...m,query:{...a.query,f:"json",sr:JSON.stringify(p),target:JSON.stringify({geometryType:(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_2__.getJsonType)(i[0]),geometries:i}),cutter:JSON.stringify(n)}},c=await (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(a.path+"/cut",u),{cutIndexes:f,geometries:g=[]}=c.data;return{cutIndexes:f,geometries:g.map((e=>{const t=(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_2__.fromJSON)(e);return t.spatialReference=p,t}))}}


/***/ }),

/***/ "./node_modules/@arcgis/core/rest/geometryService/simplify.js":
/*!********************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/geometryService/simplify.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "simplify": () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geometry/support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@arcgis/core/rest/geometryService/utils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
async function o(o,m,f){const n="string"==typeof o?(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_1__.urlToObject)(o):o,p=m[0].spatialReference,a=(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_2__.getJsonType)(m[0]),u={...f,query:{...n.query,f:"json",sr:p.wkid??JSON.stringify(p),geometries:JSON.stringify((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.encodeGeometries)(m))}},{data:y}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(n.path+"/simplify",u);return (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.decodeGeometries)(y.geometries,a,p)}


/***/ }),

/***/ "./node_modules/@arcgis/core/rest/geometryService/utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/geometryService/utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decodeGeometries": () => (/* binding */ o),
/* harmony export */   "encodeGeometries": () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../geometry/support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function r(t){return{geometryType:(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.getJsonType)(t[0]),geometries:t.map((e=>e.toJSON()))}}function o(e,r,o){const n=(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.getGeometryType)(r);return e.map((e=>{const t=n.fromJSON(e);return t.spatialReference=o,t}))}


/***/ }),

/***/ "./node_modules/@arcgis/core/rest/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "asValidOptions": () => (/* binding */ i),
/* harmony export */   "encode": () => (/* binding */ s),
/* harmony export */   "getToken": () => (/* binding */ l),
/* harmony export */   "parseUrl": () => (/* binding */ f)
/* harmony export */ });
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config.js */ "./node_modules/@arcgis/core/config.js");
/* harmony import */ var _kernel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel.js */ "./node_modules/@arcgis/core/kernel.js");
/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/lang.js */ "./node_modules/@arcgis/core/core/lang.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _support_apiKeyUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../support/apiKeyUtils.js */ "./node_modules/@arcgis/core/support/apiKeyUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function i(r,t){return t?{...t,query:{...r??{},...t.query}}:{query:r}}function f(r){return"string"==typeof r?(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.urlToObject)(r):(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_2__.clone)(r)}function s(r,t,o){const e={};for(const n in r){if("declaredClass"===n)continue;const i=r[n];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){e[n]=[];for(let r=0;r<i.length;r++)e[n][r]=s(i[r])}else if("object"==typeof i)if(i.toJSON){const r=i.toJSON(o&&o[n]);e[n]=t?r:JSON.stringify(r)}else e[n]=t?i:JSON.stringify(i);else e[n]=i}return e}function l(o,e){return o?(0,_support_apiKeyUtils_js__WEBPACK_IMPORTED_MODULE_4__.supportsApiKey)(o)&&(e||_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].apiKey)?e||_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].apiKey:_kernel_js__WEBPACK_IMPORTED_MODULE_1__.id?.findCredential(o)?.token:null}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,