"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["node_modules_arcgis_core_renderers_support_DictionaryLoader_js"],{

/***/ "./node_modules/@arcgis/core/core/Version.js":
/*!***************************************************!*\
  !*** ./node_modules/@arcgis/core/core/Version.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Version": () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let r=class{constructor(t,r,o=""){this.major=t,this.minor=r,this._context=o}lessThan(t,r){return this.major<t||t===this.major&&this.minor<r}since(t,r){return!this.lessThan(t,r)}validate(r){if(this.major!==r.major){const o=this._context&&this._context+":",s=this._context&&this._context+" ";throw new _Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](o+"unsupported-version",`Required major ${s}version is '${this.major}', but got '\${version.major}.\${version.minor}'`,{version:r})}}clone(){return new r(this.major,this.minor,this._context)}static parse(o,s=""){const[e,i]=o.split("."),n=/^\s*\d+\s*$/;if(!e||!e.match||!n.test(e)){throw new _Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]((s&&s+":")+"invalid-version","Expected major version to be a number, but got '${version}'",{version:o})}if(!i||!i.match||!n.test(i)){throw new _Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]((s&&s+":")+"invalid-version","Expected minor version to be a number, but got '${version}'",{version:o})}const a=parseInt(e,10),h=parseInt(i,10);return new r(a,h,s)}};


/***/ }),

/***/ "./node_modules/@arcgis/core/renderers/support/DictionaryLoader.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/renderers/support/DictionaryLoader.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DictionaryLoader": () => (/* binding */ y)
/* harmony export */ });
/* harmony import */ var _Color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Color.js */ "./node_modules/@arcgis/core/Color.js");
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_LRUCache_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/LRUCache.js */ "./node_modules/@arcgis/core/core/LRUCache.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_string_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/string.js */ "./node_modules/@arcgis/core/core/string.js");
/* harmony import */ var _core_Version_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/Version.js */ "./node_modules/@arcgis/core/core/Version.js");
/* harmony import */ var _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../layers/support/FieldsIndex.js */ "./node_modules/@arcgis/core/layers/support/FieldsIndex.js");
/* harmony import */ var _support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../support/arcadeOnDemand.js */ "./node_modules/@arcgis/core/support/arcadeOnDemand.js");
/* harmony import */ var _symbols_CIMSymbol_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../symbols/CIMSymbol.js */ "./node_modules/@arcgis/core/symbols/CIMSymbol.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const h="esri.renderers.support.DictionaryLoader",u={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class y{constructor(e,t,s){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new _core_LRUCache_js__WEBPACK_IMPORTED_MODULE_5__.LRUCache(100),this._dictionaryVersion=null,this._fieldIndex=null,this._dictionaryPromise=null,this.url=e,this.config=t,this.fieldMap=s}getSymbolFields(){return this._symbolFields}async getSymbolAsync(t,s){let i;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(s));try{i=await this._dictionaryPromise}catch(d){if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_6__.isAbortError)(d))return this._dictionaryPromise=null,null}const o=this._dictionaryVersion&&this._dictionaryVersion.since(4,0),l={};if(this.fieldMap)for(const e of this._symbolFields){const s=this._getFieldName(this.fieldMap[e]);l[e]=s?o?t.attributes[s]:""+t.attributes[s]:""}let a=null;try{a=i?.(l,s)}catch(g){return null}if(!a||"string"!=typeof a)return null;const c=(0,_core_string_js__WEBPACK_IMPORTED_MODULE_7__.numericHash)(a).toString(),m=this._symbolCache.get(c);if(m)return m.catch((()=>{this._symbolCache.pop(c)})),m;const f=a.split(";"),h=[],u=[];for(const r of f)if(r)if(r.includes("po:")){const t=r.substr(3).split("|");if(3===t.length){const s=t[0],i=t[1];let o=t[2];if("DashTemplate"===i)o=o.split(" ").map((e=>Number(e)));else if("Color"===i){const t=new _Color_js__WEBPACK_IMPORTED_MODULE_0__["default"](o).toRgba();o=[t[0],t[1],t[2],255*t[3]]}else o=Number(o);u.push({primitiveName:s,propertyName:i,value:o})}}else if(r.includes("|")){for(const e of r.split("|"))if(this._itemNames.has(e)){h.push(e);break}}else this._itemNames.has(r)&&h.push(r);const y=null==t.geometry||!t.geometry.hasZ&&"point"===t.geometry.type,p=this._cimPartsToCIMSymbol(h,u,y,s);return this._symbolCache.put(c,p,1),p}async fetchResources(e){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__["default"].getLogger(h).error("no valid URL!");const o=(0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:null!=e?e.signal:null}),[{data:r}]=await Promise.all([o,(0,_support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_10__.loadArcade)()]);if(!r)throw this._dictionaryPromise=null,new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("esri.renderers.DictionaryRenderer","Bad dictionary data!");const{authoringInfo:n,dictionary_version:f,expression:u,itemsNames:y}=r,p=u;let d=!1;f&&(this._dictionaryVersion=_core_Version_js__WEBPACK_IMPORTED_MODULE_8__.Version.parse(f),d=this._dictionaryVersion.since(4,0)),this._refSymbolUrlTemplate=this.url+"/"+r.cimRefTemplateUrl,this._itemNames=new Set(y),this._symbolFields=n.symbol;const g={};if(this.config){const e=this.config;for(const t in e)g[t]=e[t]}if(n.configuration)for(const t of n.configuration)g.hasOwnProperty(t.name)||(g[t.name]=t.value);const b=[];if(null!=e&&e.fields&&this.fieldMap)for(const t of this._symbolFields){const s=this.fieldMap[t],i=e.fields.filter((e=>e.name.toLowerCase()===s?.toLowerCase()));i.length>0&&b.push({...i[0],type:d?i[0].type:"esriFieldTypeString"})}b.length>0&&(this._fieldIndex=new _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_9__["default"](b));const _=(0,_support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_10__.createDictionaryExpression)(p,null!=e?e.spatialReference:null,b,g).then((e=>{const t={scale:0};return(s,i)=>{if(null==e)return null;const o=e.repurposeFeature({geometry:null,attributes:s});return t.scale=null!=i?i.scale??void 0:void 0,e.evaluate({$feature:o,$view:t},e.services)}})).catch((e=>(_core_Logger_js__WEBPACK_IMPORTED_MODULE_4__["default"].getLogger(h).error("Creating dictinoary expression failed:",e),null)));return this._dictionaryPromise=_,_}async _cimPartsToCIMSymbol(e,t,s,i){const o=new Array(e.length);for(let l=0;l<e.length;l++)o[l]=this._getSymbolPart(e[l],i);const r=await Promise.all(o),n=this.fieldMap;if(n)for(const l of r)p(l,n);return new _symbols_CIMSymbol_js__WEBPACK_IMPORTED_MODULE_11__["default"]({data:this._combineSymbolParts(r,t,s)})}async _getSymbolPart(e,s){if(this._ongoingRequests.has(e))return this._ongoingRequests.get(e).then((e=>e.data));const i=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,e),o=(0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(i,{responseType:"json",query:{f:"json"},...s});this._ongoingRequests.set(e,o);try{return(await o).data}catch(r){throw this._ongoingRequests.delete(e),r}}_combineSymbolParts(e,t,s){if(!e||0===e.length)return null;const i={...e[0]};if(e.length>1){i.symbolLayers=[];for(const t of e){const e=t;i.symbolLayers.unshift(...e.symbolLayers)}}return s&&(i.callout=u),{type:"CIMSymbolReference",symbol:i,primitiveOverrides:t}}_getFieldName(e){if(null!==this._fieldIndex){const t=this._fieldIndex.get(e);return t?t.name:e}return e}}function p(e,t){if(!e)return;const s=e.symbolLayers;if(!s)return;let i=s.length;for(;i--;){const e=s[i];if(e&&!1!==e.enable&&"CIMVectorMarker"===e.type)d(e,t)}}function d(e,t){const s=e.markerGraphics;if(s)for(const i of s){if(!i)continue;const e=i.symbol;if(e)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":p(e,t);break;case"CIMTextSymbol":e.fieldMap=t}}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvZTQwNmRhZTM1MTAwNmNlZDUyMDkxMWMxMTZiMzAyNWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUMwQixZQUFZLHNCQUFzQiwwQ0FBMEMsY0FBYyxrREFBa0QsV0FBVywwQkFBMEIsWUFBWSx5QkFBeUIsNEVBQTRFLFVBQVUsaURBQUMsMkNBQTJDLEVBQUUsY0FBYyxXQUFXLGVBQWUsY0FBYyxJQUFJLGNBQWMsSUFBSSxVQUFVLEdBQUcsUUFBUSxrREFBa0QscUJBQXFCLHdDQUF3Qyw2QkFBNkIsVUFBVSxpREFBQyxpRkFBaUYsUUFBUSxJQUFJLFVBQVUsRUFBRSw2QkFBNkIsVUFBVSxpREFBQyxpRkFBaUYsUUFBUSxJQUFJLFVBQVUsRUFBRSx3Q0FBd0Msc0JBQTJDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNKejdCO0FBQ0E7QUFDQTtBQUNBO0FBQ3dpQixxREFBcUQsd0NBQXdDLG9DQUFvQyxpREFBaUQsSUFBSSxRQUFRLG1CQUFtQixzR0FBc0csdURBQUMsK0hBQStILGtCQUFrQiwwQkFBMEIsMEJBQTBCLE1BQU0sMEVBQTBFLElBQUksZ0NBQWdDLFNBQVMsR0FBRyxtRUFBQyw2Q0FBNkMseUVBQXlFLG9EQUFvRCw2Q0FBNkMsK0NBQStDLFdBQVcsSUFBSSxXQUFXLFNBQVMsWUFBWSxzQ0FBc0MsUUFBUSw0REFBQywwQ0FBMEMsMEJBQTBCLHlCQUF5QixLQUFLLGtCQUFrQixhQUFhLDRDQUE0QywrQkFBK0IsaUJBQWlCLG9CQUFvQixXQUFXLHlEQUF5RCxxQkFBcUIsWUFBWSxpREFBQyxhQUFhLDRCQUE0QixpQkFBaUIsUUFBUSx1Q0FBdUMsR0FBRyx5QkFBeUIsdURBQXVELFVBQVUsT0FBTyx1Q0FBdUMsMkdBQTJHLHNDQUFzQyx3QkFBd0IsMERBQTBELHlCQUF5QixpRUFBVywyQkFBMkIsUUFBUSx1REFBQyxvREFBb0QsMkJBQTJCLFNBQVMsOEJBQThCLElBQUksT0FBTyx1QkFBdUIsdUVBQUMsS0FBSyw2Q0FBNkMsc0RBQUMsNkRBQTZELE1BQU0sK0RBQStELE9BQU8sU0FBUyw0QkFBNEIsMkRBQU8sNkpBQTZKLFdBQVcsZ0JBQWdCLG9CQUFvQiwyQkFBMkIsZ0dBQWdHLFdBQVcsdUVBQXVFLHlGQUF5RixvQkFBb0IsK0NBQStDLEVBQUUsa0NBQWtDLHNFQUFDLEtBQUssUUFBUSx1RkFBQyxrREFBa0QsU0FBUyxTQUFTLGNBQWMsdUJBQXVCLDRCQUE0QiwyQkFBMkIsRUFBRSwwREFBMEQsbUJBQW1CLGNBQWMsY0FBYyxpRUFBVyw4REFBOEQsbUNBQW1DLG9DQUFvQyw0QkFBNEIsWUFBWSxXQUFXLHFDQUFxQyw2Q0FBNkMsNkJBQTZCLFdBQVcsOERBQUMsRUFBRSxxQ0FBcUMsRUFBRSwwQkFBMEIsc0ZBQXNGLGlEQUFpRCxVQUFVLFNBQVMsdURBQUMsSUFBSSwyQkFBMkIsU0FBUyxNQUFNLEVBQUUsK0JBQStCLElBQUkscUJBQXFCLFNBQVMseUNBQXlDLDJCQUEyQixnQ0FBZ0MsU0FBUyxTQUFTLGVBQWUsa0JBQWtCLGtCQUFrQixVQUFVLDJDQUEyQyx5QkFBeUIseURBQXlELGlCQUFpQiw0QkFBNEIsZ0NBQWdDLGtCQUFrQixVQUFVLGdCQUFnQixhQUFhLHVCQUF1QixhQUFhLGVBQWUsS0FBSyxJQUFJLEVBQUUsYUFBYSx3REFBd0QsZ0JBQWdCLHlCQUF5Qix1QkFBdUIsZUFBZSxpQkFBaUIsb0JBQW9CLHVFQUF1RSxNQUFNLG1DQUFpRSIsInNvdXJjZXMiOlsid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2NvcmUvVmVyc2lvbi5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9yZW5kZXJlcnMvc3VwcG9ydC9EaWN0aW9uYXJ5TG9hZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnQgdCBmcm9tXCIuL0Vycm9yLmpzXCI7bGV0IHI9Y2xhc3N7Y29uc3RydWN0b3IodCxyLG89XCJcIil7dGhpcy5tYWpvcj10LHRoaXMubWlub3I9cix0aGlzLl9jb250ZXh0PW99bGVzc1RoYW4odCxyKXtyZXR1cm4gdGhpcy5tYWpvcjx0fHx0PT09dGhpcy5tYWpvciYmdGhpcy5taW5vcjxyfXNpbmNlKHQscil7cmV0dXJuIXRoaXMubGVzc1RoYW4odCxyKX12YWxpZGF0ZShyKXtpZih0aGlzLm1ham9yIT09ci5tYWpvcil7Y29uc3Qgbz10aGlzLl9jb250ZXh0JiZ0aGlzLl9jb250ZXh0K1wiOlwiLHM9dGhpcy5fY29udGV4dCYmdGhpcy5fY29udGV4dCtcIiBcIjt0aHJvdyBuZXcgdChvK1widW5zdXBwb3J0ZWQtdmVyc2lvblwiLGBSZXF1aXJlZCBtYWpvciAke3N9dmVyc2lvbiBpcyAnJHt0aGlzLm1ham9yfScsIGJ1dCBnb3QgJ1xcJHt2ZXJzaW9uLm1ham9yfS5cXCR7dmVyc2lvbi5taW5vcn0nYCx7dmVyc2lvbjpyfSl9fWNsb25lKCl7cmV0dXJuIG5ldyByKHRoaXMubWFqb3IsdGhpcy5taW5vcix0aGlzLl9jb250ZXh0KX1zdGF0aWMgcGFyc2UobyxzPVwiXCIpe2NvbnN0W2UsaV09by5zcGxpdChcIi5cIiksbj0vXlxccypcXGQrXFxzKiQvO2lmKCFlfHwhZS5tYXRjaHx8IW4udGVzdChlKSl7dGhyb3cgbmV3IHQoKHMmJnMrXCI6XCIpK1wiaW52YWxpZC12ZXJzaW9uXCIsXCJFeHBlY3RlZCBtYWpvciB2ZXJzaW9uIHRvIGJlIGEgbnVtYmVyLCBidXQgZ290ICcke3ZlcnNpb259J1wiLHt2ZXJzaW9uOm99KX1pZighaXx8IWkubWF0Y2h8fCFuLnRlc3QoaSkpe3Rocm93IG5ldyB0KChzJiZzK1wiOlwiKStcImludmFsaWQtdmVyc2lvblwiLFwiRXhwZWN0ZWQgbWlub3IgdmVyc2lvbiB0byBiZSBhIG51bWJlciwgYnV0IGdvdCAnJHt2ZXJzaW9ufSdcIix7dmVyc2lvbjpvfSl9Y29uc3QgYT1wYXJzZUludChlLDEwKSxoPXBhcnNlSW50KGksMTApO3JldHVybiBuZXcgcihhLGgscyl9fTtleHBvcnR7ciBhcyBWZXJzaW9ufTtcbiIsIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnQgZSBmcm9tXCIuLi8uLi9Db2xvci5qc1wiO2ltcG9ydCB0IGZyb21cIi4uLy4uL3JlcXVlc3QuanNcIjtpbXBvcnQgcyBmcm9tXCIuLi8uLi9jb3JlL0Vycm9yLmpzXCI7aW1wb3J0XCIuLi8uLi9jb3JlL2hhcy5qc1wiO2ltcG9ydCBpIGZyb21cIi4uLy4uL2NvcmUvTG9nZ2VyLmpzXCI7aW1wb3J0e0xSVUNhY2hlIGFzIG99ZnJvbVwiLi4vLi4vY29yZS9MUlVDYWNoZS5qc1wiO2ltcG9ydHtpc0Fib3J0RXJyb3IgYXMgcn1mcm9tXCIuLi8uLi9jb3JlL3Byb21pc2VVdGlscy5qc1wiO2ltcG9ydHtudW1lcmljSGFzaCBhcyBufWZyb21cIi4uLy4uL2NvcmUvc3RyaW5nLmpzXCI7aW1wb3J0e1ZlcnNpb24gYXMgbH1mcm9tXCIuLi8uLi9jb3JlL1ZlcnNpb24uanNcIjtpbXBvcnQgYSBmcm9tXCIuLi8uLi9sYXllcnMvc3VwcG9ydC9GaWVsZHNJbmRleC5qc1wiO2ltcG9ydHtsb2FkQXJjYWRlIGFzIGMsY3JlYXRlRGljdGlvbmFyeUV4cHJlc3Npb24gYXMgbX1mcm9tXCIuLi8uLi9zdXBwb3J0L2FyY2FkZU9uRGVtYW5kLmpzXCI7aW1wb3J0IGYgZnJvbVwiLi4vLi4vc3ltYm9scy9DSU1TeW1ib2wuanNcIjtjb25zdCBoPVwiZXNyaS5yZW5kZXJlcnMuc3VwcG9ydC5EaWN0aW9uYXJ5TG9hZGVyXCIsdT17dHlwZTpcIkNJTVNpbXBsZUxpbmVDYWxsb3V0XCIsbGluZVN5bWJvbDp7dHlwZTpcIkNJTUxpbmVTeW1ib2xcIixzeW1ib2xMYXllcnM6W3t0eXBlOlwiQ0lNU29saWRTdHJva2VcIix3aWR0aDouNSxjb2xvcjpbMCwwLDAsMjU1XX1dfX07Y2xhc3MgeXtjb25zdHJ1Y3RvcihlLHQscyl7dGhpcy5jb25maWc9bnVsbCx0aGlzLmZpZWxkTWFwPW51bGwsdGhpcy51cmw9bnVsbCx0aGlzLl9vbmdvaW5nUmVxdWVzdHM9bmV3IE1hcCx0aGlzLl9zeW1ib2xDYWNoZT1uZXcgbygxMDApLHRoaXMuX2RpY3Rpb25hcnlWZXJzaW9uPW51bGwsdGhpcy5fZmllbGRJbmRleD1udWxsLHRoaXMuX2RpY3Rpb25hcnlQcm9taXNlPW51bGwsdGhpcy51cmw9ZSx0aGlzLmNvbmZpZz10LHRoaXMuZmllbGRNYXA9c31nZXRTeW1ib2xGaWVsZHMoKXtyZXR1cm4gdGhpcy5fc3ltYm9sRmllbGRzfWFzeW5jIGdldFN5bWJvbEFzeW5jKHQscyl7bGV0IGk7dGhpcy5fZGljdGlvbmFyeVByb21pc2V8fCh0aGlzLl9kaWN0aW9uYXJ5UHJvbWlzZT10aGlzLmZldGNoUmVzb3VyY2VzKHMpKTt0cnl7aT1hd2FpdCB0aGlzLl9kaWN0aW9uYXJ5UHJvbWlzZX1jYXRjaChkKXtpZihyKGQpKXJldHVybiB0aGlzLl9kaWN0aW9uYXJ5UHJvbWlzZT1udWxsLG51bGx9Y29uc3Qgbz10aGlzLl9kaWN0aW9uYXJ5VmVyc2lvbiYmdGhpcy5fZGljdGlvbmFyeVZlcnNpb24uc2luY2UoNCwwKSxsPXt9O2lmKHRoaXMuZmllbGRNYXApZm9yKGNvbnN0IGUgb2YgdGhpcy5fc3ltYm9sRmllbGRzKXtjb25zdCBzPXRoaXMuX2dldEZpZWxkTmFtZSh0aGlzLmZpZWxkTWFwW2VdKTtsW2VdPXM/bz90LmF0dHJpYnV0ZXNbc106XCJcIit0LmF0dHJpYnV0ZXNbc106XCJcIn1sZXQgYT1udWxsO3RyeXthPWk/LihsLHMpfWNhdGNoKGcpe3JldHVybiBudWxsfWlmKCFhfHxcInN0cmluZ1wiIT10eXBlb2YgYSlyZXR1cm4gbnVsbDtjb25zdCBjPW4oYSkudG9TdHJpbmcoKSxtPXRoaXMuX3N5bWJvbENhY2hlLmdldChjKTtpZihtKXJldHVybiBtLmNhdGNoKCgoKT0+e3RoaXMuX3N5bWJvbENhY2hlLnBvcChjKX0pKSxtO2NvbnN0IGY9YS5zcGxpdChcIjtcIiksaD1bXSx1PVtdO2Zvcihjb25zdCByIG9mIGYpaWYocilpZihyLmluY2x1ZGVzKFwicG86XCIpKXtjb25zdCB0PXIuc3Vic3RyKDMpLnNwbGl0KFwifFwiKTtpZigzPT09dC5sZW5ndGgpe2NvbnN0IHM9dFswXSxpPXRbMV07bGV0IG89dFsyXTtpZihcIkRhc2hUZW1wbGF0ZVwiPT09aSlvPW8uc3BsaXQoXCIgXCIpLm1hcCgoZT0+TnVtYmVyKGUpKSk7ZWxzZSBpZihcIkNvbG9yXCI9PT1pKXtjb25zdCB0PW5ldyBlKG8pLnRvUmdiYSgpO289W3RbMF0sdFsxXSx0WzJdLDI1NSp0WzNdXX1lbHNlIG89TnVtYmVyKG8pO3UucHVzaCh7cHJpbWl0aXZlTmFtZTpzLHByb3BlcnR5TmFtZTppLHZhbHVlOm99KX19ZWxzZSBpZihyLmluY2x1ZGVzKFwifFwiKSl7Zm9yKGNvbnN0IGUgb2Ygci5zcGxpdChcInxcIikpaWYodGhpcy5faXRlbU5hbWVzLmhhcyhlKSl7aC5wdXNoKGUpO2JyZWFrfX1lbHNlIHRoaXMuX2l0ZW1OYW1lcy5oYXMocikmJmgucHVzaChyKTtjb25zdCB5PW51bGw9PXQuZ2VvbWV0cnl8fCF0Lmdlb21ldHJ5Lmhhc1omJlwicG9pbnRcIj09PXQuZ2VvbWV0cnkudHlwZSxwPXRoaXMuX2NpbVBhcnRzVG9DSU1TeW1ib2woaCx1LHkscyk7cmV0dXJuIHRoaXMuX3N5bWJvbENhY2hlLnB1dChjLHAsMSkscH1hc3luYyBmZXRjaFJlc291cmNlcyhlKXtpZih0aGlzLl9kaWN0aW9uYXJ5UHJvbWlzZSlyZXR1cm4gdGhpcy5fZGljdGlvbmFyeVByb21pc2U7aWYoIXRoaXMudXJsKXJldHVybiB2b2lkIGkuZ2V0TG9nZ2VyKGgpLmVycm9yKFwibm8gdmFsaWQgVVJMIVwiKTtjb25zdCBvPXQodGhpcy51cmwrXCIvcmVzb3VyY2VzL3N0eWxlcy9kaWN0aW9uYXJ5LWluZm8uanNvblwiLHtyZXNwb25zZVR5cGU6XCJqc29uXCIscXVlcnk6e2Y6XCJqc29uXCJ9LHNpZ25hbDpudWxsIT1lP2Uuc2lnbmFsOm51bGx9KSxbe2RhdGE6cn1dPWF3YWl0IFByb21pc2UuYWxsKFtvLGMoKV0pO2lmKCFyKXRocm93IHRoaXMuX2RpY3Rpb25hcnlQcm9taXNlPW51bGwsbmV3IHMoXCJlc3JpLnJlbmRlcmVycy5EaWN0aW9uYXJ5UmVuZGVyZXJcIixcIkJhZCBkaWN0aW9uYXJ5IGRhdGEhXCIpO2NvbnN0e2F1dGhvcmluZ0luZm86bixkaWN0aW9uYXJ5X3ZlcnNpb246ZixleHByZXNzaW9uOnUsaXRlbXNOYW1lczp5fT1yLHA9dTtsZXQgZD0hMTtmJiYodGhpcy5fZGljdGlvbmFyeVZlcnNpb249bC5wYXJzZShmKSxkPXRoaXMuX2RpY3Rpb25hcnlWZXJzaW9uLnNpbmNlKDQsMCkpLHRoaXMuX3JlZlN5bWJvbFVybFRlbXBsYXRlPXRoaXMudXJsK1wiL1wiK3IuY2ltUmVmVGVtcGxhdGVVcmwsdGhpcy5faXRlbU5hbWVzPW5ldyBTZXQoeSksdGhpcy5fc3ltYm9sRmllbGRzPW4uc3ltYm9sO2NvbnN0IGc9e307aWYodGhpcy5jb25maWcpe2NvbnN0IGU9dGhpcy5jb25maWc7Zm9yKGNvbnN0IHQgaW4gZSlnW3RdPWVbdF19aWYobi5jb25maWd1cmF0aW9uKWZvcihjb25zdCB0IG9mIG4uY29uZmlndXJhdGlvbilnLmhhc093blByb3BlcnR5KHQubmFtZSl8fChnW3QubmFtZV09dC52YWx1ZSk7Y29uc3QgYj1bXTtpZihudWxsIT1lJiZlLmZpZWxkcyYmdGhpcy5maWVsZE1hcClmb3IoY29uc3QgdCBvZiB0aGlzLl9zeW1ib2xGaWVsZHMpe2NvbnN0IHM9dGhpcy5maWVsZE1hcFt0XSxpPWUuZmllbGRzLmZpbHRlcigoZT0+ZS5uYW1lLnRvTG93ZXJDYXNlKCk9PT1zPy50b0xvd2VyQ2FzZSgpKSk7aS5sZW5ndGg+MCYmYi5wdXNoKHsuLi5pWzBdLHR5cGU6ZD9pWzBdLnR5cGU6XCJlc3JpRmllbGRUeXBlU3RyaW5nXCJ9KX1iLmxlbmd0aD4wJiYodGhpcy5fZmllbGRJbmRleD1uZXcgYShiKSk7Y29uc3QgXz1tKHAsbnVsbCE9ZT9lLnNwYXRpYWxSZWZlcmVuY2U6bnVsbCxiLGcpLnRoZW4oKGU9Pntjb25zdCB0PXtzY2FsZTowfTtyZXR1cm4ocyxpKT0+e2lmKG51bGw9PWUpcmV0dXJuIG51bGw7Y29uc3Qgbz1lLnJlcHVycG9zZUZlYXR1cmUoe2dlb21ldHJ5Om51bGwsYXR0cmlidXRlczpzfSk7cmV0dXJuIHQuc2NhbGU9bnVsbCE9aT9pLnNjYWxlPz92b2lkIDA6dm9pZCAwLGUuZXZhbHVhdGUoeyRmZWF0dXJlOm8sJHZpZXc6dH0sZS5zZXJ2aWNlcyl9fSkpLmNhdGNoKChlPT4oaS5nZXRMb2dnZXIoaCkuZXJyb3IoXCJDcmVhdGluZyBkaWN0aW5vYXJ5IGV4cHJlc3Npb24gZmFpbGVkOlwiLGUpLG51bGwpKSk7cmV0dXJuIHRoaXMuX2RpY3Rpb25hcnlQcm9taXNlPV8sX31hc3luYyBfY2ltUGFydHNUb0NJTVN5bWJvbChlLHQscyxpKXtjb25zdCBvPW5ldyBBcnJheShlLmxlbmd0aCk7Zm9yKGxldCBsPTA7bDxlLmxlbmd0aDtsKyspb1tsXT10aGlzLl9nZXRTeW1ib2xQYXJ0KGVbbF0saSk7Y29uc3Qgcj1hd2FpdCBQcm9taXNlLmFsbChvKSxuPXRoaXMuZmllbGRNYXA7aWYobilmb3IoY29uc3QgbCBvZiByKXAobCxuKTtyZXR1cm4gbmV3IGYoe2RhdGE6dGhpcy5fY29tYmluZVN5bWJvbFBhcnRzKHIsdCxzKX0pfWFzeW5jIF9nZXRTeW1ib2xQYXJ0KGUscyl7aWYodGhpcy5fb25nb2luZ1JlcXVlc3RzLmhhcyhlKSlyZXR1cm4gdGhpcy5fb25nb2luZ1JlcXVlc3RzLmdldChlKS50aGVuKChlPT5lLmRhdGEpKTtjb25zdCBpPXRoaXMuX3JlZlN5bWJvbFVybFRlbXBsYXRlLnJlcGxhY2VBbGwoL1xce2l0ZW1OYW1lXFx9L2dpLGUpLG89dChpLHtyZXNwb25zZVR5cGU6XCJqc29uXCIscXVlcnk6e2Y6XCJqc29uXCJ9LC4uLnN9KTt0aGlzLl9vbmdvaW5nUmVxdWVzdHMuc2V0KGUsbyk7dHJ5e3JldHVybihhd2FpdCBvKS5kYXRhfWNhdGNoKHIpe3Rocm93IHRoaXMuX29uZ29pbmdSZXF1ZXN0cy5kZWxldGUoZSkscn19X2NvbWJpbmVTeW1ib2xQYXJ0cyhlLHQscyl7aWYoIWV8fDA9PT1lLmxlbmd0aClyZXR1cm4gbnVsbDtjb25zdCBpPXsuLi5lWzBdfTtpZihlLmxlbmd0aD4xKXtpLnN5bWJvbExheWVycz1bXTtmb3IoY29uc3QgdCBvZiBlKXtjb25zdCBlPXQ7aS5zeW1ib2xMYXllcnMudW5zaGlmdCguLi5lLnN5bWJvbExheWVycyl9fXJldHVybiBzJiYoaS5jYWxsb3V0PXUpLHt0eXBlOlwiQ0lNU3ltYm9sUmVmZXJlbmNlXCIsc3ltYm9sOmkscHJpbWl0aXZlT3ZlcnJpZGVzOnR9fV9nZXRGaWVsZE5hbWUoZSl7aWYobnVsbCE9PXRoaXMuX2ZpZWxkSW5kZXgpe2NvbnN0IHQ9dGhpcy5fZmllbGRJbmRleC5nZXQoZSk7cmV0dXJuIHQ/dC5uYW1lOmV9cmV0dXJuIGV9fWZ1bmN0aW9uIHAoZSx0KXtpZighZSlyZXR1cm47Y29uc3Qgcz1lLnN5bWJvbExheWVycztpZighcylyZXR1cm47bGV0IGk9cy5sZW5ndGg7Zm9yKDtpLS07KXtjb25zdCBlPXNbaV07aWYoZSYmITEhPT1lLmVuYWJsZSYmXCJDSU1WZWN0b3JNYXJrZXJcIj09PWUudHlwZSlkKGUsdCl9fWZ1bmN0aW9uIGQoZSx0KXtjb25zdCBzPWUubWFya2VyR3JhcGhpY3M7aWYocylmb3IoY29uc3QgaSBvZiBzKXtpZighaSljb250aW51ZTtjb25zdCBlPWkuc3ltYm9sO2lmKGUpc3dpdGNoKGUudHlwZSl7Y2FzZVwiQ0lNUG9pbnRTeW1ib2xcIjpjYXNlXCJDSU1MaW5lU3ltYm9sXCI6Y2FzZVwiQ0lNUG9seWdvblN5bWJvbFwiOnAoZSx0KTticmVhaztjYXNlXCJDSU1UZXh0U3ltYm9sXCI6ZS5maWVsZE1hcD10fX19ZXhwb3J0e3kgYXMgRGljdGlvbmFyeUxvYWRlcn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=