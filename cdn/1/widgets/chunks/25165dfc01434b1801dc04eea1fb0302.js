"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_core_geometry_support_quantizationUtils_js-node_modules_arcgis_co-a9e48e"],{

/***/ "./node_modules/@arcgis/core/geometry/support/quantizationUtils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/geometry/support/quantizationUtils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "equals": () => (/* binding */ c),
/* harmony export */   "getQuantizedBoundsCoordsArray": () => (/* binding */ F),
/* harmony export */   "getQuantizedBoundsCoordsArrayArray": () => (/* binding */ V),
/* harmony export */   "getQuantizedBoundsPaths": () => (/* binding */ _),
/* harmony export */   "getQuantizedBoundsPoints": () => (/* binding */ Y),
/* harmony export */   "getQuantizedBoundsRings": () => (/* binding */ A),
/* harmony export */   "quantizeBounds": () => (/* binding */ h),
/* harmony export */   "quantizeExtent": () => (/* binding */ w),
/* harmony export */   "quantizeGeometry": () => (/* binding */ d),
/* harmony export */   "quantizeMultipoint": () => (/* binding */ G),
/* harmony export */   "quantizePaths": () => (/* binding */ N),
/* harmony export */   "quantizePoint": () => (/* binding */ L),
/* harmony export */   "quantizePoints": () => (/* binding */ I),
/* harmony export */   "quantizePolygon": () => (/* binding */ O),
/* harmony export */   "quantizePolyline": () => (/* binding */ S),
/* harmony export */   "quantizeRings": () => (/* binding */ g),
/* harmony export */   "quantizeX": () => (/* binding */ s),
/* harmony export */   "quantizeY": () => (/* binding */ f),
/* harmony export */   "toQuantizationTransform": () => (/* binding */ m),
/* harmony export */   "unquantizeBounds": () => (/* binding */ M),
/* harmony export */   "unquantizeCoordsArray": () => (/* binding */ z),
/* harmony export */   "unquantizeCoordsArrayArray": () => (/* binding */ T),
/* harmony export */   "unquantizeExtent": () => (/* binding */ j),
/* harmony export */   "unquantizeMultipoint": () => (/* binding */ U),
/* harmony export */   "unquantizePaths": () => (/* binding */ P),
/* harmony export */   "unquantizePoint": () => (/* binding */ k),
/* harmony export */   "unquantizePoints": () => (/* binding */ E),
/* harmony export */   "unquantizePolygon": () => (/* binding */ q),
/* harmony export */   "unquantizePolyline": () => (/* binding */ v),
/* harmony export */   "unquantizeRings": () => (/* binding */ b),
/* harmony export */   "unquantizeX": () => (/* binding */ p),
/* harmony export */   "unquantizeY": () => (/* binding */ y)
/* harmony export */ });
/* harmony import */ var _jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function l(n){return n&&"upperLeft"===n.originPosition}const i=(n,t,e)=>[t,e],o=(n,t,e)=>[t,e,n[2]],a=(n,t,e)=>[t,e,n[2],n[3]];function m(n){if(!n)return null;return{originPosition:"upper-left"===n.originPosition?"upperLeft":"lower-left"===n.originPosition?"lowerLeft":n.originPosition,scale:n.tolerance?[n.tolerance,n.tolerance]:[1,1],translate:null!=n.extent?[n.extent.xmin,n.extent.ymax]:[0,0]}}function c(n,t){if(n===t||null==n&&null==t)return!0;if(null==n||null==t)return!1;let e,r,u,i,o,a;return l(n)?(e=n.translate[0],r=n.translate[1],u=n.scale[0]):(e=null!=n.extent?n.extent.xmin:0,r=null!=n.extent?n.extent.ymax:0,u=n.tolerance),l(t)?(i=t.translate[0],o=t.translate[1],a=t.scale[0]):(i=null!=t.extent?t.extent.xmin:0,o=null!=t.extent?t.extent.ymax:0,a=t.tolerance),e===i&&r===o&&u===a}function s({scale:n,translate:t},e){return Math.round((e-t[0])/n[0])}function f({scale:n,translate:t},e){return Math.round((t[1]-e)/n[1])}function x(n,t,e){const r=[];let u,l,i,o;for(let a=0;a<e.length;a++){const m=e[a];a>0?(i=s(n,m[0]),o=f(n,m[1]),i===u&&o===l||(r.push(t(m,i-u,o-l)),u=i,l=o)):(u=s(n,m[0]),l=f(n,m[1]),r.push(t(m,u,l)))}return r.length>0?r:null}function h(n,t,e){return t[0]=s(n,e[0]),t[3]=f(n,e[1]),t[2]=s(n,e[2]),t[1]=f(n,e[3]),t}function I(n,t,e,r){return x(n,e?r?a:o:r?o:i,t)}function g(n,t,e,r){const u=[],l=e?r?a:o:r?o:i;for(let i=0;i<t.length;i++){const e=x(n,l,t[i]);e&&e.length>=3&&u.push(e)}return u.length?u:null}function N(n,t,e,r){const u=[],l=e?r?a:o:r?o:i;for(let i=0;i<t.length;i++){const e=x(n,l,t[i]);e&&e.length>=2&&u.push(e)}return u.length?u:null}function p({scale:n,translate:t},e){return e*n[0]+t[0]}function y({scale:n,translate:t},e){return t[1]-e*n[1]}function z(n,t,e){const r=new Array(e.length);if(!e.length)return r;const[u,l]=n.scale;let i=p(n,e[0][0]),o=y(n,e[0][1]);r[0]=t(e[0],i,o);for(let a=1;a<e.length;a++){const n=e[a];i+=n[0]*u,o-=n[1]*l,r[a]=t(n,i,o)}return r}function T(n,t,e){const r=new Array(e.length);for(let u=0;u<e.length;u++)r[u]=z(n,t,e[u]);return r}function M(n,t,e){return e?(t[0]=p(n,e[0]),t[1]=y(n,e[3]),t[2]=p(n,e[2]),t[3]=y(n,e[1]),t):[p(n,t[0]),y(n,t[3]),p(n,t[2]),y(n,t[1])]}function E(n,t,e,r){return z(n,e?r?a:o:r?o:i,t)}function P(n,t,e,r){return T(n,e?r?a:o:r?o:i,t)}function b(n,t,e,r){return T(n,e?r?a:o:r?o:i,t)}function F(n,t,e){let[r,u]=e[0],l=Math.min(r,t[0]),i=Math.min(u,t[1]),o=Math.max(r,t[2]),a=Math.max(u,t[3]);for(let m=1;m<e.length;m++){const[n,t]=e[m];r+=n,u+=t,n<0&&(l=Math.min(l,r)),n>0&&(o=Math.max(o,r)),t<0?i=Math.min(i,u):t>0&&(a=Math.max(a,u))}return n[0]=l,n[1]=i,n[2]=o,n[3]=a,n}function V(n,t){if(!t.length)return null;n[0]=n[1]=Number.POSITIVE_INFINITY,n[2]=n[3]=Number.NEGATIVE_INFINITY;for(let e=0;e<t.length;e++)F(n,n,t[e]);return n}function Y(n){const t=[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY];return F(t,t,n)}function _(n){return V([0,0,0,0],n)}function A(n){return V([0,0,0,0],n)}function w(n,t,e,r,u){return t.xmin=s(n,e.xmin),t.ymin=f(n,e.ymin),t.xmax=s(n,e.xmax),t.ymax=f(n,e.ymax),t!==e&&(r&&(t.zmin=e.zmin,t.zmax=e.zmax),u&&(t.mmin=e.mmin,t.mmax=e.mmax)),t}function G(n,t,e,r,u){return t.points=I(n,e.points,r,u)??[],t}function L(n,t,e,r,u){return t.x=s(n,e.x),t.y=f(n,e.y),t!==e&&(r&&(t.z=e.z),u&&(t.m=e.m)),t}function O(n,t,e,r,u){const l=g(n,e.rings,r,u);return l?(t.rings=l,t):null}function S(n,t,e,r,u){const l=N(n,e.paths,r,u);return l?(t.paths=l,t):null}function d(l,i){return l&&i?(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isPoint)(i)?L(l,{},i,!1,!1):(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isPolyline)(i)?S(l,{},i,!1,!1):(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isPolygon)(i)?O(l,{},i,!1,!1):(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isMultipoint)(i)?G(l,{},i,!1,!1):(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isExtent)(i)?w(l,{},i,!1,!1):null:null}function j(n,t,e,r,u){return t.xmin=p(n,e.xmin),t.ymin=y(n,e.ymin),t.xmax=p(n,e.xmax),t.ymax=y(n,e.ymax),t!==e&&(r&&(t.zmin=e.zmin,t.zmax=e.zmax),u&&(t.mmin=e.mmin,t.mmax=e.mmax)),t}function U(n,t,e,r,u){return null!=e&&(t.points=E(n,e.points,r,u)),t}function k(n,t,e,r,u){return null==e||(t.x=p(n,e.x),t.y=y(n,e.y),t!==e&&(r&&(t.z=e.z),u&&(t.m=e.m))),t}function q(n,t,e,r,u){return null!=e&&(t.rings=b(n,e.rings,r,u)),t}function v(n,t,e,r,u){return null!=e&&(t.paths=P(n,e.paths,r,u)),t}


/***/ }),

/***/ "./node_modules/@arcgis/core/rest/support/ClassBreaksDefinition.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/support/ClassBreaksDefinition.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunks/tslib.es6.js */ "./node_modules/@arcgis/core/chunks/tslib.es6.js");
/* harmony import */ var _core_jsonMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/jsonMap.js */ "./node_modules/@arcgis/core/core/jsonMap.js");
/* harmony import */ var _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/JSONSupport.js */ "./node_modules/@arcgis/core/core/JSONSupport.js");
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/accessorSupport/decorators/property.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/accessorSupport/decorators/enumeration.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js");
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/accessorSupport/decorators/subclass.js */ "./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const a=new _core_jsonMap_js__WEBPACK_IMPORTED_MODULE_1__.JSONMap({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),n=new _core_jsonMap_js__WEBPACK_IMPORTED_MODULE_1__.JSONMap({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let l=class extends _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_2__.JSONSupport{constructor(e){super(e),this.type="class-breaks-definition",this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null}set standardDeviationInterval(e){"standard-deviation"===this.classificationMethod&&this._set("standardDeviationInterval",e)}set definedInterval(e){"defined-interval"===this.classificationMethod&&this._set("definedInterval",e)}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_7__.enumeration)({classBreaksDef:"class-breaks-definition"})],l.prototype,"type",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({json:{write:!0}})],l.prototype,"breakCount",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({json:{write:!0}})],l.prototype,"classificationField",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({type:String,json:{read:a.read,write:a.write}})],l.prototype,"classificationMethod",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({json:{write:!0}})],l.prototype,"normalizationField",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({json:{read:n.read,write:n.write}})],l.prototype,"normalizationType",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({value:null,json:{write:!0}})],l.prototype,"standardDeviationInterval",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({value:null,json:{write:!0}})],l.prototype,"definedInterval",null),l=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_8__.subclass)("esri.rest.support.ClassBreaksDefinition")],l);const d=l;


/***/ }),

/***/ "./node_modules/@arcgis/core/rest/support/generateRendererUtils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/support/generateRendererUtils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createGenerateRendererClassBreaks": () => (/* binding */ a),
/* harmony export */   "createGenerateRendererUniqueValues": () => (/* binding */ n)
/* harmony export */ });
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t=_core_Logger_js__WEBPACK_IMPORTED_MODULE_0__["default"].getLogger("esri.rest.support.generateRendererUtils");function l(e,t){return Number(e.toFixed(t))}function n(e){const t=o(e),l=[],n=t.uniqueValues.length;for(let a=0;a<n;a++){const e=t.uniqueValues[a],n=t.valueFrequency[a],u=e.toString();l.push({value:e,count:n,label:u})}return{uniqueValues:l}}function a(e){const{normalizationTotal:t}=e;return{classBreaks:u(e),normalizationTotal:t}}function u(e){const t=e.definition,{classificationMethod:n,normalizationType:a,definedInterval:u}=t,i=t.breakCount??1,c=[];let b=e.values;if(0===b.length)return[];b=b.sort(((e,t)=>e-t));const V=b[0],p=b[b.length-1];if("equal-interval"===n)if(b.length>=i){const e=(p-V)/i;let t=V;for(let n=1;n<i;n++){const u=l(V+n*e,6);c.push({minValue:t,maxValue:u,label:s(t,u,a)}),t=u}c.push({minValue:t,maxValue:p,label:s(t,p,a)})}else b.forEach((e=>{c.push({minValue:e,maxValue:e,label:s(e,e,a)})}));else if("natural-breaks"===n){const t=o(b),n=e.valueFrequency||t.valueFrequency,u=r(t.uniqueValues,n,i);let f=V;for(let e=1;e<i;e++)if(t.uniqueValues.length>e){const n=l(t.uniqueValues[u[e]],6);c.push({minValue:f,maxValue:n,label:s(f,n,a)}),f=n}c.push({minValue:f,maxValue:p,label:s(f,p,a)})}else if("quantile"===n)if(b.length>=i&&V!==p){let e=V,t=Math.ceil(b.length/i),l=0;for(let n=1;n<i;n++){let u=t+l-1;u>b.length&&(u=b.length-1),u<0&&(u=0),c.push({minValue:e,maxValue:b[u],label:s(e,b[u],a)}),e=b[u],l+=t,t=Math.ceil((b.length-l)/(i-n))}c.push({minValue:e,maxValue:p,label:s(e,p,a)})}else{let e=-1;for(let t=0;t<b.length;t++){const l=b[t];l!==e&&(e=l,c.push({minValue:e,maxValue:l,label:s(e,l,a)}),e=l)}}else if("standard-deviation"===n){const e=h(b),t=m(b,e);if(0===t)c.push({minValue:b[0],maxValue:b[0],label:s(b[0],b[0],a)});else{const n=f(V,p,i,e,t)*t;let u=0,o=V;for(let t=i;t>=1;t--){const r=l(e-(t-.5)*n,6);c.push({minValue:o,maxValue:r,label:s(o,r,a)}),o=r,u++}let r=l(e+.5*n,6);c.push({minValue:o,maxValue:r,label:s(o,r,a)}),o=r,u++;for(let t=1;t<=i;t++)r=u===2*i?p:l(e+(t+.5)*n,6),c.push({minValue:o,maxValue:r,label:s(o,r,a)}),o=r,u++}}else if("defined-interval"===n){if(!u)return c;const e=b[0],t=b[b.length-1],n=Math.ceil((t-e)/u);let o=e;for(let r=1;r<n;r++){const t=l(e+r*u,6);c.push({minValue:o,maxValue:t,label:s(o,t,a)}),o=t}c.push({minValue:o,maxValue:t,label:s(o,t,a)})}return c}function s(e,t,l){let n=null;return n=e===t?l&&"percent-of-total"===l?e+"%":e.toString():l&&"percent-of-total"===l?e+"% - "+t+"%":e+" - "+t,n}function o(e){const t=[],l=[];let n=Number.MIN_VALUE,a=1,u=-1;for(let s=0;s<e.length;s++){const o=e[s];o===n?(a++,l[u]=a):null!==o&&(t.push(o),n=o,a=1,l.push(a),u++)}return{uniqueValues:t,valueFrequency:l}}function r(e,t,l){const n=e.length,a=[];l>n&&(l=n);for(let s=0;s<l;s++)a.push(Math.round(s*n/l-1));a.push(n-1);let u=i(a,e,t,l);return c(u.mean,u.sdcm,a,e,t,l)&&(u=i(a,e,t,l)),a}function i(e,t,l,n){let a=[],u=[],s=[],o=0;const r=[],i=[];for(let m=0;m<n;m++){const n=b(m,e,t,l);r.push(n.sbMean),i.push(n.sbSdcm),o+=i[m]}let c,f=o,h=!0;for(;h||o<f;){h=!1,a=[];for(let t=0;t<n;t++)a.push(e[t]);for(let l=0;l<n;l++)for(let a=e[l]+1;a<=e[l+1];a++)if(c=t[a],l>0&&a!==e[l+1]&&Math.abs(c-r[l])>Math.abs(c-r[l-1]))e[l]=a;else if(l<n-1&&e[l]!==a-1&&Math.abs(c-r[l])>Math.abs(c-r[l+1])){e[l+1]=a-1;break}f=o,o=0,u=[],s=[];for(let a=0;a<n;a++){u.push(r[a]),s.push(i[a]);const n=b(a,e,t,l);r[a]=n.sbMean,i[a]=n.sbSdcm,o+=i[a]}}if(o>f){for(let t=0;t<n;t++)e[t]=a[t],r[t]=u[t],i[t]=s[t];o=f}return{mean:r,sdcm:i}}function c(e,t,l,n,a,u){let s=0,o=0,r=0,i=0,c=!0;for(let f=0;f<2&&c;f++){0===f&&(c=!1);for(let f=0;f<u-1;f++)for(;l[f+1]+1!==l[f+2];){l[f+1]=l[f+1]+1;const u=b(f,l,n,a);r=u.sbMean,s=u.sbSdcm;const h=b(f+1,l,n,a);if(i=h.sbMean,o=h.sbSdcm,!(s+o<t[f]+t[f+1])){l[f+1]=l[f+1]-1;break}t[f]=s,t[f+1]=o,e[f]=r,e[f+1]=i,c=!0}for(let f=u-1;f>0;f--)for(;l[f]!==l[f-1]+1;){l[f]=l[f]-1;const u=b(f-1,l,n,a);r=u.sbMean,s=u.sbSdcm;const h=b(f,l,n,a);if(i=h.sbMean,o=h.sbSdcm,!(s+o<t[f-1]+t[f])){l[f]=l[f]+1;break}t[f-1]=s,t[f]=o,e[f-1]=r,e[f]=i,c=!0}}return c}function f(e,t,l,n,a){let u=Math.max(n-e,t-n)/a/l;return u=u>=1?1:u>=.5?.5:.25,u}function h(e){let t=0;for(let l=0;l<e.length;l++)t+=e[l];return t/=e.length,t}function m(e,t){let l=0;for(let n=0;n<e.length;n++){const a=e[n];l+=(a-t)*(a-t)}l/=e.length;return Math.sqrt(l)}function b(e,l,n,a){let u=0,s=0;for(let t=l[e]+1;t<=l[e+1];t++){const e=a[t];u+=n[t]*e,s+=e}s<=0&&t.warn("Exception in Natural Breaks calculation");const o=u/s;let r=0;for(let t=l[e]+1;t<=l[e+1];t++)r+=a[t]*(n[t]-o)**2;return{sbMean:o,sbSdcm:r}}


/***/ }),

/***/ "./node_modules/@arcgis/core/statistics/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@arcgis/core/statistics/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "calculateClassBreaks": () => (/* binding */ D),
/* harmony export */   "calculateHistogram": () => (/* binding */ M),
/* harmony export */   "calculatePercentile": () => (/* binding */ p),
/* harmony export */   "calculateStatistics": () => (/* binding */ d),
/* harmony export */   "calculateStringStatistics": () => (/* binding */ f),
/* harmony export */   "calculateUniqueValuesCount": () => (/* binding */ x),
/* harmony export */   "createClassBreaksDefinition": () => (/* binding */ N),
/* harmony export */   "createUVResult": () => (/* binding */ F),
/* harmony export */   "getAttributeComparator": () => (/* binding */ v),
/* harmony export */   "getEqualIntervalBins": () => (/* binding */ $),
/* harmony export */   "getNormalizedValue": () => (/* binding */ z),
/* harmony export */   "isNullCountSupported": () => (/* binding */ m),
/* harmony export */   "processNullValue": () => (/* binding */ c),
/* harmony export */   "processSummaryStatisticsResult": () => (/* binding */ g),
/* harmony export */   "resolveCBResult": () => (/* binding */ S),
/* harmony export */   "statisticTypes": () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _rest_support_ClassBreaksDefinition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rest/support/ClassBreaksDefinition.js */ "./node_modules/@arcgis/core/rest/support/ClassBreaksDefinition.js");
/* harmony import */ var _rest_support_generateRendererUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rest/support/generateRendererUtils.js */ "./node_modules/@arcgis/core/rest/support/generateRendererUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t="<Null>",l="equal-interval",i=1,a=5,r=10,o=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,u=new Set(["esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble"]),s=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function c(n){return null==n||"string"==typeof n&&!n?t:n}function m(n){const e=null!=n.normalizationField||null!=n.normalizationType,t=null!=n.minValue||null!=n.maxValue,l=!!n.sqlExpression&&n.supportsSQLExpression;return!e&&!t&&!l}function f(n){const e=n.returnDistinct?[...new Set(n.values)]:n.values,t=e.filter((n=>null!=n)).sort(),l=t.length,i={count:l,min:t[0],max:t[l-1]};return n.supportsNullCount&&(i.nullcount=e.length-l),n.percentileParams&&(i.median=p(e,n.percentileParams)),i}function d(n){const{values:e,useSampleStdDev:t,supportsNullCount:l}=n;let i=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,r=null,o=null,u=null,s=null,c=0;const m=null==n.minValue?-1/0:n.minValue,f=null==n.maxValue?1/0:n.maxValue;for(const p of e)Number.isFinite(p)?p>=m&&p<=f&&(r=null===r?p:r+p,i=Math.min(i,p),a=Math.max(a,p),c++):"string"==typeof p&&c++;if(c&&null!=r){o=r/c;let n=0;for(const t of e)Number.isFinite(t)&&t>=m&&t<=f&&(n+=(t-o)**2);s=t?c>1?n/(c-1):0:c>0?n/c:0,u=Math.sqrt(s)}else i=null,a=null;const d={avg:o,count:c,max:a,min:i,stddev:u,sum:r,variance:s};return l&&(d.nullcount=e.length-c),n.percentileParams&&(d.median=p(e,n.percentileParams)),d}function p(n,e){const{fieldType:t,value:l,orderBy:i,isDiscrete:a}=e,r=v(t,"desc"===i);if(0===(n=[...n].filter((n=>null!=n)).sort(((n,e)=>r(n,e)))).length)return null;if(l<=0)return n[0];if(l>=1)return n[n.length-1];const o=(n.length-1)*l,u=Math.floor(o),s=u+1,c=o%1,m=n[u],f=n[s];return s>=n.length||a||"string"==typeof m||"string"==typeof f?m:m*(1-c)+f*c}function v(n,e){const t=e?1:-1,l=h(e),i=V(e);if(!(!!n&&["esriFieldTypeDate","esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...u].includes(n)))return(n,e)=>"number"==typeof n&&"number"==typeof e?l(n,e):"string"==typeof n&&"string"==typeof e?i(n,e):t;if("esriFieldTypeDate"===n)return(n,e)=>{const i=new Date(n).getTime(),a=new Date(e).getTime();return isNaN(i)||isNaN(a)?t:l(i,a)};if(u.has(n))return(n,e)=>l(n,e);if("esriFieldTypeString"===n)return(n,e)=>i(n,e);if("esriFieldTypeGUID"===n||"esriFieldTypeGlobalID"===n){const n=V(e);return(e,t)=>n(T(e),T(t))}return e?(n,e)=>1:(n,e)=>-1}function b(n,e,t){if(t){if(null==n)return null==e?0:1;if(null==e)return-1}else{if(null==n)return null==e?0:-1;if(null==e)return 1}return null}function V(n){return n?(n,e)=>{const t=b(n,e,!0);return null!=t?t:(n=n.toUpperCase())>(e=e.toUpperCase())?-1:n<e?1:0}:(n,e)=>{const t=b(n,e,!1);return null!=t?t:(n=n.toUpperCase())<(e=e.toUpperCase())?-1:n>e?1:0}}function h(n){return n?(n,e)=>{const t=b(n,e,!0);return null!=t?t:e-n}:(n,e)=>{const t=b(n,e,!1);return null!=t?t:n-e}}function T(n){return n.substr(24,12)+n.substr(19,4)+n.substr(16,2)+n.substr(14,2)+n.substr(11,2)+n.substr(9,2)+n.substr(6,2)+n.substr(4,2)+n.substr(2,2)+n.substr(0,2)}function g(n,e){let t;for(t in n)s.includes(t)&&(Number.isFinite(n[t])||(n[t]=null));return e?(["avg","stddev","variance"].forEach((e=>{null!=n[e]&&(n[e]=Math.ceil(n[e]??0))})),n):n}function x(n){const e={};for(let t of n)(null==t||"string"==typeof t&&""===t.trim())&&(t=null),null==e[t]?e[t]={count:1,data:t}:e[t].count++;return{count:e}}function y(n){return"coded-value"!==n?.type?[]:n.codedValues.map((n=>n.code))}function F(n,e,t,l){const i=n.count,a=[];if(t&&e){const n=[],t=y(e[0]);for(const i of t)if(e[1]){const t=y(e[1]);for(const a of t)if(e[2]){const t=y(e[2]);for(const e of t)n.push(`${c(i)}${l}${c(a)}${l}${c(e)}`)}else n.push(`${c(i)}${l}${c(a)}`)}else n.push(i);for(const e of n)i.hasOwnProperty(e)||(i[e]={data:e,count:0})}for(const r in i){const n=i[r];a.push({value:n.data,count:n.count,label:n.label})}return{uniqueValueInfos:a}}function z(n,e,t,l){let i=null;switch(e){case"log":0!==n&&(i=Math.log(n)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(l)&&0!==l&&(i=n/l*100);break;case"field":Number.isFinite(t)&&0!==t&&(i=n/t);break;case"natural-log":n>0&&(i=Math.log(n));break;case"square-root":n>0&&(i=n**.5)}return i}function D(n,t){const l=N({field:t.field,normalizationType:t.normalizationType,normalizationField:t.normalizationField,classificationMethod:t.classificationMethod,standardDeviationInterval:t.standardDeviationInterval,breakCount:t.numClasses||a});return n=I(n,t.minValue,t.maxValue),(0,_rest_support_generateRendererUtils_js__WEBPACK_IMPORTED_MODULE_1__.createGenerateRendererClassBreaks)({definition:l,values:n,normalizationTotal:t.normalizationTotal})}function I(n,e,t){const l=e??-1/0,i=t??1/0;return n.filter((n=>Number.isFinite(n)&&n>=l&&n<=i))}function N(e){const{breakCount:t,field:a,normalizationField:r,normalizationType:o}=e,u=e.classificationMethod||l,s="standard-deviation"===u?e.standardDeviationInterval||i:void 0;return new _rest_support_ClassBreaksDefinition_js__WEBPACK_IMPORTED_MODULE_0__["default"]({breakCount:t,classificationField:a,classificationMethod:u,normalizationField:"field"===o?r:void 0,normalizationType:o,standardDeviationInterval:s})}function S(n,e){let t=n.classBreaks;const l=t.length,i=t[0]?.minValue,a=t[l-1]?.maxValue,r="standard-deviation"===e,u=o;return t=t.map((n=>{const e=n.label,t={minValue:n.minValue,maxValue:n.maxValue,label:e};if(r&&e){const n=e.match(u),l=n?.map((n=>+n.trim()))??[];2===l.length?(t.minStdDev=l[0],t.maxStdDev=l[1],l[0]<0&&l[1]>0&&(t.hasAvg=!0)):1===l.length&&(e.includes("<")?(t.minStdDev=null,t.maxStdDev=l[0]):e.includes(">")&&(t.minStdDev=l[0],t.maxStdDev=null))}return t})),{minValue:i,maxValue:a,classBreakInfos:t,normalizationTotal:n.normalizationTotal}}function M(n,e){const t=C(n,e);if(null==t.min&&null==t.max)return{bins:[],minValue:t.min,maxValue:t.max,normalizationTotal:e.normalizationTotal};const l=t.intervals,i=t.min??0,a=t.max??0,r=l.map(((n,e)=>({minValue:l[e][0],maxValue:l[e][1],count:0})));for(const o of n)if(null!=o&&o>=i&&o<=a){const n=k(l,o);n>-1&&r[n].count++}return{bins:r,minValue:i,maxValue:a,normalizationTotal:e.normalizationTotal}}function C(n,e){const{field:t,classificationMethod:l,standardDeviationInterval:i,normalizationType:a,normalizationField:o,normalizationTotal:u,minValue:s,maxValue:c}=e,f=e.numBins||r;let p=null,v=null,b=null;if((!l||"equal-interval"===l)&&!a){if(null!=s&&null!=c)p=s,v=c;else{const e=d({values:n,minValue:s,maxValue:c,useSampleStdDev:!a,supportsNullCount:m({normalizationType:a,normalizationField:o,minValue:s,maxValue:c})});p=e.min??null,v=e.max??null}b=$(p??0,v??0,f)}else{const{classBreaks:e}=D(n,{field:t,normalizationType:a,normalizationField:o,normalizationTotal:u,classificationMethod:l,standardDeviationInterval:i,minValue:s,maxValue:c,numClasses:f});p=e[0].minValue,v=e[e.length-1].maxValue,b=e.map((n=>[n.minValue,n.maxValue]))}return{min:p,max:v,intervals:b}}function k(n,e){let t=-1;for(let l=n.length-1;l>=0;l--){if(e>=n[l][0]){t=l;break}}return t}function $(n,e,t){const l=(e-n)/t,i=[];let a,r=n;for(let o=1;o<=t;o++)a=r+l,a=Number(a.toFixed(16)),i.push([r,o===t?e:a]),r=a;return i}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,