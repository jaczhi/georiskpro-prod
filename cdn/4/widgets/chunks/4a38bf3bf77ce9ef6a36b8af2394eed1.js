"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[3832,9593],{74589:(e,t,i)=>{i.d(t,{Z:()=>c});var r=i(36663),a=i(41151),n=i(82064),s=i(807),o=i(81977),l=(i(7283),i(7753),i(39994),i(79438)),d=i(40266),u=i(80680);let p=class extends((0,a.J)(n.wq)){constructor(e){super(e),this.unit="milliseconds",this.value=0}toMilliseconds(){return(0,s.rJ)(this.value,this.unit,"milliseconds")}};(0,r._)([(0,l.J)(u.v,{nonNullable:!0})],p.prototype,"unit",void 0),(0,r._)([(0,o.Cb)({type:Number,json:{write:!0},nonNullable:!0})],p.prototype,"value",void 0),p=(0,r._)([(0,d.j)("esri.TimeInterval")],p);const c=p},27281:(e,t,i)=>{i.d(t,{Hg:()=>y,V7:()=>m,uD:()=>c});var r=i(74396),a=i(6865),n=i(95620);const s=["esri.Color","esri.portal.Portal","esri.symbols.support.Symbol3DAnchorPosition2D","esri.symbols.support.Symbol3DAnchorPosition3D"];function o(e){return e instanceof r.Z}function l(e){return e instanceof a.Z?Object.keys(e.items):o(e)?(0,n.vw)(e).keys():e?Object.keys(e):[]}function d(e,t){return e instanceof a.Z?e.items[t]:e[t]}function u(e){return e?e.declaredClass:null}function p(e,t){const i=e.diff;if(i&&"function"==typeof i)return i(e,t);const r=l(e),a=l(t);if(0===r.length&&0===a.length)return;if(!r.length||!a.length||function(e,t){return!(!Array.isArray(e)||!Array.isArray(t))&&e.length!==t.length}(e,t))return{type:"complete",oldValue:e,newValue:t};const n=a.filter((e=>!r.includes(e))),c=r.filter((e=>!a.includes(e))),m=r.filter((i=>a.includes(i)&&d(e,i)!==d(t,i))).concat(n,c).sort(),y=u(e);if(y&&s.includes(y)&&m.length)return{type:"complete",oldValue:e,newValue:t};let h;const f=o(e)&&o(t);for(const r of m){const a=d(e,r),n=d(t,r);let s;if((f||"function"!=typeof a&&"function"!=typeof n)&&a!==n&&(null!=a||null!=n)){if(i&&i[r]&&"function"==typeof i[r])s=i[r]?.(a,n);else if(a instanceof Date&&n instanceof Date){if(a.getTime()===n.getTime())continue;s={type:"complete",oldValue:a,newValue:n}}else s="object"==typeof a&&"object"==typeof n&&u(a)===u(n)?p(a,n):{type:"complete",oldValue:a,newValue:n};null!=s&&(null!=h?h.diff[r]=s:h={type:"partial",diff:{[r]:s}})}}return h}function c(e,t){if(null==e)return!1;const i=t.split(".");let r=e;for(const e of i){if("complete"===r.type)return!0;if("partial"!==r.type)return!1;{const t=r.diff[e];if(!t)return!1;r=t}}return!0}function m(e,t){for(const i of t)if(c(e,i))return!0;return!1}function y(e,t){if("function"!=typeof e&&"function"!=typeof t&&(null!=e||null!=t))return null==e||null==t||"object"==typeof e&&"object"==typeof t&&u(e)!==u(t)?{type:"complete",oldValue:e,newValue:t}:p(e,t)}},81655:(e,t,i)=>{i.r(t),i.d(t,{default:()=>W});var r=i(36663),a=(i(91957),i(44308)),n=(i(86004),i(45510),i(16192),i(17259),i(878),i(22836),i(50172),i(72043),i(72506),i(54021)),s=i(15842),o=i(33926),l=i(39154),d=i(81977),u=(i(7283),i(7753),i(39994)),p=i(40266),c=i(59659),m=i(38481),y=i(70375),h=i(68309),f=i(13802),S=i(47109),T=i(40400),b=i(51211),g=i(91772),v=i(89542);const w="esri.layers.graphics.sources.GeoJSONSource",_=f.Z.getLogger(w);let A=class extends h.Z{constructor(){super(...arguments),this.type="geojson",this.refresh=(0,o.Ds)((async e=>{await this.load();const{extent:t,timeExtent:i}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,i&&(this.sourceJSON.timeInfo.timeExtent=[i.start,i.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}applyEdits(e){return this.load().then((()=>this._applyEdits(e)))}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>b.Z.fromJSON(e)))}queryFeaturesJSON(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:g.Z.fromJSON(e.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}_applyEdits(e){if(!this._connection)throw new y.Z("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,i=[],r=[],a=[];if(e.addFeatures)for(const t of e.addFeatures)i.push(this._serializeFeature(t));if(e.deleteFeatures)for(const i of e.deleteFeatures)"objectId"in i&&null!=i.objectId?r.push(i.objectId):"attributes"in i&&null!=i.attributes[t]&&r.push(i.attributes[t]);if(e.updateFeatures)for(const t of e.updateFeatures)a.push(this._serializeFeature(t));return this._connection.invoke("applyEdits",{adds:i,updates:a,deletes:r}).then((({extent:e,timeExtent:t,featureEditResults:i})=>(this.sourceJSON.extent=e,t&&(this.sourceJSON.timeInfo.timeExtent=[t.start,t.end]),this._createEditsResult(i))))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=!0===e.success?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new y.Z("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,i=this._geometryForSerialization(e);return i?{geometry:i.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return null==t?null:"mesh"===t.type||"extent"===t.type?v.Z.fromExtent(t.extent):t}async _startWorker(e){this._connection=await(0,S.bA)("GeoJSONSourceWorker",{strategy:(0,u.Z)("feature-layers-workers")?"dedicated":"local",signal:e});const{fields:t,spatialReference:i,hasZ:r,geometryType:a,objectIdField:n,url:s,timeInfo:o,customParameters:l}=this.layer,d="defaults"===this.layer.originOf("spatialReference"),p={url:s,customParameters:l,fields:t&&t.map((e=>e.toJSON())),geometryType:c.M.toJSON(a),hasZ:r,objectIdField:n,timeInfo:o?o.toJSON():null,spatialReference:d?null:i&&i.toJSON()},m=await this._connection.invoke("load",p,{signal:e});for(const e of m.warnings)_.warn(e.message,{layer:this.layer,warning:e});m.featureErrors.length&&_.warn(`Encountered ${m.featureErrors.length} validation errors while loading features`,m.featureErrors),this.sourceJSON=m.layerDefinition,this.capabilities=(0,T.MS)(this.sourceJSON.hasZ,!0)}};(0,r._)([(0,d.Cb)()],A.prototype,"capabilities",void 0),(0,r._)([(0,d.Cb)()],A.prototype,"type",void 0),(0,r._)([(0,d.Cb)({constructOnly:!0})],A.prototype,"layer",void 0),(0,r._)([(0,d.Cb)()],A.prototype,"sourceJSON",void 0),A=(0,r._)([(0,p.j)(w)],A);var C=i(27668),E=i(63989),x=i(45579),F=i(35134),I=i(43330),j=i(50386),O=i(18241),M=i(12478),N=i(95874),R=i(2030),Z=i(51599),k=i(60822),U=i(18160),P=i(12512),D=i(89076),V=i(17095),G=i(26732),J=i(49341),q=i(14626),B=i(10171),L=i(14685);const z=(0,D.v)();let Q=class extends((0,j.c)((0,E.N)((0,F.M)((0,x.b)((0,C.h)((0,R.n)((0,N.M)((0,M.Q)((0,I.q)((0,O.I)((0,s.R)(m.Z)))))))))))){constructor(e){super(e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new A({layer:this}),this.spatialReference=L.Z.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson",this.typeIdField=null,this.types=null}destroy(){this.source?.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(o.r9).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),(0,V.YN)(this.renderer,this.fieldsIndex),(0,V.UF)(this.timeInfo,this.fieldsIndex)}));return this.addResolvingPromise(t),Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&null==this.geometryType}get parsedUrl(){return this.url?(0,l.mN)(this.url):null}set renderer(e){(0,V.YN)(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e)return void this._set("url",e);const t=(0,l.mN)(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(e,t){const{applyEdits:r}=await i.e(3261).then(i.bind(i,23261));await this.load();const a=await r(this,this.source,e,t);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),a}on(e,t){return super.on(e,t)}createPopupTemplate(e){return(0,B.eZ)(this,e)}createQuery(){const e=new q.Z,t=this.get("capabilities.data");e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:i,timeExtent:r}=this;return e.timeExtent=null!=i&&null!=r?r.offset(-i.value,i.unit):r||null,e}getFieldDomain(e,t){let i,r=!1;const a=t&&t.feature,n=a&&a.attributes,s=this.typeIdField&&n&&n[this.typeIdField];return null!=s&&this.types&&(r=this.types.some((t=>t.id==s&&(i=t.domains&&t.domains[e],i&&"inherited"===i.type&&(i=this._getLayerDomain(e)),!0)))),r||i||(i=this._getLayerDomain(e)),i}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(q.Z.from(e)||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(q.Z.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(q.Z.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(q.Z.from(e)||this.createQuery(),t)))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_getLayerDomain(e){if(!this.fields)return null;let t=null;return this.fields.some((i=>(i.name===e&&(t=i.domain),!!t))),t}};(0,r._)([(0,d.Cb)({readOnly:!0,json:{read:!1,write:!1}})],Q.prototype,"capabilities",null),(0,r._)([(0,d.Cb)({type:String})],Q.prototype,"copyright",void 0),(0,r._)([(0,d.Cb)({readOnly:!0})],Q.prototype,"createQueryVersion",null),(0,r._)([(0,d.Cb)({readOnly:!0})],Q.prototype,"defaultPopupTemplate",null),(0,r._)([(0,d.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],Q.prototype,"definitionExpression",void 0),(0,r._)([(0,d.Cb)({type:String})],Q.prototype,"displayField",void 0),(0,r._)([(0,d.Cb)({type:Boolean})],Q.prototype,"editingEnabled",void 0),(0,r._)([(0,d.Cb)(Z.PV)],Q.prototype,"elevationInfo",void 0),(0,r._)([(0,d.Cb)({type:[P.Z],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],Q.prototype,"fields",void 0),(0,r._)([(0,d.Cb)(z.fieldsIndex)],Q.prototype,"fieldsIndex",void 0),(0,r._)([(0,d.Cb)({type:g.Z,json:{name:"extent"}})],Q.prototype,"fullExtent",void 0),(0,r._)([(0,d.Cb)({type:["point","polygon","polyline","multipoint"],json:{read:{reader:c.M.read}}})],Q.prototype,"geometryType",void 0),(0,r._)([(0,d.Cb)({type:Boolean})],Q.prototype,"hasZ",void 0),(0,r._)([(0,d.Cb)(Z.id)],Q.prototype,"id",void 0),(0,r._)([(0,d.Cb)({type:Boolean,readOnly:!0})],Q.prototype,"isTable",null),(0,r._)([(0,d.Cb)(Z.iR)],Q.prototype,"labelsVisible",void 0),(0,r._)([(0,d.Cb)({type:[G.Z],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:J.r},write:!0}})],Q.prototype,"labelingInfo",void 0),(0,r._)([(0,d.Cb)(Z.rn)],Q.prototype,"legendEnabled",void 0),(0,r._)([(0,d.Cb)({type:["show","hide"]})],Q.prototype,"listMode",void 0),(0,r._)([(0,d.Cb)({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],Q.prototype,"objectIdField",void 0),(0,r._)([(0,d.Cb)(Z.Oh)],Q.prototype,"opacity",void 0),(0,r._)([(0,d.Cb)({type:["GeoJSON"]})],Q.prototype,"operationalLayerType",void 0),(0,r._)([(0,d.Cb)({readOnly:!0})],Q.prototype,"parsedUrl",null),(0,r._)([(0,d.Cb)(Z.C_)],Q.prototype,"popupEnabled",void 0),(0,r._)([(0,d.Cb)({type:a.Z,json:{name:"popupInfo",write:!0}})],Q.prototype,"popupTemplate",void 0),(0,r._)([(0,d.Cb)({types:n.A,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:n.o}}}})],Q.prototype,"renderer",null),(0,r._)([(0,d.Cb)(Z.YI)],Q.prototype,"screenSizePerspectiveEnabled",void 0),(0,r._)([(0,d.Cb)({readOnly:!0})],Q.prototype,"source",void 0),(0,r._)([(0,d.Cb)({type:L.Z})],Q.prototype,"spatialReference",void 0),(0,r._)([(0,d.Cb)({type:[k.Z]})],Q.prototype,"templates",void 0),(0,r._)([(0,d.Cb)()],Q.prototype,"title",void 0),(0,r._)([(0,d.Cb)({json:{read:!1},readOnly:!0})],Q.prototype,"type",void 0),(0,r._)([(0,d.Cb)({type:String,readOnly:!0})],Q.prototype,"typeIdField",void 0),(0,r._)([(0,d.Cb)({type:[U.Z]})],Q.prototype,"types",void 0),(0,r._)([(0,d.Cb)(Z.HQ)],Q.prototype,"url",null),Q=(0,r._)([(0,p.j)("esri.layers.GeoJSONLayer")],Q);const W=Q},10287:(e,t,i)=>{i.d(t,{g:()=>r});const r={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsCentroid:!0,supportsCacheHint:!1,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!1,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}},40400:(e,t,i)=>{i.d(t,{Dm:()=>u,Hq:()=>p,MS:()=>c,bU:()=>o});var r=i(39994),a=i(67134),n=i(10287),s=i(86094);function o(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?s.I4:"esriGeometryPolyline"===e?s.ET:s.lF}}}const l=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let d=1;function u(e,t){if((0,r.Z)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let i=`this.${t} = null;`;for(const t in e)i+=`this${l.test(t)?`.${t}`:`["${t}"]`} = ${JSON.stringify(e[t])};`;const r=new Function(`\n      return class AttributesClass$${d++} {\n        constructor() {\n          ${i};\n        }\n      }\n    `)();return()=>new r}catch(i){return()=>({[t]:null,...e})}}function p(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,a.d9)(e)}}]}function c(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:n.g,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}},45579:(e,t,i)=>{i.d(t,{b:()=>x});var r,a=i(36663),n=i(81977),s=(i(7283),i(7753),i(39994),i(40266)),o=i(70375),l=i(82064),d=i(86745),u=i(78554),p=i(91957),c=i(37956),m=i(25709),y=i(67134),h=i(14626);const f=new m.X({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),S=new m.X({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let T=r=class extends l.wq{constructor(e){super(e),this.where=null,this.geometry=null,this.spatialRelationship="intersects",this.distance=void 0,this.objectIds=null,this.units=null,this.timeExtent=null}createQuery(e={}){const{where:t,geometry:i,spatialRelationship:r,timeExtent:a,objectIds:n,units:s,distance:o}=this;return new h.Z({geometry:(0,y.d9)(i),objectIds:(0,y.d9)(n),spatialRelationship:r,timeExtent:(0,y.d9)(a),where:t,units:s,distance:o,...e})}clone(){const{where:e,geometry:t,spatialRelationship:i,timeExtent:a,objectIds:n,units:s,distance:o}=this;return new r({geometry:(0,y.d9)(t),objectIds:(0,y.d9)(n),spatialRelationship:i,timeExtent:(0,y.d9)(a),where:e,units:s,distance:o})}};(0,a._)([(0,n.Cb)({type:String,json:{write:!0}})],T.prototype,"where",void 0),(0,a._)([(0,n.Cb)({types:p.qM,json:{write:!0}})],T.prototype,"geometry",void 0),(0,a._)([(0,n.Cb)({type:f.apiValues,json:{name:"spatialRel",read:{reader:f.read},write:{allowNull:!1,writer:f.write,overridePolicy(){return{enabled:null!=this.geometry}}}}})],T.prototype,"spatialRelationship",void 0),(0,a._)([(0,n.Cb)({type:Number,json:{write:{overridePolicy(e){return{enabled:null!=e&&null!=this.geometry}}}}})],T.prototype,"distance",void 0),(0,a._)([(0,n.Cb)({type:[Number],json:{write:!0}})],T.prototype,"objectIds",void 0),(0,a._)([(0,n.Cb)({type:S.apiValues,json:{read:S.read,write:{writer:S.write,overridePolicy(e){return{enabled:null!=e&&null!=this.geometry}}}}})],T.prototype,"units",void 0),(0,a._)([(0,n.Cb)({type:c.Z,json:{write:!0}})],T.prototype,"timeExtent",void 0),T=r=(0,a._)([(0,s.j)("esri.layers.support.FeatureFilter")],T);const b=T;var g;const v={read:{reader:u.ij},write:{writer:u.cW,overridePolicy(){return{allowNull:null!=this.excludedEffect,isRequired:null==this.excludedEffect}}}},w={read:{reader:u.ij},write:{writer:u.cW,overridePolicy(){return{allowNull:null!=this.includedEffect,isRequired:null==this.includedEffect}}}},_={name:"showExcludedLabels",default:!0};let A=g=class extends l.wq{constructor(e){super(e),this.filter=null,this.includedEffect=null,this.excludedEffect=null,this.excludedLabelsVisible=!1}write(e,t){const i=super.write(e,t);if(t?.origin){if(i.filter){const e=Object.keys(i.filter);if(e.length>1||"where"!==e[0])return t.messages?.push(new o.Z("web-document-write:unsupported-feature-effect","Invalid feature effect 'filter'. A filter can only contain a 'where' property",{layer:t.layer,effect:this})),null}if("showExcludedLabels"in i)return t.messages?.push(new o.Z("web-document-write:unsupported-feature-effect","Invalid value for property 'excludedLabelsVisible' which should always be 'true'",{layer:t.layer,effect:this})),null}return i}clone(){return new g({filter:null!=this.filter?this.filter.clone():null,includedEffect:this.includedEffect,excludedEffect:this.excludedEffect,excludedLabelsVisible:this.excludedLabelsVisible})}};(0,a._)([(0,n.Cb)({type:b,json:{write:{allowNull:!0,writer(e,t,i,r){const a=e?.write({},r);a&&0!==Object.keys(a).length?(0,d.RB)(i,a,t):(0,d.RB)(i,null,t)}}}})],A.prototype,"filter",void 0),(0,a._)([(0,n.Cb)({json:{write:!0,origins:{"web-map":v,"portal-item":v}}})],A.prototype,"includedEffect",void 0),(0,a._)([(0,n.Cb)({json:{write:!0,origins:{"web-map":w,"portal-item":w}}})],A.prototype,"excludedEffect",void 0),(0,a._)([(0,n.Cb)({type:Boolean,json:{write:!0,name:"showExcludedLabels",origins:{"web-map":_,"portal-item":_}}})],A.prototype,"excludedLabelsVisible",void 0),A=g=(0,a._)([(0,s.j)("esri.layers.support.FeatureEffect")],A);const C=A,E={write:{allowNull:!0}},x=e=>{let t=class extends e{constructor(){super(...arguments),this.featureEffect=null}};return(0,a._)([(0,n.Cb)({type:C,json:{origins:{"web-map":E,"portal-item":E}}})],t.prototype,"featureEffect",void 0),t=(0,a._)([(0,s.j)("esri.layers.mixins.FeatureEffectLayer")],t),t}},50386:(e,t,i)=>{i.d(t,{c:()=>h});var r,a=i(36663),n=i(86745),s=i(81977),o=(i(7283),i(7753),i(39994),i(40266)),l=i(25709),d=i(82064);const u=new l.X({asc:"ascending",desc:"descending"});let p=r=class extends d.wq{constructor(e){super(e),this.field=null,this.valueExpression=null,this.order="ascending"}clone(){return new r({field:this.field,valueExpression:this.valueExpression,order:this.order})}};(0,a._)([(0,s.Cb)({type:String,json:{write:!0}})],p.prototype,"field",void 0),(0,a._)([(0,s.Cb)({type:String,json:{write:!0}})],p.prototype,"valueExpression",void 0),(0,a._)([(0,s.Cb)({type:u.apiValues,json:{read:u.read,write:u.write}})],p.prototype,"order",void 0),p=r=(0,a._)([(0,o.j)("esri.layers.support.OrderByInfo")],p);const c=p;function m(e,t,i){if(!e)return null;const r=e.find((e=>!!e.field));if(!r)return null;const a=new c;return a.read(r,i),[a]}function y(e,t,i,r){const a=e.find((e=>!!e.field));a&&(0,n.RB)(i,[a.toJSON()],t)}const h=e=>{let t=class extends e{constructor(){super(...arguments),this.orderBy=null}};return(0,a._)([(0,s.Cb)({type:[c],json:{origins:{"web-scene":{write:!1,read:!1}},read:{source:"layerDefinition.orderBy",reader:m},write:{target:"layerDefinition.orderBy",writer:y}}})],t.prototype,"orderBy",void 0),t=(0,a._)([(0,o.j)("esri.layers.mixins.OrderedLayer")],t),t}},2030:(e,t,i)=>{i.d(t,{n:()=>c});var r=i(36663),a=i(37956),n=i(74589),s=i(81977),o=(i(7283),i(7753),i(39994),i(34248)),l=i(40266),d=i(17095),u=i(23756),p=i(80680);const c=e=>{let t=class extends e{constructor(){super(...arguments),this.timeExtent=null,this.timeOffset=null,this.useViewTime=!0}readOffset(e,t){const i=t.timeInfo.exportOptions;if(!i)return null;const r=i.timeOffset,a=p.v.fromJSON(i.timeOffsetUnits);return r&&a?new n.Z({value:r,unit:a}):null}set timeInfo(e){(0,d.UF)(e,this.fieldsIndex),this._set("timeInfo",e)}};return(0,r._)([(0,s.Cb)({type:a.Z,json:{write:!1}})],t.prototype,"timeExtent",void 0),(0,r._)([(0,s.Cb)({type:n.Z})],t.prototype,"timeOffset",void 0),(0,r._)([(0,o.r)("service","timeOffset",["timeInfo.exportOptions"])],t.prototype,"readOffset",null),(0,r._)([(0,s.Cb)({value:null,type:u.Z,json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],t.prototype,"timeInfo",null),(0,r._)([(0,s.Cb)({type:Boolean,json:{read:{source:"timeAnimation"},write:{target:"timeAnimation"},origins:{"web-scene":{read:!1,write:!1}}}})],t.prototype,"useViewTime",void 0),t=(0,r._)([(0,l.j)("esri.layers.mixins.TemporalLayer")],t),t}},12512:(e,t,i)=>{i.d(t,{Z:()=>f});var r,a=i(36663),n=i(25709),s=i(82064),o=i(81977),l=i(7283),d=(i(7753),i(39994),i(79438)),u=i(34248),p=i(40266),c=i(60248),m=i(86349);const y=new n.X({binary:"binary",coordinate:"coordinate",countOrAmount:"count-or-amount",dateAndTime:"date-and-time",description:"description",locationOrPlaceName:"location-or-place-name",measurement:"measurement",nameOrTitle:"name-or-title",none:"none",orderedOrRanked:"ordered-or-ranked",percentageOrRatio:"percentage-or-ratio",typeOrCategory:"type-or-category",uniqueIdentifier:"unique-identifier"});let h=r=class extends s.wq{constructor(e){super(e),this.alias=null,this.defaultValue=void 0,this.description=null,this.domain=null,this.editable=!0,this.length=-1,this.name=null,this.nullable=!0,this.type=null,this.valueType=null,this.visible=!0}readDescription(e,{description:t}){let i=null;try{i=t?JSON.parse(t):null}catch(e){}return i?.value??null}readValueType(e,{description:t}){let i=null;try{i=t?JSON.parse(t):null}catch(e){}return i?y.fromJSON(i.fieldValueType):null}clone(){return new r({alias:this.alias,defaultValue:this.defaultValue,description:this.description,domain:this.domain&&this.domain.clone()||null,editable:this.editable,length:this.length,name:this.name,nullable:this.nullable,type:this.type,valueType:this.valueType,visible:this.visible})}};(0,a._)([(0,o.Cb)({type:String,json:{write:!0}})],h.prototype,"alias",void 0),(0,a._)([(0,o.Cb)({type:[String,Number],json:{write:{allowNull:!0}}})],h.prototype,"defaultValue",void 0),(0,a._)([(0,o.Cb)()],h.prototype,"description",void 0),(0,a._)([(0,u.r)("description")],h.prototype,"readDescription",null),(0,a._)([(0,o.Cb)({types:c.V5,json:{read:{reader:c.im},write:!0}})],h.prototype,"domain",void 0),(0,a._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],h.prototype,"editable",void 0),(0,a._)([(0,o.Cb)({type:l.z8,json:{write:!0}})],h.prototype,"length",void 0),(0,a._)([(0,o.Cb)({type:String,json:{write:!0}})],h.prototype,"name",void 0),(0,a._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],h.prototype,"nullable",void 0),(0,a._)([(0,d.J)(m.v)],h.prototype,"type",void 0),(0,a._)([(0,o.Cb)()],h.prototype,"valueType",void 0),(0,a._)([(0,u.r)("valueType",["description"])],h.prototype,"readValueType",null),(0,a._)([(0,o.Cb)({type:Boolean,json:{read:!1}})],h.prototype,"visible",void 0),h=r=(0,a._)([(0,p.j)("esri.layers.support.Field")],h);const f=h},28790:(e,t,i)=>{i.d(t,{Z:()=>s});var r=i(17095);function a(e){return"oid"===e.type||"esriFieldTypeOID"===e.type}function n(e){return"global-id"===e.type||"esriFieldTypeGlobalID"===e.type}class s{constructor(e=[]){if(this.fields=[],this._fieldsMap=new Map,this._normalizedFieldsMap=new Map,this._dateFieldsSet=new Set,this._numericFieldsSet=new Set,this.dateFields=[],this.numericFields=[],this._requiredFields=null,!e)return;this.fields=e;const t=[];for(const s of e){const e=s?.name,d=l(s?.name);if(e&&d){const l=o(e);this._fieldsMap.set(e,s),this._fieldsMap.set(l,s),this._normalizedFieldsMap.set(d,s),t.push(l),"date"===(i=s).type||"esriFieldTypeDate"===i.type||"date-only"===i.type||"esriFieldTypeDateOnly"===i.type||"timestamp-offset"===i.type||"esriFieldTypeTimestampOffset"===i.type?(this.dateFields.push(s),this._dateFieldsSet.add(s)):(0,r.H7)(s)&&(this._numericFieldsSet.add(s),this.numericFields.push(s)),a(s)||n(s)||(s.editable=null==s.editable||!!s.editable,s.nullable=null==s.nullable||!!s.nullable)}}var i;t.sort(),this.uid=t.join(",")}destroy(){this._fieldsMap.clear()}get requiredFields(){if(!this._requiredFields){this._requiredFields=[];for(const e of this.fields)a(e)||n(e)||e.nullable||void 0!==(0,r.os)(e)||this._requiredFields.push(e)}return this._requiredFields}has(e){return null!=this.get(e)}get(e){if(!e)return;let t=this._fieldsMap.get(e);return t||(t=this._fieldsMap.get(o(e))??this._normalizedFieldsMap.get(l(e)),t&&this._fieldsMap.set(e,t),t)}isDateField(e){return this._dateFieldsSet.has(this.get(e))}isNumericField(e){return this._numericFieldsSet.has(this.get(e))}normalizeFieldName(e){const t=this.get(e);if(t)return t.name??void 0}}function o(e){return e.trim().toLowerCase()}function l(e){return(0,r.q6)(e)?.toLowerCase()??""}},23756:(e,t,i)=>{i.d(t,{Z:()=>h});var r=i(36663),a=i(37956),n=i(74589),s=i(41151),o=i(82064),l=i(81977),d=(i(7283),i(7753),i(39994),i(34248)),u=i(40266),p=i(39835),c=i(9593);function m(e,t){return n.Z.fromJSON({value:e,unit:t})}let y=class extends((0,s.J)(o.wq)){constructor(e){super(e),this.cumulative=!1,this.endField=null,this.fullTimeExtent=null,this.hasLiveData=!1,this.interval=null,this.startField=null,this.timeReference=null,this.trackIdField=null,this.useTime=!0}readFullTimeExtent(e,t){if(!t.timeExtent||!Array.isArray(t.timeExtent)||2!==t.timeExtent.length)return null;const i=new Date(t.timeExtent[0]),r=new Date(t.timeExtent[1]);return new a.Z({start:i,end:r})}writeFullTimeExtent(e,t){e&&null!=e.start&&null!=e.end?t.timeExtent=[e.start.getTime(),e.end.getTime()]:t.timeExtent=null}readInterval(e,t){return t.timeInterval&&t.timeIntervalUnits?m(t.timeInterval,t.timeIntervalUnits):t.defaultTimeInterval&&t.defaultTimeIntervalUnits?m(t.defaultTimeInterval,t.defaultTimeIntervalUnits):null}writeInterval(e,t){t.timeInterval=e?.toJSON().value??null,t.timeIntervalUnits=e?.toJSON().unit??null}};(0,r._)([(0,l.Cb)({type:Boolean,json:{name:"exportOptions.timeDataCumulative",write:!0}})],y.prototype,"cumulative",void 0),(0,r._)([(0,l.Cb)({type:String,json:{name:"endTimeField",write:{enabled:!0,allowNull:!0}}})],y.prototype,"endField",void 0),(0,r._)([(0,l.Cb)({type:a.Z,json:{write:{enabled:!0,allowNull:!0}}})],y.prototype,"fullTimeExtent",void 0),(0,r._)([(0,d.r)("fullTimeExtent",["timeExtent"])],y.prototype,"readFullTimeExtent",null),(0,r._)([(0,p.c)("fullTimeExtent")],y.prototype,"writeFullTimeExtent",null),(0,r._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],y.prototype,"hasLiveData",void 0),(0,r._)([(0,l.Cb)({type:n.Z,json:{write:{enabled:!0,allowNull:!0}}})],y.prototype,"interval",void 0),(0,r._)([(0,d.r)("interval",["timeInterval","timeIntervalUnits","defaultTimeInterval","defaultTimeIntervalUnits"])],y.prototype,"readInterval",null),(0,r._)([(0,p.c)("interval")],y.prototype,"writeInterval",null),(0,r._)([(0,l.Cb)({type:String,json:{name:"startTimeField",write:{enabled:!0,allowNull:!0}}})],y.prototype,"startField",void 0),(0,r._)([(0,l.Cb)({type:c.Z,json:{write:{enabled:!0,allowNull:!0}}})],y.prototype,"timeReference",void 0),(0,r._)([(0,l.Cb)({type:String,json:{write:{enabled:!0,allowNull:!0}}})],y.prototype,"trackIdField",void 0),(0,r._)([(0,l.Cb)({type:Boolean,json:{name:"exportOptions.useTime",write:!0}})],y.prototype,"useTime",void 0),y=(0,r._)([(0,u.j)("esri.layers.support.TimeInfo")],y);const h=y},60248:(e,t,i)=>{i.d(t,{im:()=>A,V5:()=>_}),i(39994);var r,a=i(36663),n=i(67134),s=i(81977),o=(i(7283),i(79438)),l=i(40266),d=i(82064);i(7753);let u=r=class extends d.wq{constructor(e){super(e),this.name=null,this.code=null}clone(){return new r({name:this.name,code:this.code})}};(0,a._)([(0,s.Cb)({type:String,json:{write:!0}})],u.prototype,"name",void 0),(0,a._)([(0,s.Cb)({type:[String,Number],json:{write:!0}})],u.prototype,"code",void 0),u=r=(0,a._)([(0,l.j)("esri.layers.support.CodedValue")],u);const p=new(i(25709).X)({inherited:"inherited",codedValue:"coded-value",range:"range"});let c=class extends d.wq{constructor(e){super(e),this.name=null,this.type=null}};(0,a._)([(0,s.Cb)({type:String,json:{write:!0}})],c.prototype,"name",void 0),(0,a._)([(0,o.J)(p)],c.prototype,"type",void 0),c=(0,a._)([(0,l.j)("esri.layers.support.Domain")],c);const m=c;var y;let h=y=class extends m{constructor(e){super(e),this.codedValues=null,this.type="coded-value"}getName(e){let t=null;if(this.codedValues){const i=String(e);this.codedValues.some((e=>(String(e.code)===i&&(t=e.name),!!t)))}return t}clone(){return new y({codedValues:(0,n.d9)(this.codedValues),name:this.name})}};(0,a._)([(0,s.Cb)({type:[u],json:{write:!0}})],h.prototype,"codedValues",void 0),(0,a._)([(0,o.J)({codedValue:"coded-value"})],h.prototype,"type",void 0),h=y=(0,a._)([(0,l.j)("esri.layers.support.CodedValueDomain")],h);const f=h;var S;i(13802),i(70375);let T=S=class extends m{constructor(e){super(e),this.type="inherited"}clone(){return new S}};(0,a._)([(0,o.J)({inherited:"inherited"})],T.prototype,"type",void 0),T=S=(0,a._)([(0,l.j)("esri.layers.support.InheritedDomain")],T);const b=T;var g;let v=g=class extends m{constructor(e){super(e),this.maxValue=null,this.minValue=null,this.type="range"}clone(){return new g({maxValue:this.maxValue,minValue:this.minValue,name:this.name})}};(0,a._)([(0,s.Cb)({type:Number,json:{type:[Number],read:{source:"range",reader:(e,t)=>t.range&&t.range[1]},write:{enabled:!1,overridePolicy(){return{enabled:null!=this.maxValue&&null==this.minValue}},target:"range",writer(e,t,i){t[i]=[this.minValue||0,e]}}}})],v.prototype,"maxValue",void 0),(0,a._)([(0,s.Cb)({type:Number,json:{type:[Number],read:{source:"range",reader:(e,t)=>t.range&&t.range[0]},write:{target:"range",writer(e,t,i){t[i]=[e,this.maxValue||0]}}}})],v.prototype,"minValue",void 0),(0,a._)([(0,o.J)({range:"range"})],v.prototype,"type",void 0),v=g=(0,a._)([(0,l.j)("esri.layers.support.RangeDomain")],v);const w=v,_={key:"type",base:m,typeMap:{range:v,"coded-value":f,inherited:b}};function A(e){if(!e||!e.type)return null;switch(e.type){case"range":return w.fromJSON(e);case"codedValue":return f.fromJSON(e);case"inherited":return b.fromJSON(e)}return null}},86349:(e,t,i)=>{i.d(t,{v:()=>r});const r=new(i(25709).X)({esriFieldTypeSmallInteger:"small-integer",esriFieldTypeInteger:"integer",esriFieldTypeSingle:"single",esriFieldTypeDouble:"double",esriFieldTypeLong:"long",esriFieldTypeString:"string",esriFieldTypeDate:"date",esriFieldTypeOID:"oid",esriFieldTypeGeometry:"geometry",esriFieldTypeBlob:"blob",esriFieldTypeRaster:"raster",esriFieldTypeGUID:"guid",esriFieldTypeGlobalID:"global-id",esriFieldTypeXML:"xml",esriFieldTypeBigInteger:"big-integer",esriFieldTypeDateOnly:"date-only",esriFieldTypeTimeOnly:"time-only",esriFieldTypeTimestampOffset:"timestamp-offset"})},80680:(e,t,i)=>{i.d(t,{v:()=>r});const r=(0,i(25709).w)()({esriTimeUnitsMilliseconds:"milliseconds",esriTimeUnitsSeconds:"seconds",esriTimeUnitsMinutes:"minutes",esriTimeUnitsHours:"hours",esriTimeUnitsDays:"days",esriTimeUnitsWeeks:"weeks",esriTimeUnitsMonths:"months",esriTimeUnitsYears:"years",esriTimeUnitsDecades:"decades",esriTimeUnitsCenturies:"centuries",esriTimeUnitsUnknown:void 0})},86094:(e,t,i)=>{i.d(t,{ET:()=>n,I4:()=>a,eG:()=>l,lF:()=>s,lj:()=>u,qP:()=>o,wW:()=>d});const r=[252,146,31,255],a={type:"esriSMS",style:"esriSMSCircle",size:6,color:r,outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[153,153,153,255]}},n={type:"esriSLS",style:"esriSLSSolid",width:.75,color:r},s={type:"esriSFS",style:"esriSFSSolid",color:[252,146,31,196],outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[255,255,255,191]}},o={type:"esriTS",color:[255,255,255,255],font:{family:"arial-unicode-ms",size:10,weight:"bold"},horizontalAlignment:"center",kerning:!0,haloColor:[0,0,0,255],haloSize:1,rotated:!1,text:"",xoffset:0,yoffset:0,angle:0},l={type:"esriSMS",style:"esriSMSCircle",color:[0,0,0,255],outline:null,size:10.5},d={type:"esriSLS",style:"esriSLSSolid",color:[0,0,0,255],width:1.5},u={type:"esriSFS",style:"esriSFSSolid",color:[0,0,0,255],outline:null}},9593:(e,t,i)=>{i.d(t,{Z:()=>c});var r=i(36663),a=i(41151),n=i(82064),s=i(81977),o=(i(7283),i(7753),i(39994),i(34248)),l=i(40266),d=i(39835),u=i(25302);let p=class extends((0,a.J)(n.wq)){constructor(e){super(e),this.legacy=null,this.timeZone="system"}readLegacy(e,t){const{timeZone:i,respectsDaylightSaving:r}=t;return{timeZone:i,respectsDaylightSaving:r}}readTimeZone(e,t){return"timeZoneIANA"in t?t.timeZoneIANA:(0,u.G)(t)}writeTimeZone(e,t){t.timeZoneIANA=e}equals(e){return null!=e&&null!=this.timeZone&&null!=e.timeZone&&this.timeZone===e.timeZone}};(0,r._)([(0,s.Cb)()],p.prototype,"legacy",void 0),(0,r._)([(0,o.r)("legacy",["timeZone"])],p.prototype,"readLegacy",null),(0,r._)([(0,s.Cb)({type:String,nonNullable:!0})],p.prototype,"timeZone",void 0),(0,r._)([(0,o.r)("timeZone",["timeZone","timeZoneIANA","respectsDaylightSaving"])],p.prototype,"readTimeZone",null),(0,r._)([(0,d.c)("timeZone")],p.prototype,"writeTimeZone",null),p=(0,r._)([(0,l.j)("esri.time.TimeReference")],p);const c=p},25302:(e,t,i)=>{i.d(t,{G:()=>n});const r=new Map([["AUS Central Standard Time","Australia/Darwin"],["AUS Eastern Standard Time","Australia/Sydney"],["Afghanistan Standard Time","Asia/Kabul"],["Alaskan Standard Time","America/Anchorage"],["Aleutian Standard Time","America/Adak"],["Altai Standard Time","Asia/Barnaul"],["Arab Standard Time","Asia/Riyadh"],["Arabian Standard Time","Asia/Dubai"],["Arabic Standard Time","Asia/Baghdad"],["Argentina Standard Time","America/Buenos_Aires"],["Astrakhan Standard Time","Europe/Astrakhan"],["Atlantic Standard Time","America/Halifax"],["Aus Central W. Standard Time","Australia/Eucla"],["Azerbaijan Standard Time","Asia/Baku"],["Azores Standard Time","Atlantic/Azores"],["Bahia Standard Time","America/Bahia"],["Bangladesh Standard Time","Asia/Dhaka"],["Belarus Standard Time","Europe/Minsk"],["Bougainville Standard Time","Pacific/Bougainville"],["Canada Central Standard Time","America/Regina"],["Cape Verde Standard Time","Atlantic/Cape_Verde"],["Caucasus Standard Time","Asia/Yerevan"],["Cen. Australia Standard Time","Australia/Adelaide"],["Central America Standard Time","America/Guatemala"],["Central Asia Standard Time","Asia/Almaty"],["Central Brazilian Standard Time","America/Cuiaba"],["Central Europe Standard Time","Europe/Budapest"],["Central European Standard Time","Europe/Warsaw"],["Central Pacific Standard Time","Pacific/Guadalcanal"],["Central Standard Time","America/Chicago"],["Central Standard Time (Mexico)","America/Mexico_City"],["Chatham Islands Standard Time","Pacific/Chatham"],["China Standard Time","Asia/Shanghai"],["Cuba Standard Time","America/Havana"],["Dateline Standard Time","Etc/GMT+12"],["E. Africa Standard Time","Africa/Nairobi"],["E. Australia Standard Time","Australia/Brisbane"],["E. Europe Standard Time","Europe/Chisinau"],["E. South America Standard Time","America/Sao_Paulo"],["Easter Island Standard Time","Pacific/Easter"],["Eastern Standard Time","America/New_York"],["Eastern Standard Time (Mexico)","America/Cancun"],["Egypt Standard Time","Africa/Cairo"],["Ekaterinburg Standard Time","Asia/Yekaterinburg"],["FLE Standard Time","Europe/Kiev"],["Fiji Standard Time","Pacific/Fiji"],["GMT Standard Time","Europe/London"],["GTB Standard Time","Europe/Bucharest"],["Georgian Standard Time","Asia/Tbilisi"],["Greenland Standard Time","America/Godthab"],["Greenwich Standard Time","Atlantic/Reykjavik"],["Haiti Standard Time","America/Port-au-Prince"],["Hawaiian Standard Time","Pacific/Honolulu"],["India Standard Time","Asia/Calcutta"],["Iran Standard Time","Asia/Tehran"],["Israel Standard Time","Asia/Jerusalem"],["Jordan Standard Time","Asia/Amman"],["Kaliningrad Standard Time","Europe/Kaliningrad"],["Korea Standard Time","Asia/Seoul"],["Libya Standard Time","Africa/Tripoli"],["Line Islands Standard Time","Pacific/Kiritimati"],["Lord Howe Standard Time","Australia/Lord_Howe"],["Magadan Standard Time","Asia/Magadan"],["Magallanes Standard Time","America/Punta_Arenas"],["Marquesas Standard Time","Pacific/Marquesas"],["Mauritius Standard Time","Indian/Mauritius"],["Middle East Standard Time","Asia/Beirut"],["Montevideo Standard Time","America/Montevideo"],["Morocco Standard Time","Africa/Casablanca"],["Mountain Standard Time","America/Denver"],["Mountain Standard Time (Mexico)","America/Mazatlan"],["Myanmar Standard Time","Asia/Rangoon"],["N. Central Asia Standard Time","Asia/Novosibirsk"],["Namibia Standard Time","Africa/Windhoek"],["Nepal Standard Time","Asia/Katmandu"],["New Zealand Standard Time","Pacific/Auckland"],["Newfoundland Standard Time","America/St_Johns"],["Norfolk Standard Time","Pacific/Norfolk"],["North Asia East Standard Time","Asia/Irkutsk"],["North Asia Standard Time","Asia/Krasnoyarsk"],["North Korea Standard Time","Asia/Pyongyang"],["Omsk Standard Time","Asia/Omsk"],["Pacific SA Standard Time","America/Santiago"],["Pacific Standard Time","America/Los_Angeles"],["Pacific Standard Time (Mexico)","America/Tijuana"],["Pakistan Standard Time","Asia/Karachi"],["Paraguay Standard Time","America/Asuncion"],["Qyzylorda Standard Time","Asia/Qyzylorda"],["Romance Standard Time","Europe/Paris"],["Russia Time Zone 10","Asia/Srednekolymsk"],["Russia Time Zone 11","Asia/Kamchatka"],["Russia Time Zone 3","Europe/Samara"],["Russian Standard Time","Europe/Moscow"],["SA Eastern Standard Time","America/Cayenne"],["SA Pacific Standard Time","America/Bogota"],["SA Western Standard Time","America/La_Paz"],["SE Asia Standard Time","Asia/Bangkok"],["Saint Pierre Standard Time","America/Miquelon"],["Sakhalin Standard Time","Asia/Sakhalin"],["Samoa Standard Time","Pacific/Apia"],["Sao Tome Standard Time","Africa/Sao_Tome"],["Saratov Standard Time","Europe/Saratov"],["Singapore Standard Time","Asia/Singapore"],["South Africa Standard Time","Africa/Johannesburg"],["South Sudan Standard Time","Africa/Juba"],["Sri Lanka Standard Time","Asia/Colombo"],["Sudan Standard Time","Africa/Khartoum"],["Syria Standard Time","Asia/Damascus"],["Taipei Standard Time","Asia/Taipei"],["Tasmania Standard Time","Australia/Hobart"],["Tocantins Standard Time","America/Araguaina"],["Tokyo Standard Time","Asia/Tokyo"],["Tomsk Standard Time","Asia/Tomsk"],["Tonga Standard Time","Pacific/Tongatapu"],["Transbaikal Standard Time","Asia/Chita"],["Turkey Standard Time","Europe/Istanbul"],["Turks And Caicos Standard Time","America/Grand_Turk"],["US Eastern Standard Time","America/Indianapolis"],["US Mountain Standard Time","America/Phoenix"],["UTC","Etc/GMT"],["UTC+01","Etc/GMT-1"],["UTC+02","Etc/GMT-2"],["UTC+03","Etc/GMT-3"],["UTC+04","Etc/GMT-4"],["UTC+05","Etc/GMT-5"],["UTC+06","Etc/GMT-6"],["UTC+07","Etc/GMT-7"],["UTC+08","Etc/GMT-8"],["UTC+09","Etc/GMT-9"],["UTC+10","Etc/GMT-10"],["UTC+11","Etc/GMT-11"],["UTC+12","Etc/GMT-12"],["UTC+13","Etc/GMT-13"],["UTC+14","Etc/GMT-14"],["UTC-01","Etc/GMT+1"],["UTC-02","Etc/GMT+2"],["UTC-03","Etc/GMT+3"],["UTC-04","Etc/GMT+4"],["UTC-05","Etc/GMT+5"],["UTC-06","Etc/GMT+6"],["UTC-07","Etc/GMT+7"],["UTC-08","Etc/GMT+8"],["UTC-09","Etc/GMT+9"],["UTC-10","Etc/GMT+10"],["UTC-11","Etc/GMT+11"],["UTC-12","Etc/GMT+12"],["Ulaanbaatar Standard Time","Asia/Ulaanbaatar"],["Venezuela Standard Time","America/Caracas"],["Vladivostok Standard Time","Asia/Vladivostok"],["Volgograd Standard Time","Europe/Volgograd"],["W. Australia Standard Time","Australia/Perth"],["W. Central Africa Standard Time","Africa/Lagos"],["W. Europe Standard Time","Europe/Berlin"],["W. Mongolia Standard Time","Asia/Hovd"],["West Asia Standard Time","Asia/Tashkent"],["West Bank Standard Time","Asia/Hebron"],["West Pacific Standard Time","Pacific/Port_Moresby"],["Yakutsk Standard Time","Asia/Yakutsk"],["Yukon Standard Time","America/Whitehorse"]]);var a=i(17126);function n(e,t="system"){if(!e||!r.has(e.timeZone))return t;const i=r.get(e.timeZone);return e.timeZone.startsWith("UTC")||e.respectsDaylightSaving?i:function(e){const t=a.ou.local().setZone(e),i=Math.min(t.set({month:1,day:1}).offset,t.set({month:5}).offset);return 0===i?"Etc/UTC":`Etc/GMT${a.Qf.instance(-i).formatOffset(0,"narrow")}`}(i)}}}]);